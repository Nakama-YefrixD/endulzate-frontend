{"version":3,"sources":["Constantes/EstadoRequest/EstadoRequest.js","Redux/Reducers/EstadoRequest.js","Constantes/Login/Login.js","Redux/Reducers/Login/Login.js","Constantes/Comunes/Comunes.js","Redux/Reducers/Comunes/Comunes.js","Redux/Reducers/index.js","Redux/Store/index.js","Assets/assetsLogin/images/bg-01.jpg","config.js","Redux/Actions/Comunes/Comunes.js","Redux/Actions/EstadoRequest.js","Redux/Actions/Login/Login.js","Container/Login/BtnEnviarLogin.js","Container/Login/Login.js","Rutas/extras/loading.js","Rutas/partials/topNav/cerrarCajaVenta.js","Rutas/extras/confirmarFuncion.js","Assets/assetsAdminTemplate/assets/images/logos/logo-icon.png","Assets/assetsAdminTemplate/assets/images/logos/logo-light-icon.png","Assets/assetsAdminTemplate/assets/images/logos/logo-text.png","Assets/assetsAdminTemplate/assets/images/logos/logo-light-text.png","Assets/assetsAdminTemplate/assets/images/users/1.jpg","Rutas/partials/topNav/BtnCerrarSesion.js","Rutas/partials/topNav/top.js","Rutas/partials/sidebar.js","Rutas/partials/footer.js","Rutas/almacenes/componentsExtras/listProductComponent.js","Rutas/almacenes/EntradaCrear.js","Rutas/almacenes/componentsExtras/cerrarCaja.js","Rutas/almacenes/Almacen.js","Rutas/almacenes/Entrada.js","Rutas/almacenes/Marca.js","Rutas/almacenes/Proveedores.js","Rutas/almacenes/Tipoproducto.js","Rutas/almacenes/queso.js","Rutas/extras/agregarBotones.js","Rutas/Configuracion/descuentos/tabla/tb_descuentos.js","Rutas/Configuracion/descuentos/index.js","Rutas/Configuracion/Usuario.js","Rutas/Configuracion/Reportes/Botones.js","Rutas/Configuracion/Reportes/Tabla.js","Rutas/Configuracion/Reportes/Graficos.js","Rutas/Configuracion/Reportes/Reportes.js","Rutas/ventas/ventaBoleta.js","Rutas/ventas/ventaFactura.js","Rutas/ventas/venta/productoAddDetalle.js","Rutas/ventas/venta/nuevaVenta.js","Rutas/ventas/eliminarVenta.js","Rutas/ventas/ImprimirVenta.js","Rutas/ventas/Venta.js","Rutas/ventas/ventasDetalladas/index.js","Rutas/transferencias/modalDeclararTransferencia/index.js","Rutas/transferencias/tabla/tb_transferencias.js","Rutas/transferencias/tabla/buscadores_tb_transferencias.js","Rutas/transferencias/index.js","Rutas/caja/gestionarCajas/tabla/tb_filas_cajasVentas.js","Rutas/caja/gestionarCajas/tabla/tb_cajasVentas.js","Rutas/caja/gestionarCajas/index.js","Rutas/caja/gestionarGastos/tabla/tb_gastos.js","Rutas/caja/gestionarGastos/index.js","Rutas/caja/gestionarIngresos/tabla/tb_ingesos.js","Rutas/caja/gestionarIngresos/index.js","Rutas/Configuracion/cargaArchivos/index.js","Rutas/almacenes/CargarData/CargarData.js","Rutas/index.js","Container/App/App.js","SiguienteApp.js","serviceWorkerRegistration.ts","reportWebVitals.js","index.tsx"],"names":["ESTADO_REQUEST_EXITO","ESTADO_REQUEST_NO_AUTORIZADO","ESTADO_REQUEST_NO_EXISTE","ESTADO_REQUEST_ERROR_SERVIDOR","ESTADO_REQUEST_DESCONOCIDO","INIT_STATE","init_estadoRequest","init_request","state","action","type","payload","MOSTRAR_FORMULARIO_LOGIN","OBTENER_LOGIN","mostrarFormularioLogin","cargando","LoginUsuid","localStorage","getItem","LoginUsuario","usuid","usuario","COMUNES_CARGANDO_PAGINA","COMUNES_MOSTRAR_MENU","COMUNES_CARGANDO_PAGINA_INICIO","ComunesCargandoPagina","ComunesCargandoPaginaInicio","ComunesMostrarMenu","ComunesOcultarMenu","mostrarmenu","ocultarmenu","createRootReducer","history","combineReducers","router","connectRouter","estadoRequest","EstadoRequest","login","Login","comunes","Comunes","createBrowserHistory","require","routeMiddleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","CargandoPaginaReducer","accion","CargandoPaginaInicioReducer","estadoRequestReducer","estado","dispatch","LoginReducer","getState","a","respuesta","mensaje","fetch","config","mode","method","body","JSON","stringify","headers","then","res","status","json","data","setItem","contrasenia","datos","usutoken","usuusuario","pernombre","catch","error","console","log","BtnEnviarLogin","props","useDispatch","addToast","useToasts","enviarData","appearance","autoDismiss","location","reload","class","onClick","input_usuario","input_contrasenia","e","variable","target","name","this","setState","value","data-validate","id","placeholder","onChange","capturarCambioInput","href","style","backgroundImage","bg01","Component","Loading","color","height","width","timeout","React","CerrarCajaVentaComponente","totalCerro","observacionesCierre","colorToastDanger","colorToastSuccess","imprimir","mostrarErrorInput","getCambioTotalCerro","bind","getCambioObservacionCierre","activarConfirmacion","sendCierreCajaVenta","totalCierre","numeroImpresion","titulo","descripcion","funcion","modalCerrarCajaVenta","confirmAlert","customUI","onClose","className","cogoToast","loading","position","idCajaVenta","response","success","url","getEstadoCajaVent","sucursalNombre","usuarioNombre","totalApertura","totalAperturo","loadModalCierreCajaVenta","autoFocus","rows","BtnCerrarSesion","removeItem","Top","observacionesApertura","registrarGastoIngreso","motivoGastoIngreso","estadoCajaVenta","cerrarAbrirCajaVenta","txt_btn_abriCerrarCaja","estadoModalAbrirCajaVenta","estadoModalCerrarCajaVenta","estadoModalRegistrarGasto","estadoModalRegistrarIngreso","estadoToast","mensajeToast","colorToast","modalAbrirCajaVenta","abrirCerrarCajaVenta","getCambioTotalAperturo","getCambioObservacion","sendAbrirCaja","sendRegistrarGasto","modalRegistrarGasto","getCambioGastoIngreso","getCambioMotivoGastoIngreso","sendRegistrarIngreso","modalRegistrarIngreso","activarToast","getTotalCierreCajaVenta","texto","contenedor","document","querySelector","classList","remove","add","cajaVenta","message","src","LogoIcon","alt","LogoLightIcon","LogoText","LogoTextLight","data-sidebartype","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","User1","Modal","size","show","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Toast","top","right","zIndex","backgroundColor","delay","autohide","Sidebar","fetchLogout","to","Footer","ListProductComponent","precio","cantidad","importe","handleChange","onKeyDown","handleKeyDown","onFocus","handleScope","number","pattern","precioProductoChild","data-type","cantidadProductoChild","stock","importeChild","quitarOpcion","EntradaCrear","contador","contadorNumero","nada","numerox","modo","nombreProducto","precioProducto","scopeNumero","tasks","proveedores","code","estadoModalProducto","estadoToastRed","estadoToastGreen","messageRed","messageGreen","idProducto","nowday","idProveedor","idFactura","datepick","enviarCantidad","enviarPrecioProducto","enviarIdProducto","precio_array","cantidad_array","idProducto_array","idMarca","idTipo","precioVentaProducto","codigoProductoNuevo","nombreProductoNuevo","tasksM","tasksTP","tiposproductos_tb","marcas_tb","proveedores_t","nuevoTipoProducto","fetchDatos","handleKeyDown2","scope","sendAgregarEntrada","handleChangeTime","quitarScope","date","format","cambiarToastGreen","fetchAgregarTipo","cambiarToastRed","suprimirDatos","operacion","b","x","y","z","q","map","task","push","nombre","Map","obj","values","operacionScope2","operacionScope","marcaProducto","tipoProducto","generateComponents","cambiarModalProducto","numero","forEach","array","index","findIndex","i","splice","k","length","codigoProducto","producto","proveedor","factura","fecha","addContainer","operacionClean","key","comprobarCode","comprobarCodeProducto","p","calculo","locale","selected","defaultChecked","sendAgregarTipoProducto","element","sendAgregarProducto","CerrarCaja","estadoModalCerrarCaja","cambiarModalCerrarCaja","codigoCerrarCaja","handleKeyDown5","nombreCajaCerrarCaja","stockCajaCerrarCaja","cantidadProductosCerrarCaja","precioCajaCerrarCaja","nombreProductoCerrarCaja","stockProductoCerrarCaja","precioProductoCerrarCaja","cantidadCerrarCaja","sendCerrarCaja","registerLocale","es","Almacen","productos_tb","codigoP","nombreM","nombreT","nombreP","precioP","cantidadP","proveedores_tb","rucProveedor","RUCdatos","telefonoProveedor","nombreProveedor","direccionProveedor","tipoProveedor","estadoModalMarca","estadoModalProveedor","estadoModalEditarProducto","estadoModalCaja","estadoModalAbrirCaja","estadoBoton","estadoQuery","codigoCaja","codigoProductoCaja","idProductoCaja","nombreCaja","cantidadProductosCaja","precioCaja","codeC","codigoAbrirCaja","nombreCajaAbrirCaja","stockCajaAbrirCaja","cantidadProductosAbrirCaja","precioCajaAbrirCaja","nombreProductoAbrirCaja","stockProductoAbrirCaja","precioProductoAbrirCaja","cantidadAbrirCaja","codeAbrirCaja","codeCerrarCaja","fetchTasks","editTask","handleChangeRUC","handleChangeBuscador","handleKeyDown1","handleKeyDown3","handleKeyDown4","datosdeRUC","persona","telefonos","razonSocial","direccion","tipo","agregarBotones","idP","codeP","nameM","nameT","nameP","idM","idT","cantidadProducto","cleanInputs","fechAgregarTipo","codigoCajaProducto","existe","marca_id","tipo_id","nombreMarca","numAbrir","CAJA","PRODUCTO","editarIdProducto","editarCodigoProductoNuevo","editarMarcaProducto","editarTipoProducto","editarNombreProductoNuevo","editarPrecioVentaProducto","last_page","query","fetchQuery","fetchRUC","comprobarCodeProductoCaja","comprobarCodeCaja","comprobarCodeAbrirCaja","comprobarCodeCerrarCaja","cambiarModalCaja","addComponentEntrada","cambiarModalAbrirCaja","cambiarModalMarca","cambiarModalProveedor","nombreTipo","deleteProducto","cambiarModalEditarProducto","cambiarPaginate","sendAgregarCaja","sendAgregarMarca","sendAgregarProveedor","sendEditarProducto","Entrada","entrada_tb","estadoModalEntrada","fechaEntradaDataTabla","fetchEntradaDataTabla","nombreEntrada","codigo","eliminarEntrada","entradaId","cambiarModalEntrada","Marca","csrf_token","marca_tb","editarNombreMarca","editarIdMarca","estadoModalEditarMarca","fetchDataTable","textAlign","cambiarModalEditarMarca","deleteMarca","sendEditarMarca","Proveedores","editarRucProveedor","editarTelefonoProveedor","editarNombreProveedor","editarDireccionProveedor","editarIdProveedor","aRuc","aTipo","aTelefono","aNombreProveedor","aDireccion","estadoModalEditarProveedor","ruc","telf","telefono","cambiarModalEditarProveedor","sendEditarProveedor","Tipoproducto","tiposProductos_tb","nombreTipoProducto","editarNombreTipoProducto","editarIdTipoProducto","estadoModalTipoProducto","estadoModalEditarTipoProducto","cambiarModalTipoProducto","cambiarModalEditarTipoProducto","deleteTipoProducto","sendEditarTipoProducto","Queso","float","lastPage","TB_Descuentos","tb_descuentos","idDescuento","fetchDescuentos","fetchEliminarDescuento","cliente","numeroComprobante","numeroPagina","idDescuentos","title","buttons","label","posicion","codigoProductos","nombreProductos","cantidadDescuentos","porcentajeDescuentos","precioProductos","nuevoPrecioDescuentos","confirmarEliminarTransferencia","Descuento","estadoModalAgregarOferta","idProductoEscaneado","codigoProductoEscaneado","nombreProductoEscaneado","stockProductoEscaneado","precioProductoEscaneado","cantidadOferta","nuevoPrecioOferta","getCambioCodigo","fetchCodigoProducto","getCambioCantidadOferta","getCambioNuevoPrecio","fetchAgregarOferta","modalAgregarOferta","Usuario","usuario_tb","sucursales","sucursalesPArray","editarNombreUsuario","editarIdUsuario","estadoModalAgregarUsuario","estadoModalEditarUsuario","crearNombre","crearPassword","crearUsername","crearSucursales","crearSucursalPredeterminada","editarId","editarNombre","editarUsername","editarPassword","editarSucursales","editarSucursalPredeterminada","dniData","dniUsuario","handleChangeDni","addSucursal","predeterminarSucursal","op","username","predeterminada","pivot","sucursal_id","toString","password","predeterminado","checked","fetchDNI","dniOpe","nombres","apellidoMaterno","apellidoPaterno","cambiarModalAgregarUsuario","s","cambiarModalEditarUsuario","deleteUsuario","htmlFor","sendCrearUsuario","sendEditarUsuario","Botones","generateExcel","Tabla","reporte","movimientos","sucursal","registro","Graficos","quarter","earnings","Reportes","sucursalProducto","codigoProductoSpan","stockActual","entradaTotal","transferenciaEnviadas","transferenciaRecibidas","totalVendido","addBotones","addTabla","addGraficos","generateGraficos","entradasTotales","transferEnviadas","transferRecibidas","ventasTotales","crearRegistros","limpiarRegistros","descargar","blob","link","createElement","URL","createObjectURL","download","click","sendCodigoProducto","VentaBoleta","role","readonly","marginTop","VentaFactura","estadoa","estadob","cambiarb","cambiara","cambio","dataFactura","serie","correlativo","readOnly","data-dismiss","ProductoAddDetalleComponent","calcularSubTotalTotal","buscarCodigoProducto","calcularSubTotalTotalDetalle","autoComplete","cambiarCodigo","descuentoAplicado","descuento","subTotal","total","eliminarProductoDetalle","NuevaVenta","getDni","DNIRUCdatos","getCambioNumeroDocumento","getCambioNombreCliente","cambiarTipoDocumento","cambiarTipoPago","calcularDatosTotalesVenta","cambiarValorFormTemporales","fetchAgregarProductoTemporal","generarVentaInterna","fetchAgregarVenta","getCambioDescuentoVenta","getProductos","seleccionarProductoTb","modalBuscarProducto","cantidadProductosDetalle","observacionVenta","productosDetalleList","tipoDocumentoCliente","numeroDocumentoCliente","nombreCliente","tipoMoneda","fetchDNIRUC","numeroVentasRealizadas","totalVentasRealizadas","tipoDocumento","datosDNIRUC","btn_aceptar","agregarProductoDetalle","datoTemporal","codigoProductoTemporal","nombreProductoTemporal","precioProductoTemporal","numeroProductoDetalle","idLista","stockProducto","subTotalProducto","totalProducto","totalDescuento","arrayProductosDetalle","indexOf","arrayProductosDetalleList","agregarProducto","descuentoVentaRealizado","descuentoVenta","parseFloat","descuentoVentaRealizadoGuardado","precioCalcular","nuevaCantidadOferta","toFixed","igvVenta","subTotalVenta","totalVenta","tipoComprobante","sucursalId","numeroVenta","fetchVentaDataTabla","addNuevaVenta","fechtDataNuevaVenta","variosDescuentos","disponiblesProducto","idVentas","cambiarPagina","EliminarVenta","txt_motivoCancelar","confirmarEliminarVenta","getCambioMotivoCancelar","fetchCancelarVenta","idVenta","ImprimirVenta","fetchImprimirVenta","marginLeft","background","Venta","venta_tb","addComponentFactura","addComponentBoleta","addComponentNuevaVenta","dataFacturaReady","dataBoletaReady","dataNuevaVentaReady","dataBoleta","dataNuevaVenta","txt_btn_venta","inp_cliente","inp_numeroVenta","addFactura","addBoleta","fechtDataFactura","fechtDataBoleta","getCambioNumeroVenta","btn_venta","txt_btn","defaultValue","colSpan","fechaVentas","nombreClientes","nombreTiposcomprobante","tipoMoneda_id","numeroVentas","estadoSunatVentas","subTotalVentas","totalVentas","VentasDetalladas","tb_venta_detallada","bcodProduct","bnumeroComprobante","bdateOne","bdateTwo","fetchTbVentaDetallada","getCambioCodProducto","getCambioDateOne","getCambioDateTwo","numeroPag","codProduct","dateOne","dateTwo","nombreSucursal","cantidadDetalleVenta","descuentoDetalleVenta","subtotalDetalleVenta","totalDetalleVenta","idDetalleVenta","ModalDeclararTransferencia","idOrigen","idDestino","cantidadTransferir","motivoTransferencia","stockDespuesOrigen","getCambioCantidadTransferir","getCambioMotivoTransferencia","getCambio","fetchCrearTransferencia","sucursalesUsuario","mostrarModalDeclararTransferencia","fetchSucursalesUsuario","fetchSucursales","TB_Transferencias","idTransferencia","fetchEliminarTransferencia","fetchTransferencias","tb_transferencias","origenTransferencia","destinoTransferencia","cantidadTransferida","Buscadores_tb_transferencias","indexTransferencias","TB_filas_cajasVentas","nombreSurcursal","nombreUsuario","cierreCajaVenta","numeroCajaVenta","aperturaCajaVenta","totalAperturaCajaVenta","totalAperturoCajaVenta","totalCierreCajaVenta","totalCerroCajaVenta","numeroVentasTarjetaCajaVenta","totalVentasTarjetaCajaVenta","numeroVentasEfectivoCajaVenta","totalVentasEfectivoCajaVenta","numeroVentasCanceladasCajaVenta","totalVentasCanceladasCajaVenta","numeroGastosCajaVenta","totalGastosCajaVenta","numeroIngresosCajaVenta","totalIngresosCajaVenta","numeroVentasCajaVenta","totalVentasCajaVenta","numeroItemsCajaVenta","numeroItemsCanceladosCajaVenta","observacionesAperturaCajaVenta","observacionesCierreCajaVenta","TB_CajasVentas","tb_cajaVenta","fetchCajasVentas","indexCajaVenta","TB_Gastos","tb_gastos","fetchGastos","fechaGasto","numeroGasto","gasto","motivoGasto","idGasto","indexGasto","TB_Ingresos","tb_ingresos","fetchIngresos","fechaIngreso","numeroIngreso","ingreso","motivoIngreso","idIngreso","CargaArchivos","CargarData","subioArchivo","nombreArchivo","fileSeleccionado","archivoExito","enviarCambios","guardarCambios","seleccionarFile","refs","subirArchivoInput","event","stopPropagation","preventDefault","files","formData","FormData","append","axios","post","rpta","eliminarArchivo","ref","display","cambioInputFile","aria-current","exac","path","component","exact","Descuentos","Usuarios","Ventas","indexIngresos","App","useSelector","useEffect","Rutas","SiguienteApp","store","createStore","applyMiddleware","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"ySACaA,EAAiC,uBACjCC,EAAiC,+BACjCC,EAAiC,2BACjCC,EAAiC,gCACjCC,EAAiC,6BCGxCC,EAAa,CACfC,mBAAsB,EACtBC,cAAkB,GAIP,aAAiC,IAAhCC,EAA+B,uDAAvBH,EAAYI,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKV,EACD,OAAO,2BACAQ,GADP,IAEIF,mBAAqBG,EAAOE,QAC5BJ,cAAqB,IAG7B,KAAKN,EAOL,KAAKC,EAOL,KAAKC,EAOL,KAAKC,EACD,OAAO,2BACAI,GADP,IAEIF,mBAAoBG,EAAOE,QAC3BJ,cAAe,IAGvB,QACE,OAAOC,ICnDAI,EAA2B,2BAC3BC,EAAgB,gBCGvBR,EAAa,CACfS,wBAAyB,EACzBC,UAAe,EACfC,WAAeC,aAAaC,QAAQ,SACpCC,aAAe,IAIJ,aAAiC,IAAhCX,EAA+B,uDAAvBH,EAAYI,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKE,EACD,OAAO,2BACAJ,GADP,IAEIM,uBAAyBL,EAAOE,UAGxC,KAAKE,EACD,OAAO,2BACAL,GADP,IAEIQ,WAAeP,EAAOE,QAAQS,MAC9BD,aAAeV,EAAOE,QAAQU,UAGtC,QACE,OAAOb,IC5BAc,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAiC,iCCGxCnB,EAAa,CACfoB,uBAAwB,EACxBC,6BAA8B,EAC9BC,oBAAqB,EACrBC,oBAAqB,GAIV,aAAiC,IAAhCpB,EAA+B,uDAAvBH,EAAYI,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKc,EACD,OAAO,2BACAhB,GADP,IAEIkB,4BAA8BjB,EAAOE,UAG7C,KAAKW,EACD,OAAO,2BACAd,GADP,IAEIiB,sBAAwBhB,EAAOE,UAGvC,KAAKY,EACD,OAAO,2BACAf,GADP,IAEImB,mBAAqBlB,EAAOE,QAAQkB,YACpCD,mBAAqBnB,EAAOE,QAAQmB,cAG5C,QACE,OAAOtB,ICvBEuB,EAPW,SAACC,GAAD,OAAaC,YAAgB,CACrDC,OAAQC,YAAcH,GACtBI,cAAgBC,EAChBC,MAAQC,EACRC,QAAUC,KCHCT,GAAUU,EADMC,EAAQ,IAAWD,wBAE1CE,EAAkBC,YAAiBb,GACnCc,EAAiBC,cACjBC,EAAc,CAACC,IAAMH,EAAgBF,GAGrCM,EAAmBC,OAAOC,sCAAwCC,I,kECbzD,G,OAAA,IAA0B,mCCA1B,EAIN,4CAJM,EAKA,oBCCFC,EAAwB,SAACC,GAClC,MAAO,CACH7C,KAAMY,EACNX,QAAS4C,IAIJC,EAA8B,SAACD,GACxC,MAAO,CACH7C,KAAMc,EACNb,QAAS4C,ICNJE,EAAuB,SAACC,GAAD,OAAY,SAACC,GAC7CA,EAASL,GAAsB,IAE3BK,EADU,MAAXD,EACU,CACLhD,KAAMV,EACNW,QAAS+C,GAEG,MAAXA,EACK,CACNhD,KAAMT,EACNU,QAAS+C,GAEG,MAAXA,EAEI,CACLhD,KAAMR,EACNS,QAAS+C,GAGG,MAAXA,EACI,CACLhD,KAAMP,EACNQ,QAAS+C,GAGJ,CACLhD,KAAMN,EACNO,QAAS+C,MCtBRE,EAAe,SAACvC,GAAD,8CAAa,WAAOsC,EAAUE,GAAjB,iBAAAC,EAAA,6DAEjCC,GAAY,EACZC,EAAU,GAEdL,EAASL,GAAsB,IAC/BK,EAASH,GAA4B,IANA,SAQ/BS,MAAMC,EAAW,uBACzB,CACCC,KAAK,OACLC,OAAQ,OACRC,KAAMC,KAAKC,UAAUlD,GACrBmD,QAAS,CACR,OAAW,mBACX,eAAiB,sBAIhBC,KAXK,uCAWC,WAAMC,GAAN,SAAAZ,EAAA,sEACHH,EAASF,EAAqBiB,EAAIC,SAD/B,gCAEFD,EAAIE,QAFF,2CAXD,uDAeLH,MAAK,SAAAI,IAEa,IADChB,IAAWzB,cAAc7B,cAErCwD,EAAYc,EAAKd,UACjBC,EAAUa,EAAKb,SACF,IAAnBa,EAAKd,WACP9C,aAAa6D,QAAQ,UAAWzD,EAAQA,SACxCJ,aAAa6D,QAAQ,cAAezD,EAAQ0D,aAE5C9D,aAAa6D,QAAQ,QAASD,EAAKG,MAAM5D,OACzCH,aAAa6D,QAAQ,WAAYD,EAAKG,MAAMC,UAC5ChE,aAAa6D,QAAQ,aAAcD,EAAKG,MAAME,YAC9CjE,aAAa6D,QAAQ,YAAaD,EAAKG,MAAMG,WAG7CxB,EAAS,CACRjD,KAAMG,EACNF,QAAS,CACUS,MAAUyD,EAAKG,MAAM5D,MACrBC,QAAUwD,EAAKG,UAKnCrB,EAAS,CACRjD,KAAMG,EACNF,QAAS,CACUS,MAAU,KACVC,QAAU,QAKtB0C,GAAY,EACZC,EAAU,8BAEVL,EAAS,CACLjD,KAAMG,EACNF,QAAS,CACLS,MAAU,KACVC,QAAU,UAIvB+D,OAAM,SAACC,GACNtB,GAAY,EACZC,EAAUqB,EAEVC,QAAQC,IAAIF,GACZ1B,EAAS,CACLjD,KAAMG,EACNF,QAAS,CACLS,MAAU,KACVC,QAAU,SA5Ee,gCAiF9B,CACH0C,UAAYA,EACZC,QAAUA,IAnFuB,2CAAb,yD,eCwBbwB,GAlCQ,SAACC,GAEpB,IAAM9B,EAAW+B,cACTC,EAAaC,sBAAbD,SAEFE,EAAU,uCAAG,4BAAA/B,EAAA,sEAEGH,EAASC,EAAa,CACpC,QAAY6B,EAAMpE,QAClB,YAAgBoE,EAAMV,eAJX,QAMQ,KAJnBzC,EAFW,QAMNyB,WACL4B,EAASrD,EAAM0B,QAAS,CAAE8B,WAAY,UAAWC,aAAa,IAC9D5C,OAAO6C,SAASC,QAAO,IAEvBN,EAASrD,EAAM0B,QAAS,CAAE8B,WAAY,QAASC,aAAa,IAEhET,QAAQC,IAAIjD,GAZG,2CAAH,qDAgBhB,OACI,qBAAK4D,MAAM,8BAAX,SACI,wBACIxF,KAAK,SAASwF,MAAM,oBACpBC,QAASN,EAFb,mCCuCGtD,G,kDA5DX,aAAc,IAAD,8BACT,gBACK/B,MAAO,CACR4F,cAAgB,GAChBC,kBAAoB,IAJf,E,uDAQb,SAAoBC,GAChB,IAAIC,EAAWD,EAAEE,OAAOC,KACxBC,KAAKC,SAAL,eACKJ,EAAYD,EAAEE,OAAOI,U,oBAI9B,WAAS,IAAD,OACJ,OACI,8BACI,qBAAKV,MAAM,UAAX,SACI,qBAAKA,MAAM,qBAAX,SACI,sBAAKA,MAAM,gBAAX,UACI,sBAAKA,MAAM,8BAAX,UACI,sBAAMA,MAAM,6BAAZ,2CAIA,sBAAKA,MAAM,wDAAwDW,gBAAc,iBAAjF,UACI,uBACIC,GAAG,aAAaZ,MAAM,WAAWxF,KAAK,OAAO+F,KAAK,gBAAgBM,YAAY,YAC9EC,SAAU,SAACV,GAAD,OAAO,EAAKW,oBAAoBX,MAE9C,sBAAMJ,MAAM,sBAEhB,sBAAKA,MAAM,wDAAwDW,gBAAc,gBAAjF,UACI,uBACIX,MAAM,WAAWxF,KAAK,WAAW+F,KAAK,oBAAoBM,YAAY,gBACtEC,SAAU,SAACV,GAAD,OAAO,EAAKW,oBAAoBX,MAE9C,sBAAMJ,MAAM,sBAGhB,cAAC,GAAD,CACI7E,QAAWqF,KAAKlG,MAAM4F,cACtBrB,YAAe2B,KAAKlG,MAAM6F,oBAE9B,qBAAKH,MAAM,oCAAX,SACI,mBAAGgB,KAAK,IAAIhB,MAAM,OAAlB,2CAOR,qBAAKA,MAAM,gBAAgBiB,MAAO,CAACC,gBAAiB,OAAOC,EAAK,oB,GAvDxEC,a,gFCFEC,G,4JAElB,WACC,OACC,cAAC,KAAD,CACG7G,KAAa,YACb8G,MAAa,UACbC,OAAc,GACdC,MAAc,GACdC,QAAc,U,GATeC,IAAMN,W,SC0T7BO,G,kDA7SX,aAAc,IAAD,8BACT,gBACKrH,MAAO,CACRsH,WAAwB,GACxBC,oBAAwB,GAExBC,iBAAsB,sBACtBC,kBAAsB,sBAEtBC,SAAsB,EAEtBC,mBAAoB,GAGxB,EAAKC,oBAA6B,EAAKA,oBAAoBC,KAAzB,iBAClC,EAAKC,2BAA6B,EAAKA,2BAA2BD,KAAhC,iBAClC,EAAKE,oBAA6B,EAAKA,oBAAoBF,KAAzB,iBAClC,EAAKG,oBAA6B,EAAKA,oBAAoBH,KAAzB,iBAjBzB,E,uDAqBb,SAAoB/B,GAAG,IAAD,EAEKA,EAAEE,OAAXI,GAFI,EAEXH,KAFW,EAEJG,OAEXF,KAAKjB,MAAMgD,aAAe7B,EACzBF,KAAKC,SAAS,CACVwB,mBAAoB,IAGxBzB,KAAKC,SAAS,CACVwB,mBAAoB,IAI5BzB,KAAKC,SAAS,CACVmB,WAAclB,M,wCAItB,SAA2BN,GAAG,IAAD,EACFA,EAAEE,OAAXI,GADW,EAClBH,KADkB,EACXG,OACdF,KAAKC,SAAS,CACVoB,oBAAsBnB,M,iCAK9B,SAAoB8B,GC5DT,IAASC,EAAQC,EAAaC,ED6DrCnC,KAAKC,SAAS,CACVuB,SAAWQ,IAGfhC,KAAKjB,MAAMqD,uBCjEKH,EDmEZ,cCnEoBC,EDoEpB,uFCpEiCC,EDqEjCnC,KAAK8B,oBClEbO,wBAAa,CACTC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,qBAAKC,UAAU,+BAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,6BAAKP,IACL,4BAAIC,IACJ,qBAAKM,UAAU,mBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLyF,QAAS,WACL0C,IACAI,KAEJC,UAAU,kDANd,uBAUJ,qBAAKA,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLyF,QAAS,WACL8C,KAEJC,UAAU,oDALd,6C,iCD8C5C,WAAsB,IAAD,OAEjBC,KAAUC,QACN,8BACI,iDAEJ,CACIC,SAAU,cAGhB5E,MAAK,WACCR,MAAMC,EAAA,qBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,YAA2B,EAAKkB,MAAM6D,YACtC,WAA2B,EAAK9I,MAAMsH,WACtC,kBAA2B,EAAKtH,MAAMuH,sBAE1CvD,QAAS,CACL,OAAkB,mBAClB,eAAkB,mBAClB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,GADAS,QAAQC,IAAIV,GACTA,EAAI,UAAc,CAejB,GAdAsE,KAAUK,QACN,8BACI,uEAEJ,CACEH,SAAU,cAIhB,EAAK1C,SAAS,CACVmB,WAA0B,GAC1BC,oBAA0B,KAGJ,GAAvB,EAAKvH,MAAM0H,SAAc,CACxB,IAAIuB,EAAM,4CAA4C5E,EAAI,OAC1DsE,KAAUC,QACN,8BACI,8DAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MACIwF,GAEHhF,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACOA,EAAI,UACHsE,KAAUK,QACN,8BACI,sEAEJ,CACAH,SAAU,cAIdF,KAAU9D,MACN,8BACI,wEAEJ,CACAgE,SAAU,oBASlC,EAAK5D,MAAMiE,yBAGXP,KAAU9D,MACN,8BACI,8EAEJ,CACEgE,SAAU,sB,oBAWpC,WAAS,IAAD,OACJ,OACI,qBAAKH,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6CACA,qBAAIA,UAAU,aAAd,UAA4BxC,KAAKjB,MAAMkE,eAAvC,UAEJ,sBAAKT,UAAU,QAAf,UACI,sDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKjB,MAAMmE,cAAxC,eAIZ,qBAAKV,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sDACA,qBAAIA,UAAU,aAAd,UAA4BxC,KAAKjB,MAAMoE,cAAvC,UAEJ,sBAAKX,UAAU,QAAf,UACI,kEACA,qBAAIA,UAAU,aAAd,UAA4BxC,KAAKjB,MAAMqE,cAAvC,eAIZ,qBAAKZ,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,QAAf,UACI,6DAEIxC,KAAKjB,MAAMsE,yBACV,cAAC,GAAD,IAEA,qBAAIb,UAAU,aAAd,UAA4BxC,KAAKjB,MAAMgD,YAAvC,cAMjB,qBAAKS,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,4DAAsC,uBACtC,uBACIxI,KAAc,SAEdsG,SAAeN,KAAK0B,oBACpBxB,MAAeF,KAAKlG,MAAMsH,WAC1BkC,WAAS,EACTlD,GACoC,GAAhCJ,KAAKlG,MAAM2H,kBACV,0BACA,6BAQrB,qBAAKe,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,0DACA,0BACIA,UAAc,eACde,KAAc,IACdlD,YAAc,aACdC,SAAeN,KAAK4B,2BACpB1B,MAAeF,KAAKlG,MAAMuH,6BAO1C,qBAAKmB,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,oBAAIA,UAAU,aAAd,6JAIZ,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,uDACVpC,GAAG,gBACHX,QACI,kBAAM,EAAKoC,oBAAoB,IALvC,sCAWJ,qBAAKW,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,uDACV/C,QACI,kBAAM,EAAKoC,oBAAoB,IAJvC,2C,GAlRIjB,aEdzB,OAA0B,sCCA1B,OAA0B,4CCA1B,OAA0B,sCCA1B,OAA0B,4CCA1B,OAA0B,8BCmB1B4C,GAfS,WAEpB,IAAMvG,EAAW+B,cAGjB,OACI,oBACIS,QAAS,kBAAMxC,EX2FQ,uCAAM,WAAOA,EAAUE,GAAjB,SAAAC,EAAA,sDACrC7C,aAAakJ,WAAW,WACxBlJ,aAAakJ,WAAW,eACxBlJ,aAAakJ,WAAW,SACxBlJ,aAAakJ,WAAW,YACxBlJ,aAAakJ,WAAW,cACxBlJ,aAAakJ,WAAW,aAExBxG,EAAU,CACNjD,KAAMG,EACNF,QAAS,CACLS,MAAU,KACVC,QAAU,MAZmB,2CAAN,0DW1FvB6H,UAAU,gBAAgBhC,KAAK,IAFnC,UAGQ,mBAAGgC,UAAU,8BAHrB,YCu1BOkB,G,kDAj1BX,aAAc,IAAD,8BACT,gBACK5J,MAAO,CAER8I,YAA0B,GAC1BK,eAA0B,GAC1BC,cAA0B,GAC1BC,cAA0B,GAC1BC,cAA0B,GAC1BO,sBAA0B,GAC1B5B,YAA0B,GAE1B6B,sBAA0B,GAC1BC,mBAA0B,GAG1BC,iBAA+B,EAC/BC,sBAA+B,EAC/BC,uBAA+B,aAG/BC,2BAA+B,EAC/BC,4BAA+B,EAC/BC,2BAA+B,EAC/BC,6BAA+B,EAK/BC,aAAsB,EACtBC,aAAsB,GACtBhD,iBAAsB,sBACtBC,kBAAsB,sBACtBgD,WAAsB,GAGtBlB,0BAA8B,GAElC,EAAKmB,oBAAyB,EAAKA,oBAAoB7C,KAAzB,iBAC9B,EAAKS,qBAAyB,EAAKA,qBAAqBT,KAA1B,iBAC9B,EAAKqB,kBAAyB,EAAKA,kBAAkBrB,KAAvB,iBAC9B,EAAK8C,qBAAyB,EAAKA,qBAAqB9C,KAA1B,iBAC9B,EAAK+C,uBAAyB,EAAKA,uBAAuB/C,KAA5B,iBAC9B,EAAKgD,qBAAyB,EAAKA,qBAAqBhD,KAA1B,iBAC9B,EAAKiD,cAAyB,EAAKA,cAAcjD,KAAnB,iBAC9B,EAAKkD,mBAAyB,EAAKA,mBAAmBlD,KAAxB,iBAC9B,EAAKmD,oBAAyB,EAAKA,oBAAoBnD,KAAzB,iBAC9B,EAAKoD,sBAAiC,EAAKA,sBAAsBpD,KAA3B,iBACtC,EAAKqD,4BAAiC,EAAKA,4BAA4BrD,KAAjC,iBACtC,EAAKsD,qBAAiC,EAAKA,qBAAqBtD,KAA1B,iBACtC,EAAKuD,sBAAiC,EAAKA,sBAAsBvD,KAA3B,iBACtC,EAAKwD,aAAiC,EAAKA,aAAaxD,KAAlB,iBACtC,EAAKyD,wBAAiC,EAAKA,wBAAwBzD,KAA7B,iBApD7B,E,qDAuDb,WACI3B,KAAKgD,sB,+BAIT,WAAoB,IAAD,OACfzF,MAAMC,EAAA,qBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,IAGrBC,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,IAAIkH,EADJzG,QAAQC,IAAIV,GAEZ,IAAImH,EAAcC,SAASC,cAAc,wBAEzC,GAAwB,GAArBrH,EAAI,UAAsB,CACzBmH,EAAWG,UAAUC,OAAO,eAC5BJ,EAAWG,UAAUE,IAAI,cACzBN,EAAQ,cAER,IAAIO,EAAczH,EAAI,UACtB,EAAK8B,SAAS,CACV2C,YAA0BgD,EAAS,YACnCxC,cAA0BwC,EAAS,cACnC7D,YAA0B6D,EAAS,mBAIvCN,EAAWG,UAAUC,OAAO,cAC5BJ,EAAWG,UAAUE,IAAI,eACzBN,EAAQ,aACRzG,QAAQC,IAAI,iBAIhB,EAAKoB,SAAS,CACV8D,qBAA0B5F,EAAI,UAC9B+E,cAA0B/E,EAAI,cAC9B8E,eAA0B9E,EAAI,eAC9BgF,cAA0BhF,EAAI,cAE9B2F,iBAA0B,EAC1BE,uBAA0BqB,EAE1BhC,0BAA8B,S,qCAM1C,WAA0B,IAAD,OACrB9F,MAAMC,EAAA,iCACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,YAAkBmC,KAAKlG,MAAM8I,cAEjC9E,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,EAAK8B,SAAS,CAEV8B,YAA4B5D,EAAI,YAChCkF,0BAA4B,S,kCAMxC,WACIzE,QAAQC,IAAImB,KAAKlG,MAAMiK,sBACpB/D,KAAKlG,MAAMiK,qBACV/D,KAAKoC,uBAELpC,KAAKwE,wB,iCAKb,WACI,IAAIa,EACAC,EAAaC,SAASC,cAAc,wBAErCxF,KAAKlG,MAAMmK,2BACVqB,EAAWG,UAAUC,OAAO,YAC5BJ,EAAWG,UAAUE,IAAI,eACzBN,EAAQ,eAGRC,EAAWG,UAAUC,OAAO,eAC5BJ,EAAWG,UAAUE,IAAI,YACzBN,EAAQ,qBAIZrF,KAAKC,SAAS,CACVgE,2BAA8BjE,KAAKlG,MAAMmK,0BACzCD,uBAA8BqB,M,kCAKtC,WAEI,IAAIA,EADJrF,KAAKoF,0BAEL,IAAIE,EAAaC,SAASC,cAAc,wBAErCxF,KAAKlG,MAAMoK,4BACVoB,EAAWG,UAAUC,OAAO,YAC5BJ,EAAWG,UAAUE,IAAI,cACzBN,EAAQ,gBAGRC,EAAWG,UAAUC,OAAO,cAC5BJ,EAAWG,UAAUE,IAAI,YACzBN,EAAQ,qBAIZrF,KAAKC,SAAS,CACViE,4BAA+BlE,KAAKlG,MAAMoK,2BAC1CF,uBAA8BqB,EAE9BhC,0BAA8B,M,oCAKtC,SAAuBzD,GAAG,IAAD,EACEA,EAAEE,OAAXI,GADO,EACdH,KADc,EACPG,OAEdF,KAAKC,SAAS,CACVmD,cAAiBlD,M,kCAIzB,SAAqBN,GAAG,IAAD,EACIA,EAAEE,OAAXI,GADK,EACZH,KADY,EACLG,OAEdF,KAAKC,SAAS,CACV0D,sBAAyBzD,M,2BAIjC,SAAcsB,GAAU,IAAD,OACnBxB,KAAKwE,sBAEL/B,KAAUC,QACN,8BACI,oDAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MAAMC,EAAA,wBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,sBAA8B,EAAK/D,MAAM6J,sBACzC,cAA8B,EAAK7J,MAAMqJ,cACzC,cAA8B,EAAKrJ,MAAMsJ,gBAE7CtF,QAAS,CACL,OAAkB,mBAClB,eAAkB,mBAClB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAEF,GAAGA,EAAI,UAAc,CAejB,GAdAsE,KAAUK,QACN,8BACI,mEAEJ,CACAH,SAAU,cAGd,EAAK1C,SAAS,CAEVmD,cAA6B,GAC7BO,sBAA6B,KAGlB,GAAZnC,EAAc,CACb,IAAIuB,EAAM,+CAA+C5E,EAAI,OAC7DsE,KAAUC,QACN,8BACI,gEAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MACIwF,GAEHhF,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACOA,EAAI,UACHsE,KAAUK,QACN,8BACI,wEAEJ,CACAH,SAAU,cAIdF,KAAU9D,MACN,8BACI,wEAEJ,CACAgE,SAAU,oBASlC,EAAKK,yBAGL,EAAKwB,sBACL/B,KAAU9D,MACN,8BACI,iFAEJ,CACEgE,SAAU,sB,iCAWhC,WACI/D,QAAQC,IAAImB,KAAKlG,MAAMqK,2BACvBnE,KAAKC,SAAS,CACVkE,2BAA8BnE,KAAKlG,MAAMqK,8B,mCAIjD,WACInE,KAAKC,SAAS,CACVmE,6BAAgCpE,KAAKlG,MAAMsK,gC,mCAInD,SAAsBxE,GAAG,IAAD,EACGA,EAAEE,OAAXI,GADM,EACbH,KADa,EACNG,OAEdF,KAAKC,SAAS,CACV2D,sBAAyB1D,M,yCAIjC,SAA4BN,GAAG,IAAD,EACHA,EAAEE,OAAXI,GADY,EACnBH,KADmB,EACZG,OAEdF,KAAKC,SAAS,CACV4D,mBAAsB3D,M,gCAM9B,WAAqB,IAAD,OAChBtB,QAAQC,IAAI,mBACZD,QAAQC,IAAImB,KAAKlG,MAAM8I,aACvBhE,QAAQC,IAAImB,KAAKlG,MAAM8J,uBACvBhF,QAAQC,IAAImB,KAAKlG,MAAM+J,oBAIvBtG,MAAMC,EAAA,mBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,YAAoBmC,KAAKlG,MAAM8I,YAC/B,MAAoB5C,KAAKlG,MAAM8J,sBAC/B,OAAoB5D,KAAKlG,MAAM+J,qBAEnC/F,QAAS,CACL,OAAkB,mBAClB,eAAkB,mBAClB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAEFS,QAAQC,IAAIV,GACTA,EAAI,WACH,EAAKgH,aAAa,wCAAyC,EAAKrL,MAAMyH,mBACtE,EAAKtB,SAAS,CACVkE,2BAA8B,EAAKrK,MAAMqK,0BACzCP,sBAAqC,GACrCC,mBAAoC,MAIxC,EAAKsB,aAAa,oDAAqD,EAAKrL,MAAMwH,uB,kCAM9F,WAAuB,IAAD,OAClB/D,MAAMC,EAAA,qBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,YAAoBmC,KAAKlG,MAAM8I,YAC/B,QAAoB5C,KAAKlG,MAAM8J,sBAC/B,OAAoB5D,KAAKlG,MAAM+J,qBAEnC/F,QAAS,CACL,OAAkB,mBAClB,eAAkB,mBAClB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAEFS,QAAQC,IAAIV,GACTA,EAAI,WACH,EAAKgH,aAAa,0CAA2C,EAAKrL,MAAMyH,mBACxE,EAAKtB,SAAS,CACVmE,6BAAgC,EAAKtK,MAAMsK,4BAC3CR,sBAA6B,GAC7BC,mBAA6B,MAIjC,EAAKsB,aAAa,sDAAuD,EAAKrL,MAAMwH,uB,0BAMhG,SAAauE,EAAS/E,GAClBd,KAAKC,SAAS,CACVqE,aAAeuB,EACftB,WAAezD,EACfuD,aAAe,M,oBAIvB,WAAS,IAAD,OACJ,OACI,yBAAQ7B,UAAU,SAAlB,UACI,sBAAKA,UAAU,iDAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,yDAAyDhC,KAAK,IAA3E,SAA+E,mBAAGgC,UAAU,uBAC5F,oBAAGA,UAAU,iCAAiChC,KAAK,IAAnD,UACI,oBAAGgC,UAAU,YAAb,UACI,mBAAGA,UAAU,iBACb,qBAAKsD,IAAKC,GAAUC,IAAI,WAAWxD,UAAU,cAC7C,qBAAKsD,IAAKG,GAAeD,IAAI,WAAWxD,UAAU,kBAEtD,uBAAMA,UAAU,YAAhB,UACI,qBAAKsD,IAAKI,GAAUF,IAAI,WAAWxD,UAAU,cAC7C,qBAAKsD,IAAKK,GAAe3D,UAAU,aAAawD,IAAI,mBAG5D,qBAAKxD,UAAU,gCAAf,SACI,oBAAGA,UAAU,+EAA+EhC,KAAK,IAAI4F,mBAAiB,eAAtH,UACI,mBAAG5D,UAAU,iBACb,sBAAMA,UAAU,uBAAhB,6BAGR,mBAAGA,UAAU,2DAA2DhC,KAAK,IAAI6F,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAAtN,SAA0O,mBAAGjE,UAAU,iBAE3P,sBAAKA,UAAU,2BAA2BpC,GAAG,yBAA7C,UACI,oBAAIoC,UAAU,gCAAd,SACI,oBAAIA,UAAU,WAAd,SACI,oBAAGA,UAAU,0CAA0ChC,KAAK,IAA5D,UACI,oBAAGgC,UAAU,YAAb,UACI,mBAAGA,UAAU,iBACb,qBAAKsD,IAAKC,GAAUC,IAAI,WAAWxD,UAAU,cAC7C,qBAAKsD,IAAKG,GAAeD,IAAI,WAAWxD,UAAU,kBAEtD,uBAAMA,UAAU,YAAhB,UACQ,qBAAKsD,IAAKI,GAAUF,IAAI,WAAWxD,UAAU,cAC7C,qBAAKsD,IAAKK,GAAe3D,UAAU,aAAawD,IAAI,uBAKxE,qBAAIxD,UAAU,yBAAd,UACI,oBAAIA,UAAU,YAAd,SACI,qBAAKA,UAAU,mDAAmDgE,gBAAc,QAAhF,SACI,wBACIxM,KAAK,SACLwI,UAAU,uDACV/C,QACIO,KAAKkF,sBAJb,mCAWR,oBAAI1C,UAAU,YAAd,SACI,qBAAKA,UAAU,mDAAmDgE,gBAAc,QAAhF,SACI,wBACIxM,KAAK,SACLwI,UAAU,uDACV/C,QACIO,KAAK8E,oBAJb,iCAWR,oBAAItC,UAAU,kCAAd,SACI,qBAAKA,UAAU,mDAAmDgE,gBAAc,QAAhF,SAEsC,GAA9BxG,KAAKlG,MAAMgK,gBACV,wBACG9J,KAAK,SACLoG,GAAG,sBACHoC,UAAU,uDACV/C,QAASO,KAAKyE,qBAJjB,SAMQzE,KAAKlG,MAAMkK,yBAEnB,6CAKb,qBAAIxB,UAAU,oBAAd,UACI,oBAAGA,UAAU,2DAA2DhC,KAAK,IAAI6F,cAAY,WAAWK,gBAAc,OAAOF,gBAAc,QAA3I,UACI,qBAAKV,IAAKa,GAAOX,IAAI,OAAOxD,UAAU,iBAAiBxB,MAAM,OAC7D,sBAAMwB,UAAU,6BAAhB,uBAA6D,sBAAMA,UAAU,wCAEjF,sBAAKA,UAAU,6DAAf,UACI,sBAAKA,UAAU,4DAAf,UACI,qBAAKA,UAAU,GAAf,SAAkB,qBAAKsD,IAAKa,GAAOX,IAAI,OAAOxD,UAAU,UAAUxB,MAAM,SACxE,sBAAKwB,UAAU,OAAf,UACI,oBAAIA,UAAU,OAAd,uBACA,mBAAGhC,KAAK,IAAIgC,UAAU,oDAAtB,8BAGR,oBAAGA,UAAU,gBAAgBhC,KAAK,IAAlC,UAAsC,mBAAGgC,UAAU,sBAAnD,gBAEA,cAAC,GAAD,mBASxB,eAACoE,GAAA,EAAD,CACIC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMmK,0BACjB8C,OAAQ,kBAAM,EAAKvC,uBACnBwC,kBAAgB,gCAChBC,UAAQ,EALZ,UAOI,cAACL,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,SACKJ,KAAKlG,MAAMkK,2BAGpB,cAAC4C,GAAA,EAAMS,KAAP,UACI,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6CACA,qBAAIA,UAAU,aAAd,UAA4BxC,KAAKlG,MAAMmJ,eAAvC,UAEJ,sBAAKT,UAAU,QAAf,UACI,sDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMoJ,cAAxC,eAIZ,qBAAKV,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,sDACA,qBAAIA,UAAU,aAAd,UAA4BxC,KAAKlG,MAAMqJ,cAAvC,cAIZ,qBAAKX,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,2DACA,uBACIxI,KAAc,OACdwI,UAAc,eACdlC,SAAeN,KAAK0E,uBACpBpB,WAAS,EACTpD,MAAeF,KAAKlG,MAAMsJ,uBAM1C,qBAAKZ,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,0DACA,0BACIA,UAAc,eACde,KAAc,IACdlD,YAAc,aACdC,SAAeN,KAAK2E,qBACpBzE,MAAeF,KAAKlG,MAAM6J,+BAO1C,qBAAKnB,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,oBAAIA,UAAU,aAAd,2JAIZ,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,wDACVpC,GAAG,gBACHX,QAAS,kBAAI,EAAKmF,cAAc,IAJpC,yCAOJ,qBAAKpC,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,wDACVpC,GAAG,gBACHX,QAAS,kBAAI,EAAKmF,cAAc,IAJpC,+CAoB5B,eAACgC,GAAA,EAAD,CACIC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMoK,2BACjB6C,OAAQ,kBAAM,EAAK3E,wBACnB4E,kBAAgB,gCAChBC,UAAQ,EALZ,UAOI,cAACL,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,SACKJ,KAAKlG,MAAMkK,2BAGpB,cAAC4C,GAAA,EAAMS,KAAP,UAGQ,cAAC,GAAD,CACIzE,YAAmB5C,KAAKlG,MAAM8I,YAC9BK,eAAmBjD,KAAKlG,MAAMmJ,eAC9BC,cAAmBlD,KAAKlG,MAAMoJ,cAC9BC,cAAmBnD,KAAKlG,MAAMqJ,cAC9BC,cAAmBpD,KAAKlG,MAAMsJ,cAC9BrB,YAAmB/B,KAAKlG,MAAMiI,YAE9BuC,aAAmBtE,KAAKlG,MAAMwK,aAC9BC,WAAmBvE,KAAKlG,MAAMyK,WAC9BF,YAAmBrE,KAAKlG,MAAMuK,YAE9BjC,qBAA4BpC,KAAKoC,qBACjC+C,aAA4BnF,KAAKmF,aACjCnC,kBAA4BhD,KAAKgD,kBAEjCK,yBAA8BrD,KAAKlG,MAAMuJ,gCAUzD,eAACuD,GAAA,EAAD,CACIC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMqK,0BACjB4C,OAAQ,kBAAM,EAAKjC,uBACnBkC,kBAAgB,gCAChBC,UAAQ,EALZ,UAOI,cAACL,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,+BAIJ,cAACwG,GAAA,EAAMS,KAAP,UACI,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,oDACA,uBACIxI,KAAc,OACdwI,UAAc,eACdlC,SAAeN,KAAK+E,sBACpBzB,WAAS,EACTpD,MAAeF,KAAKlG,MAAM8J,+BAK1C,qBAAKpB,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qDACA,0BACIA,UAAc,eACde,KAAc,IACdlD,YAAc,mBACdC,SAAeN,KAAKgF,4BACpB9E,MAAeF,KAAKlG,MAAM+J,4BAO1C,qBAAKrB,UAAU,mBAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,wDACV/C,QAAS,kBAAI,EAAKoF,sBAHtB,2CAapB,eAAC+B,GAAA,EAAD,CACIC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMsK,4BACjB2C,OAAQ,kBAAM,EAAK7B,yBACnB8B,kBAAgB,gCAChBC,UAAQ,EALZ,UAOI,cAACL,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,iCAIJ,cAACwG,GAAA,EAAMS,KAAP,UACI,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,sDACA,uBACIxI,KAAc,OACdwI,UAAc,eACdlC,SAAeN,KAAK+E,sBACpBzB,WAAS,EACTpD,MAAeF,KAAKlG,MAAM8J,+BAK1C,qBAAKpB,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,iEACA,0BACIA,UAAc,eACde,KAAc,IACdlD,YAAc,mBACdC,SAAeN,KAAKgF,4BACpB9E,MAAeF,KAAKlG,MAAM+J,4BAO1C,qBAAKrB,UAAU,mBAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,wDACV/C,QAAS,kBAAI,EAAKwF,wBAHtB,6CAa5B,cAACqC,GAAA,EAAD,CACI7G,MAAO,CACHkC,SAAkB,QAClB4E,IAAkB,GAClBC,MAAkB,GAClBC,OAAiB,KACjBC,gBAAkB1H,KAAKlG,MAAMyK,WAC7BzD,MAAiB,SAErByB,QAAS,kBAAM,EAAKtC,SAAS,CACzBoE,aAAa,KAEjByC,KAAU9G,KAAKlG,MAAMuK,YACrBsD,MAAU,KACVC,UAAQ,EAdZ,SAgBI,cAACN,GAAA,EAAMD,KAAP,UACA,6BAAKrH,KAAKlG,MAAMwK,0B,GA10BlB1D,aCwMHiH,G,kDA/MX,aAAc,IAAD,8BACT,gBACK/N,MAAO,GAKZ,EAAKgO,YAA4B,EAAKA,YAAYnG,KAAjB,iBAPxB,E,+CAUb,WACIpE,MAAMC,EAAA,UACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,IAGrBC,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GACFS,QAAQC,IAAIV,GACZ1B,OAAO6C,SAASkB,KAAO/D,OAAO6C,SAASkB,U,oBAK/C,WACI,OACI,uBAAOgC,UAAU,wBAAjB,SACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,qBAAIpC,GAAG,aAAP,UACI,qBAAIoC,UAAU,eAAd,UACI,oBAAGA,UAAU,4DAA4DhC,KAAK,qBAAqBgG,gBAAc,QAAjH,UACI,qBAAKV,IAAKa,GAAOnE,UAAU,sBAAsBxB,MAAM,OACvD,sBAAMwB,UAAU,YAAhB,0BAEJ,qBAAIgE,gBAAc,QAAQhE,UAAU,wBAApC,UACI,oBAAIA,UAAU,eAAd,SACI,oBAAGhC,KAAK,qBAAqBgC,UAAU,eAAvC,UACI,mBAAGA,UAAU,YACb,sBAAMA,UAAU,YAAhB,8BAIR,oBAAIA,UAAU,eAAd,SACI,oBAAGhC,KAAK,qBAAqBgC,UAAU,eAAe/C,QAASO,KAAK8H,YAApE,UACI,mBAAGtF,UAAU,qBACb,sBAAMA,UAAU,YAAhB,iCAMhB,qBAAIA,UAAU,eAAd,UACI,oBAAGA,UAAU,iDAAiDhC,KAAK,qBAAqBgG,gBAAc,QAAtG,UACI,mBAAGhE,UAAU,iBACb,sBAAMA,UAAU,YAAhB,2BAEJ,qBAAIgE,gBAAc,QAAQhE,UAAU,uBAApC,UACI,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,WAAxD,UACI,mBAAGvF,UAAU,uCACT,sBAAMA,UAAU,YAAhB,6BAKZ,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,0BAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,iCAGR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,mBAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,2BAGR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,qBAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,8BAGR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,0BAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,oCAGR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,kBAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,yBAIR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,uBAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,sCAWhB,qBAAIA,UAAU,eAAd,UACI,oBAAGA,UAAU,iDAAiDhC,KAAK,qBAAqBgG,gBAAc,QAAtG,UACI,mBAAGhE,UAAU,qBACb,sBAAMA,UAAU,YAAhB,uBAEJ,qBAAIgE,gBAAc,QAAQhE,UAAU,uBAApC,UACI,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMA,UAAU,oDAAoDhC,KAAK,IAAIgG,gBAAc,QAASuB,GAAG,UAAvG,UACI,mBAAGvF,UAAU,2BACb,sBAAMA,UAAU,YAAhB,yBAGR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMA,UAAU,oDAAoDhC,KAAK,IAAIgG,gBAAc,QAASuB,GAAG,oBAAvG,UACI,mBAAGvF,UAAU,2BACb,sBAAMA,UAAU,YAAhB,0CAMhB,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,gBAAxD,UACI,mBAAGvF,UAAU,mCACb,sBAAMA,UAAU,YAAhB,0CAKR,qBAAIA,UAAU,eAAd,UACI,oBAAGA,UAAU,iDAAiDhC,KAAK,qBAAqBgG,gBAAc,QAAtG,UACI,mBAAGhE,UAAU,kBACb,sBAAMA,UAAU,YAAhB,sBAEJ,qBAAIgE,gBAAc,QAAQhE,UAAU,uBAApC,UACI,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMA,UAAU,oDAAoDhC,KAAK,IAAIgG,gBAAc,QAASuB,GAAG,QAAvG,UACI,mBAAGvF,UAAU,2BACb,sBAAMA,UAAU,YAAhB,iCAIR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMA,UAAU,oDAAoDhC,KAAK,IAAIgG,gBAAc,QAASuB,GAAG,iBAAvG,UACI,mBAAGvF,UAAU,2BACb,sBAAMA,UAAU,YAAhB,qCAIR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMA,UAAU,oDAAoDhC,KAAK,IAAIgG,gBAAc,QAASuB,GAAG,eAAvG,UACI,mBAAGvF,UAAU,2BACb,sBAAMA,UAAU,YAAhB,yCAMhB,qBAAIA,UAAU,eAAd,UACI,oBAAGA,UAAU,iDAAiDhC,KAAK,qBAAqBgG,gBAAc,QAAtG,UACI,mBAAGhE,UAAU,qBACb,sBAAMA,UAAU,YAAhB,iCAEJ,qBAAIgE,gBAAc,QAAQhE,UAAU,uBAApC,UACI,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,0BAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,2BAGR,oBAAIA,UAAU,eAAd,SACI,eAAC,KAAD,CAAMhC,KAAK,iBAAiBgC,UAAU,eAAeuF,GAAG,yBAAxD,UACI,mBAAGvF,UAAU,uCACb,sBAAMA,UAAU,YAAhB,6C,GAlMtB5B,aCOPoH,GATA,kBAEX,yBAAQxF,UAAU,qBAAlB,gDAEI,mBAAGhC,KAAK,IAAR,uBAFJ,Q,yDC+DeyH,G,kDA7Df,aAAc,IAAD,8BACT,gBACKnO,MAAO,CAERoO,OAAQ,GACRC,SAAS,GACTC,QAAQ,IAEZ,EAAKC,aAAe,EAAKA,aAAa1G,KAAlB,iBARX,E,gDAWb,SAAc/B,GAAG,IAAD,EACWA,EAAEE,OAAlBC,EADK,EACLA,KAAOG,EADF,EACEA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,K,oBAKhB,WAAS,IAAD,OACJ,OAEI,qBAAKyC,UAAU,aAAf,SACE,sBAAKA,UAAU,MAAf,UACQ,sBAAKA,UAAU,QAAf,UACG,wDAAkC,uBAClC,uBAAOxI,KAAK,OAAO+F,KAAK,uBAAuByC,UAAU,eAAe8F,UAAWtI,KAAKjB,MAAMwJ,cAAeC,QAAS,kBAAI,EAAKzJ,MAAM0J,YAAY,EAAK1J,MAAM2J,SAASpF,WAAS,OAE/K,sBAAKd,UAAU,QAAf,UACI,2CAAqB,uBACrB,uBAAOxI,KAAK,OAAO+F,KAAK,kBAAkByC,UAAU,eAAetC,MAAOF,KAAKjB,MAAMgB,UAEzF,sBAAKyC,UAAU,8BAAf,UACM,qDACA,uBAAOxI,KAAK,SAAS+F,KAAK,sBAAsBK,GAAG,SAASoC,UAAU,4BACnEmG,QAAQ,qCAAgCzI,MAAOF,KAAKjB,MAAM6J,oBAAqBC,YAAU,WAAWxI,YAAY,KAAKC,SAAUN,KAAKjB,MAAMsJ,aAAcG,QAAS,kBAAI,EAAKzJ,MAAM0J,YAAY,EAAK1J,MAAM2J,cAEhN,sBAAKlG,UAAU,gCAAf,UACM,6CACA,uBAAOxI,KAAK,SAASwI,UAAU,uCAAuCzC,KAAK,wBAAwBK,GAAG,WAAWF,MAAOF,KAAKjB,MAAM+J,sBAAuBxI,SAAUN,KAAKjB,MAAMsJ,aAAcG,QAAS,kBAAI,EAAKzJ,MAAM0J,YAAY,EAAK1J,MAAM2J,cAElP,sBAAKlG,UAAU,QAAf,UACI,0CACA,uBAAOxI,KAAK,OAAOwI,UAAU,uCAAuCzC,KAAK,QAAQG,MAAOF,KAAKjB,MAAMgK,WAEvG,sBAAKvG,UAAU,+BAAf,UACQ,4CACC,uBAAOxI,KAAK,OAAO+F,KAAK,YAAYK,GAAG,UAAUoC,UAAU,gBAAgBmG,QAAQ,qCAAgCzI,MAAOF,KAAKjB,MAAMiK,aAAcH,YAAU,WAAWxI,YAAY,iBAAiBC,SAAUN,KAAKqI,kBAE5N,sBAAK7F,UAAU,QAAf,UACS,uBACF,wBAAQxI,KAAK,SAASwI,UAAU,6CAA6C/C,QAAS,kBAAI,EAAKV,MAAMkK,aAAa,EAAKlK,MAAM2J,SAA7H,SAAsI,mBAAGlG,UAAU,gC,GAxDhJ5B,aC+gCpBsI,G,kDAvgCX,aAAc,IAAD,8BACT,gBACKpP,MAAO,CAERqP,SAAS,GACTC,eAAe,EACfC,KAAK,GAELC,QAAQ,EACRC,KAAK,EACLC,eAAe,GACfC,eAAe,GACfC,YAAY,GACZvB,SAAS,GACTY,MAAM,GACNX,QAAQ,GAERuB,MAAM,GACNC,YAAY,GAEZC,KAAK,GAELC,qBAAoB,EAEpBC,gBAAe,EACfC,kBAAiB,EACjBC,WAAW,GACXC,aAAa,GAGbC,WAAW,GAEXC,OAAO,GAGPC,YAAY,GACZC,UAAU,GACVC,SAAS,GAETC,eAAe,GACfC,qBAAqB,GACrBC,iBAAiB,GAEjBC,aAAa,GACbC,eAAe,GACfC,iBAAiB,GAEjBC,QAAQ,GACRC,OAAO,GACPC,oBAAoB,GACpBC,oBAAoB,GACpBC,oBAAoB,GACpBC,OAAO,GACPC,QAAQ,GACRC,kBAAkB,GAClBC,UAAU,GAEVC,cAAc,GACdC,kBAAkB,IAEtB,EAAKvC,aAAe,EAAKA,aAAatH,KAAlB,iBACpB,EAAK8J,WAAa,EAAKA,WAAW9J,KAAhB,iBAClB,EAAK4G,cAAc,EAAKA,cAAc5G,KAAnB,iBACnB,EAAK+J,eAAe,EAAKA,eAAe/J,KAApB,iBACpB,EAAKgK,MAAM,EAAKA,MAAMhK,KAAX,iBACX,EAAK0G,aAAa,EAAKA,aAAa1G,KAAlB,iBAClB,EAAKiK,mBAAmB,EAAKA,mBAAmBjK,KAAxB,iBACxB,EAAKkK,iBAAiB,EAAKA,iBAAiBlK,KAAtB,iBACtB,EAAKmK,YAAY,EAAKA,YAAYnK,KAAjB,iBApER,E,oDAyEb,SAAkBoK,GACd/L,KAAKC,SAAS,CACVsK,SAAUyB,mBAAOD,EAAM,cACvB3B,OAAQ2B,IAEZnN,QAAQC,IAAImB,KAAKlG,MAAMyQ,Y,qCAMzB,WAA0B,IAAD,OAEjBhN,MAAMC,EAAA,sBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB2N,kBAAmBxL,KAAKlG,MAAM0R,oBAElC1N,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACkB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,sBAAsB,QAC7C,EAAKC,qBAGLtN,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,2BAA2B,YAGrDzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,2BAA2B,a,8BAGxD,WAAmB,IAAD,OACR5O,MACEC,EAAW,4CACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAItCuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACoL,kBAAmBlN,IAAO,WACrC,EAAKiO,wB,2BAOnC,SAAcC,GAAW,IAIbC,EAJY,OACZC,EAAI,GACJC,EAAI,GACJC,EAAI,GAEJC,EAAI,GAGL1M,KAAKlG,MAAMwR,UAAUnN,MACtB6B,KAAKlG,MAAMwR,UAAUnN,KAAKwO,KAAI,SAAAC,GAC1BL,EAAEM,KAAK,CACHC,OAAQF,EAAKE,OACb1M,GAAIwM,EAAKxM,QAInBkM,EAAC,aAAQ,IAAIS,IAAIR,EAAEI,KAAI,SAAAK,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAIF,OAAR,YAAkBE,EAAI5M,IAAM4M,OAAOC,UAE9DjN,KAAKlG,MAAMuR,kBAAkBlN,OAC5B6B,KAAKlG,MAAMuR,kBAAkBlN,KAAKwO,KAAI,SAAAC,GACnCJ,EAAEK,KAAK,CACJC,OAAQF,EAAKE,OACb1M,GAAIwM,EAAKxM,QAGfsM,EAAC,aAAQ,IAAIK,IAAIP,EAAEG,KAAI,SAAAK,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAIF,OAAR,YAAkBE,EAAI5M,IAAM4M,OAAOC,WAGlEjN,KAAKlG,MAAM8P,YAAYzL,MACxB6B,KAAKlG,MAAM8P,YAAYzL,KAAKwO,KAAI,SAAAC,GAC5BH,EAAEI,KACAD,EAAKxM,OAKC,OAAXiM,EACDrM,KAAKC,SAAS,CACVsL,cAAekB,IACjB,kBAAI,EAAKS,qBAGblN,KAAKC,SAAS,CACVkL,OAAQmB,EACRlB,QAASsB,IACX,kBAAI,EAAKS,sB,4BAGb,WAAiB,IAAD,OAEVZ,EAAIvM,KAAKlG,MAAMqR,OAAO,GACtBqB,EAAIxM,KAAKlG,MAAMsR,QAAQ,GAE3B,GAAGmB,GAAKC,EAAE,CACV,IAAI1B,EAAUyB,EAAEnM,GACZ2K,EAASyB,EAAEpM,GAEfJ,KAAKC,SAAS,CACZ6K,QAASA,EACTC,OAAQA,IACR,kBAAInM,QAAQC,IAAI,EAAK/E,MAAMgR,QAAS,EAAKhR,MAAMiR,c,6BAKnD,WAAkB,IAAD,OAIXV,EAFIrK,KAAKlG,MAAMyR,cAAc,GAGjC3M,QAAQC,IAAIwL,GACZrK,KAAKC,SAAS,CACZoK,YAAaA,IACb,kBAAIzL,QAAQC,IAAI,EAAK/E,MAAMuQ,kB,6BAM/B,SAAgBxE,EAAQhJ,GACT,QAARA,EACHmD,KAAKC,SAAS,CACVgK,WAAYpE,EACZkE,gBAAgB,IAGlB/J,KAAKC,SAAS,CACV8J,gBAAgB,M,+BAK1B,SAAkBlE,EAAQhJ,GACX,QAARA,EACHmD,KAAKC,SAAS,CACViK,aAAcrE,EACdmE,kBAAkB,IAGpBhK,KAAKC,SAAS,CACV+J,kBAAkB,M,kCAI5B,WACIhK,KAAKC,SAAS,CACV6J,qBAAsB9J,KAAKlG,MAAMgQ,wB,iCAGzC,SAAoB/J,GAAM,IAAD,OAErBxC,MAAMC,EAAA,0BACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBmN,oBAAoBhL,KAAKlG,MAAMkR,oBAC/BC,oBAAoBjL,KAAKlG,MAAMmR,oBAC/BmC,cAAcpN,KAAKlG,MAAMgR,QACzBuC,aAAerN,KAAKlG,MAAMiR,OAC1BG,oBAAqBlL,KAAKlG,MAAMoR,sBAEpCpN,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK5CuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,cAAc,QAClC,EAAKnS,MAAM4P,aACZ,EAAK4D,mBACH,EAAKxT,MAAMoR,oBACX,EAAKpR,MAAM4P,YACX,EACA,EACAvL,EAAKgM,YAEP,EAAKoD,yBAGP,EAAKD,mBACD,EAAKxT,MAAMoR,oBACX,EAAKpR,MAAMwP,QACX,EACA,EACAnL,EAAKgM,YACT,EAAKoD,0BAKL3O,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,sBAAsB,YAI9CzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,sBAAsB,a,gCAQrD,SAAmBW,EAAOU,EAAOtF,EAAOa,EAAMoB,GAE1C,IAAI/M,EAAC,aAAO4C,KAAKlG,MAAMqP,UACZ,GAARqE,IACD5O,QAAQC,IAAIzB,GACZA,EAAEyP,KAAK,CACHW,OAAQxN,KAAKlG,MAAMsP,eAAe,EAClC0D,OAAQ,GACR5E,OAAQ,EACRa,MAAM,GACNZ,SAAS,GACTgC,WAAW,GACX/B,QAAQ,KAEZpI,KAAKC,SAAS,CACZkJ,SAAU/L,EACVoM,eAAgBsD,EAChBrD,eAAgBvB,EAChBa,MAAOA,EACPZ,SAAU,EACVgC,WAAYA,EACZf,eAAgBpJ,KAAKlG,MAAMsP,eAAe,EAC1CE,QAAStJ,KAAKlG,MAAMwP,QAAQ,EAC5BC,KAAMvJ,KAAKlG,MAAMyP,KAAK,KAKd,IAATiE,IACD5O,QAAQC,IAAI2O,GACZpQ,EAAEyP,KAAK,CACHW,OAAQxN,KAAKlG,MAAMsP,eAAe,EAClC0D,OAAQ,GACR5E,OAAQ,EACRa,MAAM,GACNZ,SAAU,GACVgC,WAAW,GACX/B,QAAQ,KAEZhL,EAAEqQ,SAAQ,SAAST,GACdA,EAAIQ,QAAUA,IACfR,EAAIF,OAASA,EACbE,EAAI9E,OAASA,EACb8E,EAAIjE,MAAOA,EACXiE,EAAI7C,WAAaA,MAGrBvL,QAAQC,IAAIzB,GACZ4C,KAAKC,SAAS,CACZkJ,SAAU/L,EACVgM,eAAgBpJ,KAAKlG,MAAMsP,eAAe,O,0BAMlD,SAAaoE,GACT5O,QAAQC,IAAI2O,GAEZ,IAAIE,EAAK,aAAM1N,KAAKlG,MAAMqP,UACtBwE,EAAQ3N,KAAKlG,MAAMqP,SAASyE,WAAU,SAAAC,GAAC,OAAGA,EAAEL,SAAWA,KAC3D,GAAGG,GAAO,EAAE,CACVD,EAAMI,OAAOH,EAAM,GACnB,IAAII,EAAIL,EAAMM,OACdpP,QAAQC,IAAIkP,GACZnP,QAAQC,IAAI6O,GACN,GAAHK,GACD/N,KAAKC,SAAS,CACZqJ,QAAS,EACTC,KAAK,IAGTvJ,KAAKC,SAAS,CACZkJ,SAAUuE,O,wBAKlB,WAAa,IAAD,OACRnQ,MACEC,EAAW,sBACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAItCuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC0J,MAAOxL,IAAM,kBAAKS,QAAQC,IAAI,EAAK/E,MAAM6P,aAIpEpM,MACEC,EAAW,sCACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIrCuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UACjBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC2J,YAAazL,IAAM,WAChCS,QAAQC,IAAIV,GACZ,EAAKiO,cAAc,aAIjC7O,MACEC,EAAW,4CACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9BuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACoL,kBAAmBlN,OAGtDZ,MACEC,EAAW,4BACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAItCuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACN,EAAK8B,SAAS,CAACqL,UAAWnN,S,mBAGtC,SAAMqP,GACJ5O,QAAQC,IAAI2O,GACZxN,KAAKC,SAAS,CACZyJ,YAAa8D,M,yBAGjB,WACIxN,KAAKC,SAAS,CACZyJ,YAAa,M,2BAGnB,SAAc3J,GAAM,IAAD,OACjBxC,MAAMC,EAAW,mBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBoQ,eAAgBjO,KAAKlG,MAAM+P,OAE/B/L,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GAEgB,GAAjBA,EAAK0E,UACNjE,QAAQC,IAAIV,GACZ,EAAK8N,kBAAkB,wBAAwB,QACtC,wBAANlM,EACD,EAAKuN,mBAAmBnP,EAAK+P,SAASpB,OAAO,EAAKhT,MAAM4P,YAAY,EAAEvL,EAAK+P,SAAS/F,SACnFhK,EAAK+P,SAAS9N,IAGjB,EAAKkN,mBAAmBnP,EAAK+P,SAASpB,OAAO,EAAKhT,MAAMwP,QAAQ,EAAEnL,EAAK+P,SAAS/F,SAC/EhK,EAAK+P,SAAS9N,KAIN,wBAANL,GACD,EAAKqM,gBACL,EAAKmB,yBAGL,EAAKzB,cACL,EAAKM,gBACL,EAAKmB,6B,mCAOrB,WAAwB,IAAD,OACrBhQ,MAAMC,EAAW,mBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBoQ,eAAgBjO,KAAKlG,MAAM+P,OAE/B/L,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAjBA,EAAK0E,UACNjE,QAAQC,IAAIV,GACZ,EAAKgO,gBAAgB,wBAAwB,UAG7CvN,QAAQC,IAAIV,GACZ,EAAK8N,kBAAkB,wBAAwB,c,4BAK7D,WAAiB,IAAD,OACS,GAApBjM,KAAKlG,MAAMwP,QACJ/L,MAAMC,EAAA,yBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBsQ,UAAWnO,KAAKlG,MAAMuQ,YACtB+D,QAASpO,KAAKlG,MAAMwQ,UACpB+D,MAAOrO,KAAKlG,MAAMyQ,SAElBrC,OAAQlI,KAAKlG,MAAM2Q,qBACnBtC,SAAUnI,KAAKlG,MAAM0Q,eACrB0D,SAAUlO,KAAKlG,MAAM4Q,mBAIzB5M,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,aAAa,QACpC,EAAKR,aACL,EAAK1M,MAAMuP,iBAGX1P,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,qBAAqB,YAG7CzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,qBAAqB,WAG1C5O,MAAMC,EAAA,yBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBsQ,UAAWnO,KAAKlG,MAAMuQ,YACtB+D,QAASpO,KAAKlG,MAAMwQ,UACpB+D,MAAOrO,KAAKlG,MAAMyQ,SAClBrC,OAAQlI,KAAKlG,MAAM6Q,aACnBxC,SAAUnI,KAAKlG,MAAM8Q,eACrBsD,SAAUlO,KAAKlG,MAAM+Q,mBAGzB/M,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,aAAa,QACpC,EAAKR,aACL,EAAK1M,MAAMuP,iBAIX1P,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,qBAAqB,YAG7CzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,qBAAqB,a,gCAKlD,WAAqB,IAAD,OAEdI,EAAG,CAACvM,KAAKlG,MAAM2P,gBACf+C,EAAG,CAACxM,KAAKlG,MAAMqO,UACfsE,EAAG,CAACzM,KAAKlG,MAAMqQ,YAEI,GAApBnK,KAAKlG,MAAMwP,QACZtJ,KAAKC,SAAS,CACZwK,qBAAsB8B,EACtB/B,eAAgBgC,EAChB9B,iBAAkB+B,IACjB,WACD7N,QAAQC,IAAI,EAAK/E,MAAM2Q,qBAAqB,EAAK3Q,MAAM0Q,eAAe,EAAK1Q,MAAM4Q,kBACjF,EAAK6D,qBAIE,aAAKvO,KAAKlG,MAAMqP,UACpBwD,KAAI,SAAC/M,GACS,IAAdA,EAAEuK,aACHoC,EAAEM,KAAKjN,EAAEsI,QACTsE,EAAEK,KAAKjN,EAAEuI,UACTsE,EAAEI,KAAKjN,EAAEuK,gBAGbvL,QAAQC,IAAI0N,EAAEC,EAAEC,GAChBzM,KAAKC,SAAS,CACZ0K,aAAc4B,EACd3B,eAAe4B,EACf3B,iBAAiB4B,IACjB,WACA,EAAK8B,uB,2BAOX,SAAc3O,GAAG,IAAD,OACd,GAAa,UAAVA,EAAE4O,IAAgB,CACnB5P,QAAQC,IAAI,oBACZD,QAAQC,IAAIe,EAAEE,OAAOC,MACrB,IAAIA,EAAOH,EAAEE,OAAOC,KACpBC,KAAKC,SAAS,CAAC4J,KAAMjK,EAAEE,OAAOI,QAAO,kBAAI,EAAKuO,cAAc1O,S,4BAGhE,SAAeH,GAAG,IAAD,OACf,GAAa,UAAVA,EAAE4O,IAAgB,CACnB5P,QAAQC,IAAI,oBACZD,QAAQC,IAAIe,EAAEE,OAAOC,MACVH,EAAEE,OAAOC,KACpBC,KAAKC,SAAS,CAAC4J,KAAMjK,EAAEE,OAAOI,QAAO,kBAAI,EAAKwO,8B,0BAIlD,SAAc9O,GAAG,IAiCF+O,EAjCC,SACc/O,EAAEE,OAAlBC,EADE,EACFA,KAAOG,EADL,EACKA,MACd,GAAS,oBAANH,EAAyB,CAC1B,IAAI6O,EAAW5O,KAAKlG,MAAM2P,eAAiBvJ,EACzCF,KAAKC,SAAS,CACZkI,SAAUjI,EACVkI,QAASwG,IAIf,GAAS,kBAAN7O,EAAuB,CACrB6O,EAAW5O,KAAKlG,MAAMqO,SAAWjI,EACnCF,KAAKC,SAAS,CACZwJ,eAAgBvJ,EAChBkI,QAASwG,IAKL,yBAAN7O,KACG4O,EAAC,aAAO3O,KAAKlG,MAAMqP,WACpBsE,SAAQ,SAACrQ,GACTwB,QAAQC,IAAIqB,GACT9C,EAAEoQ,QAAQ,EAAK1T,MAAM4P,cACrBtM,EAAE+K,SAAWjI,EAAQ9C,EAAEgL,QAAWhL,EAAE8K,OAAShI,MAGhDF,KAAKC,SAAS,CACZkJ,SAAUwF,IACV,kBAAI/P,QAAQC,IAAI8P,OAGb,uBAAN5O,IACI4O,EAAC,aAAO3O,KAAKlG,MAAMqP,WACpBsE,SAAQ,SAACrQ,GACTwB,QAAQC,IAAIqB,GACT9C,EAAEoQ,QAAQ,EAAK1T,MAAM4P,cACrBtM,EAAE8K,OAAShI,EAAO9C,EAAEgL,QAAWhL,EAAE+K,SAAWjI,MAG/CF,KAAKC,SAAS,CACZkJ,SAAUwF,IACV,kBAAI/P,QAAQC,IAAI8P,OAIvB3O,KAAKC,SAAL,eACKF,EAAQG,IAKftB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,+BAInB,WACIF,KAAKyL,e,oBAMT,WAAS,IAAD,OACJ,OACI,sBAAKjJ,UAAU,qCAAf,UACQ,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qDAEJ,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,uBAAOxI,KAAK,SAASkG,MAAM,IAAIH,KAAM,oBAAoBK,GAAG,sBAC5D,uBAAOpG,KAAK,SAASkG,MAAM,IAAIH,KAAM,qBAAqBK,GAAG,uBAC7D,uBAAOpG,KAAK,SAASkG,MAAM,IAAIH,KAAM,oBAAoBK,GAAG,sBAE5D,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,4DACA,8BACI,wBAAQA,UAAU,6BAA6BzC,KAAK,cAAcK,GAAG,cAAcK,MAAO,CAACO,MAAO,OAAQV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMuQ,YAAzJ,SAGQrK,KAAKlG,MAAM8P,YAAYzL,KACvB6B,KAAKlG,MAAM8P,YAAYzL,KAAKwO,KAAI,SAACxO,GAE9B,OACC,yBAAsB+B,MAAO/B,EAAKiC,GAAlC,cAAyCjC,EAAK2O,OAA9C,MAAa3O,EAAKiC,OAIrB,YAMjB,sBAAKoC,UAAU,QAAf,UACI,sDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,YAAYK,GAAG,UAAUE,SAAUN,KAAKqI,kBAE7F,sBAAK7F,UAAU,QAAf,UACI,0CAAoB,uBACpB,cAAC,KAAD,CAAYqM,OAAO,KAAKC,SAAU9O,KAAKlG,MAAMsQ,OAAQ9J,SAAUN,KAAK6L,2BAKhF,qBAAKrJ,UAAU,aAAapC,GAAG,gBAAgBL,KAAK,oBAApD,SACI,sBAAKyC,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wDAAkC,uBAClC,uBAAOxI,KAAK,OAAO+F,KAAK,kBAAkByC,UAAU,eAAe8F,UAAWtI,KAAKuI,mBAEvF,sBAAK/F,UAAU,QAAf,UACI,2CAAqB,uBACrB,uBAAOxI,KAAK,OAAO+F,KAAK,kBAAkByC,UAAU,eAAetC,MAAOF,KAAKlG,MAAM0P,oBAEzF,sBAAKhH,UAAU,8BAAf,UACI,qDACA,uBAAOxI,KAAK,SAAS+F,KAAK,iBAAiBK,GAAG,iBAAiBoC,UAAU,4BACrEmG,QAAQ,qCAAgCzI,MAAOF,KAAKlG,MAAM2P,eAAgBZ,YAAU,WAAWxI,YAAY,KAAKC,SAAUN,KAAKqI,kBAEvI,sBAAK7F,UAAU,gCAAf,UACI,6CACA,uBAAOxI,KAAK,SAASwI,UAAU,uCAAuCzC,KAAK,mBAAmBG,MAAOF,KAAKlG,MAAMqO,SAAU/H,GAAG,mBAAmBE,SAAUN,KAAKqI,kBAEnK,sBAAK7F,UAAU,QAAf,UACI,0CACA,uBAAOxI,KAAK,OAAOwI,UAAU,uCAAuCzC,KAAK,QAAQG,MAAOF,KAAKlG,MAAMiP,WAEvG,sBAAKvG,UAAU,+BAAf,UACI,4CACA,uBAAOxI,KAAK,OAAO+F,KAAK,YAAYK,GAAG,UAAUoC,UAAU,gBAAgBmG,QAAQ,qCAAgCzI,MAAOF,KAAKlG,MAAMsO,QAASS,YAAU,WAAWxI,YAAY,sBAEnL,sBAAKmC,UAAU,QAAf,UACI,uBACA,wBAAQxI,KAAK,SAASwI,UAAU,wCAAwCpC,GAAG,uBAA3E,SACI,mBAAGoC,UAAU,2BAOzBxC,KAAKlG,MAAMqP,SACXnJ,KAAKlG,MAAMqP,SAASwD,KAAI,SAACxO,GACpB,OACC,cAAC,GAAD,CAAwCuK,OAAQvK,EAAKqP,OAASzN,KAAM5B,EAAK2O,OAAQ7D,aAAc,EAAKA,aAAcR,YAAa,EAAKkD,MAAOtD,aAAc,EAAKA,aAAcE,cAAe,EAAKA,cAC/LK,oBAAqBzK,EAAK+J,OAAQY,sBAAuB3K,EAAKgK,SAAUY,MAAO5K,EAAK4K,MAAQoB,WAAYhM,EAAKgM,WAAYnB,aAAc7K,EAAKiK,SADlHjK,EAAKqP,WAKrC,KAKL,qBAAKhL,UAAU,aAAf,SACI,wBAAQxI,KAAK,SAASoG,GAAG,kBAAkBoC,UAAU,sCAAsC/C,QAAS,kBAAI,EAAK6N,sBAA7G,gCAGJ,qBAAK9K,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,eAAeX,QAAS,kBAAI,EAAKmM,sBAA5H,+BAMpB,eAAChF,GAAA,EAAD,CACIE,KAAM9G,KAAKlG,MAAMgQ,oBACjB/C,OAAQ,kBAAM,EAAKwG,wBAFvB,UAII,cAAC3G,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,gCAIF,cAACwG,GAAA,EAAMS,KAAP,UACA,sBAAK7E,UAAU,oBAAf,UACG,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,iBAAf,UACgB,qBAAKA,UAAU,WAAf,SACQ,qBAAKA,UAAU,aAAf,SACA,wBAAOA,UAAU,mBAAjB,UACI,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,iBAAiBK,GAAG,iBAAiBF,MAAM,IAAI6O,eAAe,KADxH,yBAGA,mBAAGvM,UAAU,wBAGjB,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,aAAf,SACA,wBAAOA,UAAU,mBAAjB,UACI,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,iBAAiBK,GAAG,gBAAgBF,MAAM,MADpG,qBAGA,mBAAGsC,UAAU,6BAKrC,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,2DACA,sBAAKA,UAAU,cAAf,UACI,uBAAOxI,KAAK,OAAOqG,YAAY,4CAA4CmC,UAAU,eAAezC,KAAK,oBAAoBK,GAAG,oBAAoBE,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAM0R,oBACpM,qBAAKhJ,UAAU,qBAAf,SACI,wBAASpC,GAAG,oBAAqBoC,UAAU,sCAAsCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKuP,2BAAjH,SAA4I,mBAAGxM,UAAU,+BAO7K,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,2CACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,sBAAsBF,MAAOF,KAAKlG,MAAMmR,oBAAqB3K,SAAUN,KAAKqI,aAAcC,UAAWtI,KAAK0L,oBAExL,qBAAKlJ,UAAU,SAASpC,GAAG,sBAInC,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,2CACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,UAAUK,GAAG,gBAAgBK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMgR,QAA1I,SAEQ9K,KAAKlG,MAAMqR,OACXnL,KAAKlG,MAAMqR,OAAOwB,KAAI,SAAAsC,GAClB,OACI,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA8B6O,EAAQnC,YAG7C,YAKjB,sBAAKtK,UAAU,QAAf,UACI,sDACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,SAASK,GAAG,eAAeK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMiR,OAAxI,SAEQ/K,KAAKlG,MAAMsR,QACXpL,KAAKlG,MAAMsR,QAAQuB,KAAI,SAAAsC,GACvB,OACA,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA4B6O,EAAQnC,YAGrC,iBAOvB,qBAAKtK,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,sBAAsBE,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMoR,6BAI3J,qBAAK1I,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SAQI,sBAAKA,UAAU,QAAf,UACI,wDACA,uBAAOxI,KAAK,OAAO+F,KAAK,sBAAsBK,GAAG,sBAAsBoC,UAAU,eAC7EmG,QAAQ,qCAAgCE,YAAU,WAAWxI,YAAY,iBAAiBC,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMkR,6BAMzJ,qBAAKxI,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,gBAAgBX,QAAS,kBAAI,EAAKyP,uBAA7H,oCAY3B,cAAC5H,GAAA,EAAD,CACM7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK0J,qBACpBnF,KAAM9G,KAAKlG,MAAMkQ,iBACjBrC,MAAO,IACPC,UAAQ,EAZd,SAcQ,cAACN,GAAA,EAAMD,KAAP,UACE,+DAAkCrH,KAAKlG,MAAMoQ,oBAIvD,cAAC5C,GAAA,EAAD,CACQ7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK4J,mBACpBrF,KAAM9G,KAAKlG,MAAMiQ,eACjBpC,MAAO,IACPC,UAAQ,EAZhB,SAeI,cAACN,GAAA,EAAMD,KAAP,UACE,8DAAiCrH,KAAKlG,MAAMmQ,yB,GAhgC3CrJ,aC2FZuO,G,kDAhGX,aAAc,IAAD,8BACT,gBACKrV,MAAO,GAFH,E,0CAMhB,WAAU,IAAD,OACP,OAEE,eAAC8M,GAAA,EAAD,CACGC,KAAK,KACLC,KAAM9G,KAAKjB,MAAMqQ,sBACjBrI,OAAQ,kBAAK,EAAKhI,MAAMsQ,0BAH3B,UAMM,cAACzI,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,2BAIF,cAACwG,GAAA,EAAMS,KAAP,UACE,qBAAK7E,UAAU,oBAAf,SACK,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,mDACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,mBAAmBO,SAAUN,KAAKjB,MAAMsJ,aAAenI,MAAOF,KAAKjB,MAAMuQ,iBAAkBhH,UAAWtI,KAAKjB,MAAMwQ,0BAKlL,qBAAK/M,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,mDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKjB,MAAMyQ,qBAAxC,UAEJ,sBAAKhN,UAAU,QAAf,UACI,0CACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKjB,MAAM0Q,oBAAxC,UAEJ,sBAAKjN,UAAU,QAAf,UACI,iEACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKjB,MAAM2Q,4BAAxC,UAEJ,sBAAKlN,UAAU,QAAf,UACI,2CACA,qBAAIA,UAAU,aAAd,gBAA+BxC,KAAKjB,MAAM4Q,qBAA1C,eAIZ,qBAAKnN,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKjB,MAAM6Q,yBAAxC,UAEJ,sBAAKpN,UAAU,QAAf,UACI,0CACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKjB,MAAM8Q,wBAAxC,UAEJ,sBAAKrN,UAAU,QAAf,UACI,2CACA,qBAAIA,UAAU,aAAd,gBAA+BxC,KAAKjB,MAAM+Q,yBAA1C,eAMZ,qBAAKtN,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,8DACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,qBAAqBO,SAAUN,KAAKjB,MAAMsJ,aAAenI,MAAOF,KAAKjB,MAAMgR,8BAK5I,qBAAKvN,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwD/C,QAAS,kBAAI,EAAKV,MAAMiR,kBAAhH,2C,GArFTpP,aCOzBqP,0BAAe,KAAMC,M,IA41DNC,G,kDAt1DX,aAAc,IAAD,8BACT,gBACKrW,MAAO,CACRsW,aAAc,GAEdjG,WAAW,GACXkG,QAAQ,GACRC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACT3F,QAAQ,GACRC,OAAO,GAEP2F,UAAW,GACXvF,OAAO,GACPC,QAAQ,GACRC,kBAAkB,GAClBC,UAAU,GAEVjB,YAAY,GACZC,UAAU,GACVC,SAAS,GACTH,OAAO,GACPlC,OAAO,GACPC,SAAS,GACTwI,eAAe,GACfnF,kBAAkB,GAElBR,oBAAoB,GACpBC,oBAAoB,GACpBC,oBAAoB,GAEpB0F,aAAa,GACbC,SAAS,GACTC,kBAAkB,GAClBC,gBAAgB,GAChBC,mBAAmB,GACnBC,cAAc,GAGdnH,qBAAoB,EACpBoH,kBAAiB,EACjBC,sBAAqB,EACrBC,2BAA0B,EAC1BC,iBAAgB,EAChBC,sBAAqB,EACrBlC,uBAAsB,EAEtBrF,gBAAe,EACfC,kBAAiB,EACjBC,WAAW,GACXC,aAAa,GAEboE,cAAc,EAEdiD,YAAY,GACZC,YAAY,GAGZC,WAAW,GAAyBC,mBAA6B,GACjEC,eAAe,GAAqBC,WAA6B,GACjEC,sBAAsB,GAAcC,WAA6B,GACjEC,MAAM,GAA8BlI,KAA6B,GAGjEmI,gBAAgB,GAAoBC,oBAA6B,GACjEC,mBAAmB,GAAiBC,2BAA6B,GACjEC,oBAAoB,GAAgBC,wBAA6B,GACjEC,uBAAuB,GAAaC,wBAA6B,GACjEC,kBAAkB,GAAkBC,cAA6B,GAGjEnD,iBAAiB,GAAoBE,qBAA8B,GACnEC,oBAAoB,GAAiBC,4BAA8B,GACnEC,qBAAqB,GAAgBC,yBAA8B,GACnEC,wBAAwB,GAAaC,yBAA8B,GACnEC,mBAAmB,GAAkB2C,eAA8B,IAKvE,EAAKC,WAAa,EAAKA,WAAWhR,KAAhB,iBAClB,EAAKiR,SAAW,EAAKA,SAASjR,KAAd,iBAChB,EAAK0G,aAAe,EAAKA,aAAa1G,KAAlB,iBACpB,EAAKkK,iBAAmB,EAAKA,iBAAiBlK,KAAtB,iBACxB,EAAKkR,gBAAkB,EAAKA,gBAAgBlR,KAArB,iBACvB,EAAKyK,cAAgB,EAAKA,cAAczK,KAAnB,iBACrB,EAAKmR,qBAAsB,EAAKA,qBAAqBnR,KAA1B,iBAC3B,EAAKoR,eAAe,EAAKA,eAAepR,KAApB,iBACpB,EAAK+J,eAAe,EAAKA,eAAe/J,KAApB,iBACpB,EAAKqR,eAAe,EAAKA,eAAerR,KAApB,iBACpB,EAAKsR,eAAe,EAAKA,eAAetR,KAApB,iBACpB,EAAK4N,eAAe,EAAKA,eAAe5N,KAApB,iBACpB,EAAK0N,uBAAwB,EAAKA,uBAAuB1N,KAA5B,iBAC7B,EAAKgE,IAAI,EAAKA,IAAIhE,KAAT,iBACT,EAAKqO,eAAe,EAAKA,eAAerO,KAApB,iBAhGX,E,uCAoGb,WACE3B,KAAKC,SAAS,CAACqO,cAAgBtO,KAAKlG,MAAMwU,iB,6BAG5C,SAAgBzI,EAAQhJ,GACT,QAARA,EACHmD,KAAKC,SAAS,CACVgK,WAAYpE,EACZkE,gBAAgB,IAGlB/J,KAAKC,SAAS,CACV8J,gBAAgB,M,+BAK1B,SAAkBlE,EAAQhJ,GACX,QAARA,EACHmD,KAAKC,SAAS,CACViK,aAAcrE,EACdmE,kBAAkB,IAGpBhK,KAAKC,SAAS,CACV+J,kBAAkB,M,kCAI5B,WACIhK,KAAKC,SAAS,CACV6J,qBAAsB9J,KAAKlG,MAAMgQ,wB,+BAGzC,WACI9J,KAAKC,SAAS,CACViR,kBAAmBlR,KAAKlG,MAAMoX,qB,mCAGtC,WACIlR,KAAKC,SAAS,CACVkR,sBAAuBnR,KAAKlG,MAAMqX,yB,wCAG1C,WACInR,KAAKC,SAAS,CACVmR,2BAA4BpR,KAAKlG,MAAMsX,8B,8BAG/C,WACIpR,KAAKC,SAAS,CACVoR,iBAAkBrR,KAAKlG,MAAMuX,oB,mCAGrC,WACIrR,KAAKC,SAAS,CACVqR,sBAAuBtR,KAAKlG,MAAMwX,yB,oCAG1C,WACItR,KAAKC,SAAS,CACVmP,uBAAwBpP,KAAKlG,MAAMsV,0B,iCAG3C,WACEpP,KAAKC,SAAS,CAACqO,cAAgBtO,KAAKlG,MAAMwU,iB,yBAI5C,WAEItO,KAAKC,SAAS,CACVkK,WAAW,GACXkG,QAAQ,GACRC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GAGTC,UAAW,GACXrG,YAAY,GACZC,UAAU,GACVC,SAAS,GACTH,OAAO,GACPlC,OAAO,GACPC,SAAS,GACTqD,kBAAkB,GAClBR,oBAAoB,GACpBC,oBAAoB,GACpBC,oBAAoB,GACpB0F,aAAa,GACbE,kBAAkB,GAClBC,gBAAgB,GAChBC,mBAAmB,GACnBC,cAAc,GAGdQ,WAAW,GAAyBC,mBAA6B,GACjEC,eAAe,GAAqBC,WAA6B,GACjEC,sBAAsB,GAAcC,WAA6B,GACjEC,MAAM,GAA8BlI,KAA6B,GAGjEmI,gBAAgB,GAAoBC,oBAA6B,GACjEC,mBAAmB,GAAiBC,2BAA6B,GACjEC,oBAAoB,GAAgBC,wBAA6B,GACjEC,uBAAuB,GAAaC,wBAA6B,GACjEC,kBAAkB,GAAkBC,cAA6B,GAEjEnD,iBAAiB,GAAoBE,qBAA8B,GACnEC,oBAAoB,GAAiBC,4BAA8B,GACnEC,qBAAqB,GAAgBC,yBAA8B,GACnEC,wBAAwB,GAAaC,yBAA8B,GACnEC,mBAAmB,GAAkB2C,eAA8B,O,6BAK3E,WAAkB,IAAD,OACbnV,MACIC,EAAW,4CACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACoL,kBAAmBlN,IAAO,WACrC,EAAKiO,wB,sBAKzB,WAAW,IAAD,OACN7O,MAAMC,EAAA,uBAA2BwC,KAAKlG,MAAM8W,cACxC,CACIlT,OAAQ,OACRC,KAAMC,KAAKC,UAAU,IAGrBC,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACFS,QAAQC,IAAIV,GACZ,EAAK8B,SAAS,CAAC4Q,SAAU1S,IAAO,WAC5B,EAAK+U,qB,wBAKjB,WACOlT,KAAKlG,MAAM+W,WACV7Q,KAAKC,SAAS,CACV6Q,kBAAkB9Q,KAAKlG,MAAM+W,SAASsC,QAAQC,UAAU,GACxDrC,gBAAgB/Q,KAAKlG,MAAM+W,SAASsC,QAAQE,YAC5CrC,mBAAmBhR,KAAKlG,MAAM+W,SAASsC,QAAQG,UAC/CrC,cAAcjR,KAAKlG,MAAM+W,SAASsC,QAAQI,OAE9C3U,QAAQC,IAAImB,KAAKlG,MAAM+W,a,wBAI/B,WAAa,IAAD,OACJtT,MACIC,EAAW,sBACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACmQ,aAAcjS,IAAM,kBAAI,EAAKqV,oBAC5C5U,QAAQC,IAAI,EAAK/E,MAAMsW,iBAI/B7S,MACIC,EAAW,sCACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAItCuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC0Q,eAAgBxS,OAI/CZ,MACIC,EAAW,4CACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAItCuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACoL,kBAAmBlN,OAGlDZ,MACIC,EAAW,4BACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACN,EAAK8B,SAAS,CAACqL,UAAWnN,S,2BAItC,WAAgB,IAGRmO,EACAI,EAJO,OACPH,EAAI,GACJC,EAAI,GAILxM,KAAKlG,MAAMwR,UAAUnN,MACpB6B,KAAKlG,MAAMwR,UAAUnN,KAAKwO,KAAI,SAAAC,GAC1BL,EAAEM,KAAK,CACHC,OAAQF,EAAKE,OACb1M,GAAIwM,EAAKxM,QAKrBkM,EAAC,aAAQ,IAAIS,IAAIR,EAAEI,KAAI,SAAAK,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAIF,OAAR,YAAkBE,EAAI5M,IAAM4M,OAAOC,UAE9DjN,KAAKlG,MAAMuR,kBAAkBlN,MAC5B6B,KAAKlG,MAAMuR,kBAAkBlN,KAAKwO,KAAI,SAAAC,GAClCJ,EAAEK,KAAK,CACHC,OAAQF,EAAKE,OACb1M,GAAIwM,EAAKxM,QAIrBsM,EAAC,aAAQ,IAAIK,IAAIP,EAAEG,KAAI,SAAAK,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAIF,OAAR,YAAkBE,EAAI5M,IAAM4M,OAAOC,UAEjEjN,KAAKC,SAAS,CACVkL,OAAQmB,EACRlB,QAASsB,IACX,kBAAI,EAAKS,sB,4BAGf,WAAiB,IAAD,OAEVZ,EAAIvM,KAAKlG,MAAMqR,OAAO,GACtBqB,EAAIxM,KAAKlG,MAAMsR,QAAQ,GAE3B,GAAGmB,GAAKC,EAAE,CACV,IAAI1B,EAAUyB,EAAEnM,GACZ2K,EAASyB,EAAEpM,GAEfJ,KAAKC,SAAS,CACZ6K,QAASA,EACTC,OAAQA,IACR,kBAAInM,QAAQC,IAAI,EAAK/E,MAAMgR,QAAS,EAAKhR,MAAMiR,c,sBAMnD,SAAS0I,EAAIC,EAAMC,EAAOC,EAAMC,EAAMpD,EAAQqD,EAAIC,GAE9CnV,QAAQC,IAAI6U,EAAMC,EAAOC,EAAMC,EAAMpD,EAAQqD,EAAIC,GAEjD,IAEIzH,EACAI,EAHAH,EAAI,GACJC,EAAI,GAILxM,KAAKlG,MAAMwR,UAAUnN,MACpB6B,KAAKlG,MAAMwR,UAAUnN,KAAKwO,KAAI,SAAAC,GAC1BL,EAAEM,KAAK,CACHC,OAAQF,EAAKE,OACb1M,GAAIwM,EAAKxM,QAIrBkM,EAAC,aAAQ,IAAIS,IAAIR,EAAEI,KAAI,SAAAK,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAIF,OAAR,YAAkBE,EAAI5M,IAAM4M,OAAOC,UAE9DjN,KAAKlG,MAAMuR,kBAAkBlN,MAC5B6B,KAAKlG,MAAMuR,kBAAkBlN,KAAKwO,KAAI,SAAAC,GAClCJ,EAAEK,KAAK,CACJC,OAAQF,EAAKE,OACb1M,GAAIwM,EAAKxM,QAIpBsM,EAAC,aAAQ,IAAIK,IAAIP,EAAEG,KAAI,SAAAK,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAIF,OAAR,YAAkBE,EAAI5M,IAAM4M,OAAOC,UAGjEjN,KAAKC,SAAS,CACVkK,WAAYsJ,EACZpD,QAASqD,EACTpD,QAASqD,EACTpD,QAASqD,EACTpD,QAASqD,EACTpD,QAASA,EACT3F,QAASgJ,EACT/I,OAAOgJ,EACP5I,OAAQmB,EACRlB,QAASsB,M,gCAKf,WAAqB,IAAD,OAEd9N,QAAQC,IAAImB,KAAKlG,MAAMuQ,YACnBrK,KAAKlG,MAAMwQ,UACXtK,KAAKlG,MAAMyQ,SACXvK,KAAKlG,MAAMoO,OACVlI,KAAKlG,MAAMqO,SACZnI,KAAKlG,MAAMqQ,YACf5M,MAAMC,EAAA,yBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBsQ,UAAWnO,KAAKlG,MAAMuQ,YACtB+D,QAASpO,KAAKlG,MAAMwQ,UACpB+D,MAAOrO,KAAKlG,MAAMyQ,SAClBrC,OAAQlI,KAAKlG,MAAMoO,OACnBC,SAAUnI,KAAKlG,MAAMqO,SACrB+F,SAAUlO,KAAKlG,MAAMqQ,WACrB6J,iBAAkB,IAGtBlW,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,iCAAiC,QACxD,EAAK0G,eAGL/T,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,mCAAmC,YAG3DzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,mCAAmC,a,iCAG9D,WAAsB,IAAD,OAEjB5O,MAAMC,EAAA,0BACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBmN,oBAAoBhL,KAAKlG,MAAMkR,oBAC/BC,oBAAoBjL,KAAKlG,MAAMmR,oBAC/BmC,cAAcpN,KAAKlG,MAAMgR,QACzBuC,aAAerN,KAAKlG,MAAMiR,OAC1BG,oBAAqBlL,KAAKlG,MAAMoR,sBAEpCpN,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK5CuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,sCAAsC,QAC7D,EAAK0G,aACL,EAAKsB,gBAGLrV,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,oCAAoC,YAI5DzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,oCAAoC,a,qCAGjE,WAA0B,IAAD,OAEjB5O,MAAMC,EAAA,sBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB2N,kBAAmBxL,KAAKlG,MAAM0R,oBAElC1N,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACkB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,8CAA8C,QACrE,EAAKiI,oBAGLtV,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,yCAAyC,YAGnEzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,yCAAyC,a,+BAIpE,WAAoB,IAAD,OACb5O,MAAMC,EAAW,wBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBsW,mBAAoBnU,KAAKlG,MAAMiY,QAEnCjU,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAjBA,EAAK0E,UAAmC,GAAf1E,EAAKiW,QAC/BxV,QAAQC,IAAIV,GACZ,EAAK8N,kBAAkB9N,EAAKb,QAAQ,QACpC,EAAK2C,SAAS,CACZ4R,sBAAuB1T,EAAK+P,SAAS/F,SACrCyJ,WAAYzT,EAAK+P,SAASpB,OAC1BhC,QAAS3M,EAAK+P,SAASmG,SACvBtJ,OAAQ5M,EAAK+P,SAASoG,QACtBxC,WAAW3T,EAAK+P,SAAShG,UAGJ,GAAjB/J,EAAK0E,UAAmC,GAAf1E,EAAKiW,QACpCxV,QAAQC,IAAIV,GACZ,EAAK8N,kBAAkB9N,EAAKb,QAAQ,UAGpCsB,QAAQC,IAAIV,GACZ,EAAKgO,gBAAgBhO,EAAKb,QAAQ,c,6BAMpD,WAAkB,IAAD,OAEPC,MAAMC,EAAA,sBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB4T,WAAYzR,KAAKlG,MAAM2X,WACvBtH,WAAYnK,KAAKlG,MAAM6X,eACvBtE,aAAcrN,KAAKlG,MAAMiR,OACzBqC,cAAgBpN,KAAKlG,MAAMgR,QAC3BkJ,iBAAkBhU,KAAKlG,MAAM+X,sBAC7BD,WAAY5R,KAAKlG,MAAM8X,WACvBE,WAAY9R,KAAKlG,MAAMgY,aAG3BhU,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,kCAAkC,QACzD,EAAKgI,cACL,EAAKtB,eAIL/T,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,mCAAmC,YAI7DzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,mCAAmC,a,8BAIhE,WAAmB,IAAD,OAEV5O,MAAMC,EAAA,uBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB0W,YAAavU,KAAKlG,MAAMya,cAE5BzW,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,mCAAmC,QAC1D,EAAK0G,eAGL/T,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,oCAAoC,YAI9DzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,oCAAoC,a,kCAG/D,WAAuB,IAAD,OACd5O,MAAMC,EAAW,2BACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB+S,aAAa5Q,KAAKlG,MAAM8W,aACxBE,kBAAkB9Q,KAAKlG,MAAMgX,kBAC7BC,gBAAgB/Q,KAAKlG,MAAMiX,gBAC3BC,mBAAmBhR,KAAKlG,MAAMkX,mBAC9BC,cAAcjR,KAAKlG,MAAMmX,gBAE7BnT,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,uCAAuC,UAG9DrN,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,qCAAqC,YAG/DzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,qCAAqC,a,2BAGpE,WAAgB,IAAD,OAEP5O,MAAMC,EAAA,sBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB4T,WAAYzR,KAAKlG,MAAMkY,gBACvBwC,SAAUxU,KAAKlG,MAAM0Y,oBAGzB1U,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,iCAAiC,QACxD,EAAKgI,cACL,EAAKtB,eAGL/T,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,iCAAiC,YAI3DzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,iCAAiC,a,oCAIhE,WAAyB,IAAD,OACpB5O,MAAMC,EAAW,yBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB4T,WAAYzR,KAAKlG,MAAM2Y,gBAE3B3U,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAjBA,EAAK0E,UACNjE,QAAQC,IAAIV,GACZ,EAAK8B,SAAS,CACZgS,oBAAoB9T,EAAKsW,KAAK3H,OAC9BoF,mBAAmB/T,EAAKsW,KAAK1L,MAC7BqJ,oBAAoBjU,EAAKsW,KAAKvM,OAC9BiK,2BAA2BhU,EAAKsW,KAAKtM,SACrCkK,wBAAwBlU,EAAKuW,SAAS5H,OACtCwF,uBAAuBnU,EAAKuW,SAAS3L,MACrCwJ,wBAAwBpU,EAAKuW,SAASxM,SACtC,kBAAItJ,QAAQC,IAAI,gBAClB,EAAKoN,kBAAkB,cAAc,UAGrCrN,QAAQC,IAAIV,GACZ,EAAKgO,gBAAgB,iBAAiB,c,4BAKpD,WAAiB,IAAD,OAER5O,MAAMC,EAAA,uBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB4T,WAAYzR,KAAKlG,MAAMwV,iBACvBkF,SAAUxU,KAAKlG,MAAMiW,qBAGzBjS,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,iCAAiC,QACxD,EAAKgI,cACL,EAAKtB,eAGL/T,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,kCAAkC,YAI5DzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,iCAAiC,a,qCAIhE,WAA0B,IAAD,OACrB5O,MAAMC,EAAW,yBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB4T,WAAYzR,KAAKlG,MAAM4Y,iBAE3B5U,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAjBA,EAAK0E,UACNjE,QAAQC,IAAIV,GACZ,EAAK8B,SAAS,CACZuP,qBAAqBrR,EAAKsW,KAAK3H,OAC/B2C,oBAAoBtR,EAAKsW,KAAK1L,MAC9B4G,qBAAqBxR,EAAKsW,KAAKvM,OAC/BwH,4BAA4BvR,EAAKsW,KAAKtM,SACtCyH,yBAAyBzR,EAAKuW,SAAS5H,OACvC+C,wBAAwB1R,EAAKuW,SAAS3L,MACtC+G,yBAAyB3R,EAAKuW,SAASxM,SACvC,kBAAItJ,QAAQC,IAAI,gBAClB,EAAKoN,kBAAkB,cAAc,UAGrCrN,QAAQC,IAAIV,GACZ,EAAKgO,gBAAgB,iBAAiB,c,gCAMxD,WAAqB,IAAD,OAEhB5O,MAAMC,EAAA,2BACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB8W,iBAAkB3U,KAAKlG,MAAMqQ,WAC7ByK,0BAA2B5U,KAAKlG,MAAMuW,QACtCwE,oBAAqB7U,KAAKlG,MAAMgR,QAChCgK,mBAAoB9U,KAAKlG,MAAMiR,OAC/BgK,0BAA2B/U,KAAKlG,MAAM0W,QACtCwE,0BAA2BhV,KAAKlG,MAAM2W,UAI1C3S,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACkB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,qCAAqC,QAC5D,EAAK0G,eAGL/T,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,mCAAmC,YAG7DzN,OAAM,SAACC,GACRC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,mCAAmC,a,4BAG9D,SAAe/L,GAAI,IAAD,OACdxB,QAAQC,IAAIuB,GACR7C,MAAMC,EAAA,qBAAgC,CAClCE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBuC,GAAIA,IAERtC,QAAS,CACL,OAAW,mBACX,eAAiB,mBACjB,MAAkBvD,aAAaC,QAAQ,YAG9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,yBAAyB,QAChD,EAAK0G,eAGL/T,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,gCAAgC,YAG1DzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,gCAAgC,a,4BAM7D,WAAiB,IAAD,OACRM,EAAIzM,KAAKlG,MAAMsW,aAAa6E,UAChCrW,QAAQC,IAAI4N,GACZ,IAAIF,EAAI,GACR,GAAGE,EAAE,CAEL,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACvBtB,EAAEM,KAAKgB,GAET7N,KAAKC,SAAS,CAACsR,YAAahF,IAAG,kBAAI3N,QAAQC,IAAI,EAAK/E,MAAMyX,mB,6BAI9D,SAAgB7I,GAAQ,IAAD,OACnB9J,QAAQC,IAAI6J,GACZnL,MACIC,EAAA,mCAAuCkL,EAAvC,mBAAwD1I,KAAKlG,MAAM0X,aACnE,CACE9T,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACmQ,aAAcjS,IAAM,WACjCS,QAAQC,IAAI,EAAK/E,MAAMsW,cACvB,EAAKoD,yB,wBAQjB,SAAW0B,EAAMnV,GAAM,IAAD,OAChBxC,MACIC,EAAA,8BAAkCuC,EAAlC,YAA0CmV,GAC1C,CACIxX,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIhDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACJ,EAAK8B,SAAS,CAACmQ,aAAcjS,EAAKqT,YAAa0D,IAAQ,WACnD,EAAK1B,iBACL5U,QAAQC,IAAI,qB,kCAK1B,SAAsBe,GAAG,IAAD,EACGA,EAAEE,OAAlBC,EADa,EACbA,KAAOG,EADM,EACNA,MACdtB,QAAQC,IAAIqB,GACZF,KAAKmV,WAAWjV,EAAMH,GACtBnB,QAAQC,IAAIkB,K,0BAQjB,SAAcH,GAAG,IAAD,EACcA,EAAEE,OAAlBC,EADE,EACFA,KAAOG,EADL,EACKA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,GACZtB,QAAQC,IAAImB,KAAKlG,MAAMuQ,e,6BAG/B,SAAgBzK,GAAG,IAAD,SACSA,EAAEE,OAAlBC,EADO,EACPA,KAAOG,EADA,EACAA,MAEK,IAAhBA,EAAM8N,SACLhO,KAAKC,SAAL,eACKF,EAAQG,IAEV,WACC,EAAKkV,cAETxW,QAAQC,IAAIqB,M,8BAKnB,SAAkB6L,GACd/L,KAAKC,SAAS,CACVsK,SAAUyB,mBAAOD,EAAM,cACvB3B,OAAQ2B,IAEZnN,QAAQC,IAAImB,KAAKlG,MAAMyQ,Y,+BAE5B,WACIvK,KAAK2S,e,4BAKT,SAAe/S,GACA,UAAVA,EAAE4O,MACH5P,QAAQC,IAAI,oBACZmB,KAAK0O,2B,4BAGT,SAAe9O,GAAG,IAAD,OACf,GAAa,UAAVA,EAAE4O,IAAgB,CACnB5P,QAAQC,IAAI,oBACZD,QAAQC,IAAIe,EAAEE,OAAOC,MACVH,EAAEE,OAAOC,KACpBC,KAAKC,SAAS,CAAC4J,KAAMjK,EAAEE,OAAOI,QAAO,kBAAI,EAAKmV,kC,4BAGlD,SAAezV,GAAG,IAAD,OACF,UAAVA,EAAE4O,MACH5P,QAAQC,IAAI,oBACZD,QAAQC,IAAIe,EAAEE,OAAOC,MACrBC,KAAKC,SAAS,CAAC8R,MAAOnS,EAAEE,OAAOI,QAAO,kBAAI,EAAKoV,0B,4BAGnD,SAAe1V,GAAG,IAAD,OACF,UAAVA,EAAE4O,MACH5P,QAAQC,IAAI,oBACZD,QAAQC,IAAIe,EAAEE,OAAOC,MACrBC,KAAKC,SAAS,CAACwS,cAAe7S,EAAEE,OAAOI,QAAO,kBAAI,EAAKqV,+B,4BAG3D,SAAe3V,GAAG,IAAD,OACF,UAAVA,EAAE4O,MACH5P,QAAQC,IAAI,oBACZmB,KAAKC,SAAS,CAACyS,eAAgB9S,EAAEE,OAAOI,QAAO,kBAAI,EAAKsV,gC,mCAG5D,WAAwB,IAAD,OACnBjY,MAAMC,EAAW,mBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBoQ,eAAgBjO,KAAKlG,MAAMmR,sBAE/BnN,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAjBA,EAAK0E,UACNjE,QAAQC,IAAIV,GACZ,EAAKgO,gBAAgB,wBAAwB,UAG7CvN,QAAQC,IAAIV,GACZ,EAAK8N,kBAAkB,wBAAwB,c,uCAO/D,WAA4B,IAAD,OACvB1O,MAAMC,EAAW,wBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBsW,mBAAoBnU,KAAKlG,MAAM+P,OAEnC/L,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAK1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAjBA,EAAK0E,UAAmC,GAAf1E,EAAKiW,QAC/BxV,QAAQC,IAAIV,GACZ,EAAK8N,kBAAkB,wBAAwB,QAC/C,EAAKhM,SAAS,CAAC0R,eAAgBxT,EAAK+P,SAAS9N,MAEtB,GAAjBjC,EAAK0E,UAAmC,GAAf1E,EAAKiW,QACpCxV,QAAQC,IAAIV,GACZ,EAAKgO,gBAAgB,iCAAiC,QACtD,EAAKsJ,mBACL,EAAKlI,yBAGL3O,QAAQC,IAAIV,GACZ,EAAKgO,gBAAgBhO,EAAKb,QAAQ,c,oBAOlD,WAAS,IAAD,OACJ,OACI,sBAAKkF,UAAU,MAAf,UAEA,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,gCACA,sBAAKA,UAAU,eAAf,UACI,wBAAQxI,KAAK,SAASwI,UAAU,2CAA2C/C,QAAS,kBAAM,EAAKiW,uBAA/F,6BACA,wBAAQ1b,KAAK,SAASwI,UAAU,2CAA2C/C,QAAS,WAAK,EAAK2M,gBAAgB,EAAKmB,wBAAnH,8BACA,wBAAQvT,KAAK,SAASwI,UAAU,0CAA0C/C,QAAS,WAAK,EAAK2M,gBAAgB,EAAKqJ,oBAAlH,0BACA,wBAAQzb,KAAK,SAASwI,UAAU,wCAAwC/C,QAAS,kBAAI,EAAKkW,yBAA1F,wBACA,wBAAQ3b,KAAK,SAASwI,UAAU,yCAAyC/C,QAAS,kBAAI,EAAK4P,0BAA3F,yBACA,wBAAQrV,KAAK,SAASwI,UAAU,wCAAwC/C,QAAS,kBAAI,EAAKmW,qBAA1F,2BACA,wBAAQ5b,KAAK,SAASwI,UAAU,2CAA2C/C,QAAS,kBAAI,EAAKoW,yBAA7F,yCAOV7V,KAAKlG,MAAMwU,cAAgB,cAAC,GAAD,CAAcA,aAActO,KAAK2F,MAElE,qBAAKnD,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACC,oBAAIA,UAAU,aAAd,oBACC,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,UAAUK,GAAG,mBAAmBE,SAAUN,KAAK8S,0BAEpH,sBAAKtQ,UAAU,QAAf,UACI,iDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,SAASK,GAAG,kBAAkBE,SAAUN,KAAK8S,0BAElH,sBAAKtQ,UAAU,QAAf,UACI,gDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,QAAQK,GAAG,iBAAiBE,SAAUN,KAAK8S,0BAEhH,sBAAKtQ,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,UAAUK,GAAG,mBAAmBE,SAAUN,KAAK8S,oCAQ1I,qBAAKtQ,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,kCACA,wBAAOpC,GAAG,aAAaoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAO,QAAtE,UACI,gCACI,+BACI,wCACA,uCACA,sCACA,wCACA,wCACA,0CACA,+CAGR,gCAEQhB,KAAKlG,MAAMsW,aAAajS,KACxB6B,KAAKlG,MAAMsW,aAAajS,KAAKwO,KAAI,SAAAC,GAC7B,OACI,+BACI,6BAAKA,EAAKqB,iBACV,6BAAKrB,EAAK2H,cACV,6BAAK3H,EAAKkJ,aACV,6BAAKlJ,EAAKpD,iBACV,6BAAKoD,EAAKnD,iBACV,6BAAKmD,EAAKoH,mBACV,+BACC,wBAAQvU,QAAS,kBAAK,EAAKsW,eAAenJ,EAAKzC,aAC5C3H,UAAU,iCADb,SAEI,mBAAGA,UAAU,iBAAb,iBAEJ,wBACG/C,QAAS,WAAM,EAAKmT,SAAShG,EAAKzC,WAAWyC,EAAKqB,eAAerB,EAAK2H,YACtE3H,EAAKkJ,WAAWlJ,EAAKpD,eAAeoD,EAAKnD,eAAemD,EAAK9B,QAAQ8B,EAAK7B,QAAS,EAAKiL,8BACxFxT,UAAU,kCAAkC8D,cAAY,uBAH3D,SAII,mBAAG9D,UAAU,sBAAb,uBAhBAoK,EAAKqB,mBAqBd,UAIlB,qBAAKzL,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,QAAf,SAGIxC,KAAKlG,MAAMyX,YACXvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACvB,OACI,wBACIpK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKwW,gBAAgBrJ,IADhG,SACwGA,GAD3FA,MAIZ,kBAS5B,cAAC,GAAD,CAAawC,sBAAuBpP,KAAKlG,MAAMsV,sBAAuBC,uBAAwBrP,KAAKqP,uBAEnGC,iBAAkBtP,KAAKlG,MAAMwV,iBAAmBE,qBAAsBxP,KAAKlG,MAAM0V,qBACjFC,oBAAqBzP,KAAKlG,MAAM2V,oBAAqBC,4BAA6B1P,KAAKlG,MAAM4V,4BAC7FC,qBAAsB3P,KAAKlG,MAAM6V,qBAAsBC,yBAA0B5P,KAAKlG,MAAM8V,yBAC5FC,wBAAyB7P,KAAKlG,MAAM+V,wBAAyBC,yBAA0B9P,KAAKlG,MAAMgW,yBAClGC,mBAAoB/P,KAAKlG,MAAMiW,mBAC/BC,eAAgBhQ,KAAKgQ,eACrB3H,aAAcrI,KAAKqI,aACnBkH,eAAgBvP,KAAKuP,iBAItB,eAAC3I,GAAA,EAAD,CACCE,KAAM9G,KAAKlG,MAAMuX,gBACjBtK,OAAQ,kBAAM,EAAK0O,oBAFpB,UAKI,cAAC7O,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,4BAIF,cAACwG,GAAA,EAAMS,KAAP,UACA,qBAAK7E,UAAU,oBAAf,SACO,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,mDACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,aAAaO,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAM2X,WAAYnJ,UAAWtI,KAAKgT,0BAK1J,qBAAKxQ,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uDACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,qBAAqBO,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAM4X,mBAAoBpJ,UAAWtI,KAAK+S,0BAK1K,qBAAKvQ,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uEACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,wBAAwBO,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAM+X,iCAKzI,qBAAKrP,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,mDACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,aAAaO,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAM8X,sBAK9H,qBAAKpP,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,2CACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,UAAUK,GAAG,gBAAgBK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMgR,QAA1I,SAEQ9K,KAAKlG,MAAMqR,OACXnL,KAAKlG,MAAMqR,OAAOwB,KAAI,SAAAsC,GAClB,OACI,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA8B6O,EAAQnC,YAG7C,YAKjB,sBAAKtK,UAAU,QAAf,UACI,sDACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,SAASK,GAAG,eAAeK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMiR,OAAxI,SAEQ/K,KAAKlG,MAAMsR,QACXpL,KAAKlG,MAAMsR,QAAQuB,KAAI,SAAAsC,GACrB,OACA,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA4B6O,EAAQnC,YAGvC,iBAOvB,qBAAKtK,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,gEACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,aAAaO,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAMgY,sBAK9H,qBAAKtP,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,gBAAgBX,QAAS,kBAAI,EAAKyW,mBAA7H,mCAU3B,eAACtP,GAAA,EAAD,CACGC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMwX,qBACjBvK,OAAQ,kBAAM,EAAK4O,yBAHtB,UAMM,cAAC/O,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,0BAIF,cAACwG,GAAA,EAAMS,KAAP,UACE,qBAAK7E,UAAU,oBAAf,SACK,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,mDACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,kBAAkBO,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAMkY,gBAAiB1J,UAAWtI,KAAKiT,0BAKpK,qBAAKzQ,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,mDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMmY,oBAAxC,UAEJ,sBAAKzP,UAAU,QAAf,UACI,0CACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMoY,mBAAxC,UAEJ,sBAAK1P,UAAU,QAAf,UACI,iEACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMqY,2BAAxC,UAEJ,sBAAK3P,UAAU,QAAf,UACI,2CACA,qBAAIA,UAAU,aAAd,gBAA+BxC,KAAKlG,MAAMsY,oBAA1C,eAIZ,qBAAK5P,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMuY,wBAAxC,UAEJ,sBAAK7P,UAAU,QAAf,UACI,0CACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMwY,uBAAxC,UAEJ,sBAAK9P,UAAU,QAAf,UACI,2CACA,qBAAIA,UAAU,aAAd,gBAA+BxC,KAAKlG,MAAMyY,wBAA1C,eAMZ,qBAAK/P,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,8DACA,qBAAKA,UAAU,cAAf,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,oBAAoBO,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAM0Y,6BAKrI,qBAAKhQ,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwD/C,QAAS,kBAAI,EAAKmF,iBAA1G,sCAU7B,eAACgC,GAAA,EAAD,CACIE,KAAM9G,KAAKlG,MAAMgQ,oBACjB/C,OAAQ,kBAAM,EAAKwG,wBAFvB,UAII,cAAC3G,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,gCAIF,cAACwG,GAAA,EAAMS,KAAP,UACC,sBAAK7E,UAAU,oBAAf,UACG,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,iBAAf,UACgB,qBAAKA,UAAU,WAAf,SACQ,qBAAKA,UAAU,aAAf,SACA,wBAAOA,UAAU,mBAAjB,UACI,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,iBAAiBK,GAAG,iBAAiBF,MAAM,IAAI6O,eAAe,KADxH,yBAGA,mBAAGvM,UAAU,wBAGjB,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,aAAf,SACA,wBAAOA,UAAU,mBAAjB,UACI,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,iBAAiBK,GAAG,gBAAgBF,MAAM,MADpG,qBAGA,mBAAGsC,UAAU,6BAKrC,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,2DACA,sBAAKA,UAAU,cAAf,UACI,uBAAOxI,KAAK,OAAYqG,YAAY,4CAA4CmC,UAAU,eAAezC,KAAK,oBAAoBK,GAAG,oBAAoBE,SAAUN,KAAKqI,aAAenI,MAAOF,KAAKlG,MAAM0R,oBACzM,qBAAKhJ,UAAU,yBAAf,SACI,wBAASpC,GAAG,oBAAqBoC,UAAU,sCAAsCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKuP,2BAAjH,SAA4I,mBAAGxM,UAAU,+BAO7K,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,2CACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,sBAAsBF,MAAOF,KAAKlG,MAAMmR,oBAAqB3C,UAAWtI,KAAK0L,eAAgBpL,SAAUN,KAAKqI,kBAE1L,qBAAK7F,UAAU,SAASpC,GAAG,sBAInC,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,2CACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,UAAUK,GAAG,gBAAgBK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMgR,QAA1I,SAEQ9K,KAAKlG,MAAMqR,OACXnL,KAAKlG,MAAMqR,OAAOwB,KAAI,SAAAsC,GAClB,OACI,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA8B6O,EAAQnC,YAG7C,YAKjB,sBAAKtK,UAAU,QAAf,UACI,sDACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,SAASK,GAAG,eAAeK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMiR,OAAxI,SAEQ/K,KAAKlG,MAAMsR,QACXpL,KAAKlG,MAAMsR,QAAQuB,KAAI,SAAAsC,GACvB,OACA,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA4B6O,EAAQnC,YAGrC,iBAOvB,qBAAKtK,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,sBAAsBE,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMoR,6BAI3J,qBAAK1I,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,QAAf,UACI,wDACA,uBAAOxI,KAAK,OAAO+F,KAAK,sBAAsBK,GAAG,sBAAsBoC,UAAU,eAC7EmG,QAAQ,qCAAgCE,YAAU,WAAWxI,YAAY,iBAAiBC,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMkR,6BAMzJ,qBAAKxI,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,gBAAgBX,QAAS,kBAAI,EAAKyP,uBAA7H,oCAU1B,eAACtI,GAAA,EAAD,CAEEE,KAAM9G,KAAKlG,MAAMoX,iBACjBnK,OAAQ,kBAAM,EAAK6O,qBAHrB,UAKE,cAAChP,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,6BAIF,cAACwG,GAAA,EAAMS,KAAP,UACK,sBAAK7E,UAAU,oBAAf,UACG,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,iBAAf,UACM,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,aAAf,SACE,wBAAOA,UAAU,mBAAjB,UACE,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,cAAcK,GAAG,cAAcF,MAAM,IAAI6O,eAAe,KADhH,yBAGA,mBAAGvM,UAAU,wBAGjB,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,aAAf,SACE,wBAAOA,UAAU,mBAAjB,UACE,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,cAAcK,GAAG,aAAaF,MAAM,MAD5F,qBAGA,mBAAGsC,UAAU,6BAK3B,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,cAAcK,GAAG,cAAcE,SAAUN,KAAKqI,sBAM3G,qBAAK7F,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,aAAaX,QAAS,kBAAI,EAAK0W,oBAA1H,oCAU1B,eAACvP,GAAA,EAAD,CAEEE,KAAM9G,KAAKlG,MAAMqX,qBACjBpK,OAAQ,kBAAM,EAAK8O,yBAHrB,UAKE,cAACjP,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,iCAIF,cAACwG,GAAA,EAAMS,KAAP,UACI,sBAAK7E,UAAU,oBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,aAAf,SACI,wBAAOA,UAAU,mBAAjB,UACA,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,kBAAkBK,GAAG,kBAAkBF,MAAM,IAAI6O,eAAe,KADtH,yBAGA,mBAAGvM,UAAU,wBAGjB,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,aAAf,SACI,wBAAOA,UAAU,mBAAjB,UACA,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,kBAAkBK,GAAG,iBAAiBF,MAAM,MADlG,qBAGA,mBAAGsC,UAAU,6BAKzB,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sDACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,eAAeO,SAAUN,KAAK6S,qBAErF,sBAAKrQ,UAAU,QAAf,UACI,6CACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,oBAAoBK,GAAG,oBAAoBF,MAAOF,KAAKlG,MAAMgX,kBAAmBxQ,SAAUN,KAAKqI,qBAGpJ,uBACN,qBAAK7F,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,yDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,kBAAkBK,GAAG,kBAAkBF,MAAOF,KAAKlG,MAAMiX,gBAAiBzQ,SAAUN,KAAKqI,oBAG5I,uBACN,qBAAK7F,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,iDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,qBAAqBK,GAAG,qBAAqBF,MAAOF,KAAKlG,MAAMkX,mBAAoB1Q,SAAUN,KAAKqI,oBAErJ,uBACN,qBAAK7F,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,yCACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,gBAAgBK,GAAG,gBAAgBF,MAAOF,KAAKlG,MAAMmX,cAAe3Q,SAAUN,KAAKqI,uBAIhJ,qBAAK7F,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,iBAAiBX,QAAS,kBAAI,EAAK2W,wBAA9H,oCAU3B,eAACxP,GAAA,EAAD,CAEGE,KAAM9G,KAAKlG,MAAMsX,0BACjBrK,OAAQ,kBAAM,EAAKiP,8BAHtB,UAKG,cAACpP,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,+BAIF,cAACwG,GAAA,EAAMS,KAAP,UACI,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,2CACA,uBAAOxI,KAAK,SAAS+F,KAAK,mBAAmBK,GAAG,mBAAmBF,MAAOF,KAAKlG,MAAMqQ,aACrF,uBAAOnQ,KAAK,OAAOwI,UAAU,eAAezC,KAAK,UAAUK,GAAG,4BAA4BF,MAAOF,KAAKlG,MAAMuW,QAAS/P,SAAUN,KAAKqI,kBAExI,qBAAK7F,UAAU,SAASpC,GAAG,4BAInC,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,2CACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,UAAUK,GAAG,sBAAsBK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMgR,QAAhJ,SAEQ9K,KAAKlG,MAAMqR,OAEXnL,KAAKlG,MAAMqR,OAAOwB,KAAI,SAAAsC,GAClB,OACI,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA8B6O,EAAQnC,YAG7C,YAKjB,sBAAKtK,UAAU,QAAf,UACI,sDACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,SAASK,GAAG,qBAAqBK,MAAO,CAACO,MAAO,QAASV,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMiR,OAA9I,SAGQ/K,KAAKlG,MAAMsR,QACXpL,KAAKlG,MAAMsR,QAAQuB,KAAI,SAAAsC,GACvB,OACA,wBAAQ/O,MAAO+O,EAAQ7O,GAAvB,SAA4B6O,EAAQnC,YAGrC,iBAYvB,qBAAKtK,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,UAAUK,GAAG,4BAA4BF,MAAOF,KAAKlG,MAAM0W,QAASlQ,SAAUN,KAAKqI,sBAIhJ,qBAAK7F,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAO+F,KAAK,UAAUK,GAAG,4BAA4BoC,UAAU,eACvEmG,QAAQ,qCAAgCzI,MAAOF,KAAKlG,MAAM2W,QAAS5H,YAAU,WAAWxI,YAAY,iBAAiBC,SAAUN,KAAKqI,sBAIpJ,qBAAK7F,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,iBAAiBX,QAAS,WACjH,EAAK4W,sBADT,kCAY1B,cAAC/O,GAAA,EAAD,CACM7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK0J,kBAAkB,GAAG,UACzCnF,KAAM9G,KAAKlG,MAAMkQ,iBACjBrC,MAAO,IACPC,UAAQ,EAZd,SAcQ,cAACN,GAAA,EAAMD,KAAP,UACE,6BAAKrH,KAAKlG,MAAMoQ,mBAI1B,cAAC5C,GAAA,EAAD,CACQ7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK4J,gBAAgB,GAAG,UACvCrF,KAAM9G,KAAKlG,MAAMiQ,eACjBpC,MAAO,IACPC,UAAQ,EAZhB,SAeI,cAACN,GAAA,EAAMD,KAAP,UACE,6BAAKrH,KAAKlG,MAAMmQ,wB,GAj1DNrJ,aC4YP0V,G,kDApZX,aAAc,IAAD,8BACT,gBACKxc,MAAO,CAERyc,WAAY,GACZjI,cAAc,EAGdkI,oBAAmB,EAEnBzM,gBAAe,EACfC,kBAAiB,EACjBC,WAAW,GACXC,aAAa,GAEbqH,YAAY,GAEZC,YAAY,IAEhB,EAAKiF,sBAAsB,EAAKC,sBAAsB/U,KAA3B,iBAC3B,EAAKgE,IAAM,EAAKA,IAAIhE,KAAT,iBACX,EAAKmR,qBAAuB,EAAKA,qBAAqBnR,KAA1B,iBArBnB,E,qDAwBb,WACE3B,KAAK0W,0B,iBAGP,WACE1W,KAAKC,SAAS,CAACqO,cAAgBtO,KAAKlG,MAAMwU,iB,gCAK5C,WAAqB,IAAD,OAEZ/Q,MAAMC,EAAA,yBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB8Y,cAAe3W,KAAKlG,MAAM6c,gBAE9B7Y,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,gBAGvBrN,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,0BAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,2B,6BAI7B,SAAgB/L,EAAGwW,EAAOzO,GAAU,IAAD,OACzB5K,MAAMC,EAAA,4BACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB+Y,OAAQA,EACRxW,GAAIA,EACJ+H,SAAUA,IAEdrK,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,aACZ,EAAKoN,kBAAkB,yBACvB,EAAKyK,0BAGL9X,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,iCAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,kC,6BAO3B,SAAgBtG,GACZ7F,KAAKC,SAAS,CACVgK,WAAYpE,EACZkE,gBAAiB/J,KAAKlG,MAAMiQ,mB,+BAGpC,SAAkBlE,GACd7F,KAAKC,SAAS,CACViK,aAAcrE,EACdmE,kBAAmBhK,KAAKlG,MAAMkQ,qB,iCAGtC,WACGpL,QAAQC,IAAI,aACXmB,KAAKC,SAAS,CACVuW,oBAAqBxW,KAAKlG,MAAM0c,uB,4BAOxC,WAAiB,IAAD,OACV/J,EAAIzM,KAAKlG,MAAMyc,WAAWtB,UAC9BrW,QAAQC,IAAI4N,GACZ,IAAIF,EAAI,GACR,GAAGE,EAAE,CAEL,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACvBtB,EAAEM,KAAKgB,GAET7N,KAAKC,SAAS,CAACsR,YAAahF,IAAG,kBAAI3N,QAAQC,IAAI,EAAK/E,MAAMyX,mB,6BAI5D,SAAgB7I,GAAQ,IAAD,OACrB9J,QAAQC,IAAI6J,GACZnL,MACEC,EAAA,4CAAgDkL,EAAhD,mBAAiE1I,KAAKlG,MAAM0X,aAC5E,CACI9T,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACsW,WAAYpY,IAAM,WAC/BS,QAAQC,IAAI,EAAK/E,MAAMyc,YACvB,EAAK/C,yB,wBAOf,SAAW0B,GAAO,IAAD,OACb3X,MACEC,EAAA,8CAAkD0X,GAClD,CACExX,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACJ,EAAK8B,SAAS,CAACsW,WAAYpY,EAAKqT,YAAa0D,IAAQ,WACjD,EAAK1B,iBACL5U,QAAQC,IAAI,qB,kCAKxB,SAAsBe,GAAG,IAAD,EACCA,EAAEE,OAAlBC,EADe,EACfA,KAAOG,EADQ,EACRA,MACdtB,QAAQC,IAAIqB,GACZF,KAAKmV,WAAWjV,GAChBtB,QAAQC,IAAIkB,K,0BAId,SAAcH,GAAG,IAAD,EACSA,EAAEE,OAAlBC,EADO,EACPA,KAAOG,EADA,EACAA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,mCAGd,WAAwB,IAAD,OACrB3C,MACEC,EAAW,+BACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI1CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACsW,WAAYpY,IAAM,WAC/BS,QAAQC,IAAI,EAAK/E,MAAMyc,YACvB,EAAK/C,yB,oBASjB,WAAS,IAAD,OACJ,OAEI,sBAAKhR,UAAU,MAAf,UACE,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,gCACA,wBAAQxI,KAAK,SAASwI,UAAU,2CAA2C/C,QAAS,kBAAM,EAAKkG,OAA/F,oCAIT3F,KAAKlG,MAAMwU,cAAgB,cAAC,GAAD,CAAcA,aAActO,KAAK2F,MAE/D,qBAAKnD,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UAEI,wBAAOpC,GAAG,cAAcoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAAtE,UACI,kCACI,+BACI,6BAAI,oBAAIwB,UAAU,aAAd,oCACJ,6BAAI,uBAAOxI,KAAK,OAAOsG,SAAUN,KAAK8S,4BAE1C,+BACI,gDACA,uCACA,iDACA,iDACA,0CACA,wCACA,gDAGN,gCAEM9S,KAAKlG,MAAMyc,WAAWpY,KACtB6B,KAAKlG,MAAMyc,WAAWpY,KAAKwO,KAAI,SAAAC,GAC3B,OACI,+BACI,6BAAKA,EAAKwB,UACV,6BAAKxB,EAAKyB,QACV,6BAAKzB,EAAKgK,SACV,6BAAKhK,EAAKE,SACV,6BAAKF,EAAKzE,WACV,6BAAKyE,EAAK1E,SACV,6BACA,wBAAQ1F,UAAU,6BAA6BxI,KAAK,SAASyF,QAAS,kBAAI,EAAKoX,gBAAgBjK,EAAKkK,UAAUlK,EAAKgK,OAAOhK,EAAKzE,WAA/H,SAA0I,mBAAG3F,UAAU,yBARlJoK,EAAKxM,OAYd,UAIhB,qBAAKoC,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,QAAf,SAGIxC,KAAKlG,MAAMyX,YACXvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACvB,OACI,wBACIpK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKwW,gBAAgBrJ,IADhG,SACwGA,GAD3FA,MAIZ,kBAWnC,eAAChG,GAAA,EAAD,CACIC,KAAK,KACLC,KAAM9G,KAAKlG,MAAM0c,mBACjBzP,OAAQ,kBAAM,EAAKgQ,uBAHvB,UAKI,cAACnQ,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,sCAIF,cAACwG,GAAA,EAAMS,KAAP,UACY,qBAAK7E,UAAU,oBAAf,SACQ,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAYpC,GAAG,4BAA9B,UACA,+CAAyB,uBACvB,sBAAMA,GAAG,4BAAiC,uBAC5C,oDAA8B,uBAC5B,sBAAMA,GAAG,yBAA8B,uBACzC,wDAA+B,uBAC7B,sBAAMA,GAAG,wBAA6B,uBAAK,uBAC7C,wBAAOoC,UAAU,uBAAuBpC,GAAG,4BAA3C,UACE,gCACE,+BACE,mCAGA,0CAGA,wCAGA,0CAGA,gDAGN,yCAc5B,cAACkH,GAAA,EAAD,CACM7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK0J,qBACpBnF,KAAM9G,KAAKlG,MAAMkQ,iBACjBrC,MAAO,IACPC,UAAQ,EAZd,SAcQ,cAACN,GAAA,EAAMD,KAAP,UACE,6BAAKrH,KAAKlG,MAAMoQ,mBAI1B,cAAC5C,GAAA,EAAD,CACQ7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK4J,mBACpBrF,KAAM9G,KAAKlG,MAAMiQ,eACjBpC,MAAO,IACPC,UAAQ,EAZhB,SAeI,cAACN,GAAA,EAAMD,KAAP,UACE,6BAAKrH,KAAKlG,MAAMmQ,wB,GA5YdrJ,aCidPoW,G,kDAhdX,aAAc,IAAD,8BACX,gBACKld,MAAO,CAEVmd,WAAa,GACbC,SAAU,GACV3C,YAAY,GACZ4C,kBAAkB,GAClBC,cAAc,GAEdlG,kBAAiB,EACjBmG,wBAAuB,EAEvBtN,gBAAe,EACfC,kBAAiB,EACjBC,WAAW,GACXC,aAAa,GAEbqH,YAAY,GAEZC,YAAY,IAEd,EAAKgC,eAAiB,EAAKA,eAAe7R,KAApB,iBACtB,EAAK2V,eAAiB,EAAKA,eAAe3V,KAApB,iBACtB,EAAK0G,aAAe,EAAKA,aAAa1G,KAAlB,iBACpB,EAAKmR,qBAAuB,EAAKA,qBAAqBnR,KAA1B,iBAzBjB,E,mDA6BX,SAAgBkE,GACZ7F,KAAKC,SAAS,CACVgK,WAAYpE,EACZkE,gBAAiB/J,KAAKlG,MAAMiQ,mB,+BAGpC,SAAkBlE,GACd7F,KAAKC,SAAS,CACViK,aAAcrE,EACdmE,kBAAmBhK,KAAKlG,MAAMkQ,qB,+BAItC,WACIhK,KAAKC,SAAS,CACViR,kBAAmBlR,KAAKlG,MAAMoX,qB,qCAGtC,SAAwB9Q,EAAG0M,GACvB9M,KAAKC,SAAS,CACVoX,wBAAyBrX,KAAKlG,MAAMud,uBACpCF,kBAAmBrK,EACnBsK,cAAehX,M,8BAGvB,WAAmB,IAAD,OAEV7C,MAAMC,EAAA,uBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrB1C,YAAavU,KAAKlG,MAAMya,cAE5BzW,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,YACvB,EAAKqL,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,wBAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,yB,6BAG3B,WAAkB,IAAD,OAEL5O,MAAMC,EAAA,yBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrBE,kBAAmBnX,KAAKlG,MAAMqd,kBAC9BC,cAAepX,KAAKlG,MAAMsd,gBAE9BtZ,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,YACvB,EAAKqL,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,uBAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,wB,yBAG/B,SAAY/L,GAAI,IAAD,OACTxB,QAAQC,IAAIuB,GACR7C,MAAMC,EAAA,2BAAsC,CACxCE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrB7W,GAAIA,IAERtC,QAAS,CACL,OAAW,mBACX,eAAiB,mBACjB,MAAkBvD,aAAaC,QAAQ,YAG9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,qBACvB,EAAKqL,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,yBAG1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,0B,4BAKnC,WAAiB,IAAD,OACVM,EAAIzM,KAAKlG,MAAMod,SAASjC,UAC5BrW,QAAQC,IAAI4N,GACZ,IAAIF,EAAI,GACR,GAAGE,EAAE,CAEL,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACvBtB,EAAEM,KAAKgB,GAET7N,KAAKC,SAAS,CAACsR,YAAahF,IAAG,kBAAI3N,QAAQC,IAAI,EAAK/E,MAAMyX,mB,6BAI5D,SAAgB7I,GAAQ,IAAD,OACrB9J,QAAQC,IAAI6J,GACZnL,MACEC,EAAA,yCAA6CkL,EAA7C,oBAA+D1I,KAAKlG,MAAM0X,aAC1E,CACE9T,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACiX,SAAU/Y,IAAM,WAC7BS,QAAQC,IAAI,EAAK/E,MAAMod,UACvB,EAAK1D,yB,4BAQf,WAAiB,IAAD,OACdjW,MACEC,EAAW,4BACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACiX,SAAU/Y,IAAM,WAC7BS,QAAQC,IAAI,EAAK/E,MAAMod,UACvB,EAAK1D,yB,wBAKf,SAAW0B,GAAO,IAAD,OACb3X,MACEC,EAAA,4CAAgD0X,GAChD,CACExX,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACJ,EAAK8B,SAAS,CAACiX,SAAU/Y,EAAKqT,YAAa0D,IAAQ,WAC/C,EAAK1B,iBACL5U,QAAQC,IAAI,qB,0BAKxB,SAAce,GAAG,IAAD,EACSA,EAAEE,OAAlBC,EADO,EACPA,KAAOG,EADA,EACAA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,kCAEd,SAAsBN,GAAG,IAAD,EACCA,EAAEE,OAAlBC,EADe,EACfA,KAAOG,EADQ,EACRA,MACdtB,QAAQC,IAAIqB,GACZF,KAAKmV,WAAWjV,GAChBtB,QAAQC,IAAIkB,K,+BAId,WACEC,KAAKsX,mB,oBAQT,WAAS,IAAD,OACN,OAGQ,sBAAK9U,UAAU,MAAf,UAEI,qBAAKA,UAAU,qCAAf,SACE,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,gCACA,wBAAQxI,KAAK,SAASwI,UAAU,wCAAwC/C,QAAS,kBAAI,EAAKmW,qBAA1F,kCAMZ,qBAAKpT,UAAU,qCAAf,SACM,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,wBAAOpC,GAAG,YAAYoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAApE,UACI,kCACI,6BACE,oBAAIP,MAAO,CAAC8W,UAAU,SAAtB,SAAgC,uBAAOvd,KAAK,OAAOsG,SAAUN,KAAK8S,2BAEpE,+BACI,oDACA,gDAGR,gCAEY9S,KAAKlG,MAAMod,SAAS/Y,KACpB6B,KAAKlG,MAAMod,SAAS/Y,KAAKwO,KAAI,SAAAC,GACzB,OACI,+BACI,6BAAKA,EAAKE,SACV,+BAAI,wBACJtK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAK+X,wBAAwB5K,EAAKxM,GAAGwM,EAAKE,SAD7G,SACsH,mBAAGtK,UAAU,0BACvI,wBAAQA,UAAU,iCAAiCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKgY,YAAY7K,EAAKxM,KAApG,SAAyG,mBAAGoC,UAAU,0BAJjHoK,EAAKxM,OASb,UAKzB,qBAAKoC,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,QAAf,SAGIxC,KAAKlG,MAAMyX,YACXvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACvB,OACI,wBACIpK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKwW,gBAAgBrJ,IADhG,SACwGA,GAD3FA,MAIZ,kBASjC,eAAChG,GAAA,EAAD,CAEIE,KAAM9G,KAAKlG,MAAMoX,iBACjBnK,OAAQ,kBAAM,EAAK6O,qBAHvB,UAKI,cAAChP,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,6BAIF,cAACwG,GAAA,EAAMS,KAAP,UACK,sBAAK7E,UAAU,oBAAf,UACG,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,iBAAf,UACM,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,aAAf,SACE,wBAAOA,UAAU,mBAAjB,UACE,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,cAAcK,GAAG,cAAcF,MAAM,IAAI6O,eAAe,KADhH,yBAGA,mBAAGvM,UAAU,wBAGjB,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,aAAf,SACE,wBAAOA,UAAU,mBAAjB,UACE,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,cAAcK,GAAG,aAAaF,MAAM,MAD5F,qBAGA,mBAAGsC,UAAU,6BAK3B,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,cAAcK,GAAG,cAAcE,SAAUN,KAAKqI,sBAM3G,qBAAK7F,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,aAAaX,QAAS,kBAAI,EAAK0W,oBAA1H,oCAU5B,eAACvP,GAAA,EAAD,CAEIE,KAAM9G,KAAKlG,MAAMud,uBACjBtQ,OAAQ,kBAAM,EAAKyQ,2BAHvB,UAKI,cAAC5Q,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,4BAIF,cAACwG,GAAA,EAAMS,KAAP,UACM,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,oBAAoBK,GAAG,oBAAqBF,MAAOF,KAAKlG,MAAMqd,kBAAmB7W,SAAUN,KAAKqI,eACjJ,uBAAOrO,KAAK,SAAS+F,KAAK,gBAAgBK,GAAG,yBAIzD,qBAAKoC,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,cAAcX,QAAS,kBAAI,EAAKiY,mBAA3H,kCAS5B,cAACpQ,GAAA,EAAD,CACM7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK0J,qBACpBnF,KAAM9G,KAAKlG,MAAMkQ,iBACjBrC,MAAO,IACPC,UAAQ,EAZd,SAcQ,cAACN,GAAA,EAAMD,KAAP,UACE,+DAAkCrH,KAAKlG,MAAMoQ,oBAIvD,cAAC5C,GAAA,EAAD,CACQ7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK4J,mBACpBrF,KAAM9G,KAAKlG,MAAMiQ,eACjBpC,MAAO,IACPC,UAAQ,EAZhB,SAeI,cAACN,GAAA,EAAMD,KAAP,UACE,8DAAiCrH,KAAKlG,MAAMmQ,yB,GAzc1CrJ,aC+jBP+W,G,kDA7jBX,aAAc,IAAD,8BACT,gBACK7d,MAAO,CAER6W,eAAe,GACfiH,mBAAmB,GACnBX,WAAW,GACXY,wBAAwB,GACxBC,sBAAsB,GACtBC,yBAAyB,GACzBC,kBAAkB,GAGlBnH,SAAS,GACToH,KAAK,GACLC,MAAM,GACNC,UAAU,GACVC,iBAAiB,GACjBC,WAAW,GAGXlH,sBAAqB,EACrBmH,4BAA4B,EAE5BvO,gBAAe,EACfC,kBAAiB,EACjBC,WAAW,GACXC,aAAa,GAEbqH,YAAY,GAEZC,YAAY,IAGhB,EAAKqB,gBAAkB,EAAKA,gBAAgBlR,KAArB,iBACvB,EAAK0G,aAAe,EAAKA,aAAa1G,KAAlB,iBACpB,EAAKmR,qBAAsB,EAAKA,qBAAqBnR,KAA1B,iBApClB,E,mDA0CT,SAAgBkE,GACZ7F,KAAKC,SAAS,CACVgK,WAAYpE,EACZkE,gBAAiB/J,KAAKlG,MAAMiQ,mB,+BAGpC,SAAkBlE,GACd7F,KAAKC,SAAS,CACViK,aAAcrE,EACdmE,kBAAmBhK,KAAKlG,MAAMkQ,qB,mCAGtC,WACIhK,KAAKC,SAAS,CACVkR,sBAAuBnR,KAAKlG,MAAMqX,yB,yCAG1C,WACInR,KAAKC,SAAS,CACVqY,4BAA6BtY,KAAKlG,MAAMwe,+B,4BAOhD,WAAiB,IAAD,OACV7L,EAAIzM,KAAKlG,MAAM6W,eAAesE,UAClCrW,QAAQC,IAAI4N,GACZ,IAAIF,EAAI,GACR,GAAGE,EAAE,CAEL,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACvBtB,EAAEM,KAAKgB,GAET7N,KAAKC,SAAS,CAACsR,YAAahF,IAAG,kBAAI3N,QAAQC,IAAI,EAAK/E,MAAMyX,mB,6BAI5D,SAAgB7I,GAAQ,IAAD,OACrB9J,QAAQC,IAAI6J,GACZnL,MACIC,EAAA,mDAAuDkL,EAAvD,mBAAwE1I,KAAKlG,MAAM0X,aACnF,CACE9T,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC0Q,eAAgBxS,IAAM,WACnCS,QAAQC,IAAI,EAAK/E,MAAM6W,gBACvB,EAAK6C,yB,wBAQf,SAAW0B,GAAO,IAAD,OACb3X,MACIC,EAAA,qDAAyD0X,GACzD,CACIxX,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIhDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACJ,EAAK8B,SAAS,CAAC0Q,eAAgBxS,EAAKqT,YAAa0D,IAAQ,WACrD,EAAK1B,iBACL5U,QAAQC,IAAI,qB,kCAKxB,SAAsBe,GAAG,IAAD,EACCA,EAAEE,OAAlBC,EADe,EACfA,KAAOG,EADQ,EACRA,MACdtB,QAAQC,IAAIqB,GACZF,KAAKmV,WAAWjV,GAChBtB,QAAQC,IAAIkB,K,4BAMlB,WAAiB,IAAD,OACZxC,MACIC,EAAW,sCACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIhDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC0Q,eAAgBxS,IAAM,WACnCS,QAAQC,IAAI,EAAK/E,MAAM6W,gBACvB,EAAK6C,yB,sBAKjB,WAAW,IAAD,OACNjW,MAAMC,EAAA,uBAA2BwC,KAAKlG,MAAMme,MAC5C,CACIva,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,aAEzBnZ,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAG7CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UACbH,MAAK,SAAAI,GACN,EAAK8B,SAAS,CAAC4Q,SAAU1S,IAAO,WAC5B,EAAK+U,qB,wBAKjB,WAEOlT,KAAKlG,MAAM+W,UACV7Q,KAAKC,SAAS,CACNkY,UAAUnY,KAAKlG,MAAM+W,SAASsC,QAAQC,UAAU,GAChDgF,iBAAiBpY,KAAKlG,MAAM+W,SAASsC,QAAQE,YAC7CgF,WAAWrY,KAAKlG,MAAM+W,SAASsC,QAAQG,UACvC4E,MAAMlY,KAAKlG,MAAM+W,SAASsC,QAAQI,MACxC3U,QAAQC,IAAImB,KAAKlG,MAAM+W,a,kCAKjC,WAAuB,IAAD,OACdtT,MAAMC,EAAW,2BACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrBrG,aAAa5Q,KAAKlG,MAAMme,KACxBnH,kBAAkB9Q,KAAKlG,MAAMqe,UAC7BpH,gBAAgB/Q,KAAKlG,MAAMse,iBAC3BpH,mBAAmBhR,KAAKlG,MAAMue,WAC9BpH,cAAcjR,KAAKlG,MAAMoe,QAE7Bpa,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,8BACZ,EAAKoN,kBAAkB,gBACvB,EAAKqL,mBAIL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,4BAG1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,6B,iCAG9B,WAAsB,IAAD,OACb5O,MAAMC,EAAW,8BACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrBW,mBAAmB5X,KAAKlG,MAAM8d,mBAC9BC,wBAAwB7X,KAAKlG,MAAM+d,wBACnCC,sBAAsB9X,KAAKlG,MAAMge,sBACjCC,yBAAyB/X,KAAKlG,MAAMie,yBACpCC,kBAAkBhY,KAAKlG,MAAMke,oBAEjCla,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAGA,EAAIE,UACfH,MAAK,SAAAI,GAEc,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,+BACZ,EAAKoN,kBAAkB,gBACvB,EAAKqL,mBAIL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,2BAG1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,4B,sBAK9B,SAASoM,EAAIxH,EAAgByH,EAAKlF,EAAUlT,GAC1C,IAAIqY,EACO,MAARD,IACDC,EAAW,IAEXzY,KAAKC,SAAS,CACV2X,mBAAoBW,EACpBT,sBAAuB/G,EACvB8G,wBAAyBY,EACzBV,yBAA0BzE,EAC1B0E,kBAAmB5X,M,6BAK3B,SAAgBR,GAAG,IAAD,SACSA,EAAEE,OAAlBC,EADO,EACPA,KAAOG,EADA,EACAA,MAEK,IAAhBA,EAAM8N,SACLhO,KAAKC,SAAL,eACKF,EAAQG,IAEV,WACC,EAAKkV,cAETxW,QAAQC,IAAIqB,M,0BAOpB,SAAcN,GAAG,IAAD,EACWA,EAAEE,OAAlBC,EADK,EACLA,KAAOG,EADF,EACEA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,+BAIhB,WACIF,KAAKsX,mB,oBAMb,WAAS,IAAD,OACJ,OAGQ,sBAAK9U,UAAU,MAAf,UAEG,qBAAKA,UAAU,qCAAf,SACG,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,gCACA,wBAAQxI,KAAK,SAASyF,QAAS,kBAAI,EAAKoW,yBAAyBrT,UAAU,2CAA3E,sCAMZ,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,wBAAOpC,GAAG,iBAAiBoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAAzE,UACI,kCACI,+BACI,6BAAI,oBAAIwB,UAAU,aAAd,uCACJ,6BAAI,uBAAOxI,KAAK,OAAOsG,SAAUN,KAAK8S,4BAE1C,+BACI,+CACA,2CACA,6CACA,8CACA,sCACA,gDAGR,gCAEQ9S,KAAKlG,MAAM6W,eAAexS,KAC1B6B,KAAKlG,MAAM6W,eAAexS,KAAKwO,KAAI,SAAAC,GAC/B,OACI,+BACI,6BAAKA,EAAK2L,MACV,6BAAK3L,EAAKE,SACV,6BAAKF,EAAKY,SACV,6BAAKZ,EAAK0G,YACV,6BAAK1G,EAAK2G,OACV,6BAAI,wBAAQ9T,QAAS,WAAK,EAAKmT,SAAShG,EAAK2L,IAAI3L,EAAKE,OAAOF,EAAKY,OAAOZ,EAAK0G,UAAU1G,EAAKxM,IAC3F,EAAKsY,+BACPlW,UAAU,kCAAkCxI,KAAK,SAF7C,SAEsD,mBAAGwI,UAAU,8BARlEoK,EAAKxM,OAWd,UAKlB,qBAAKoC,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,QAAf,SAGIxC,KAAKlG,MAAMyX,YACXvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACvB,OACI,wBACIpK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKwW,gBAAgBrJ,IADhG,SACwGA,GAD3FA,MAIZ,kBAUpC,eAAChG,GAAA,EAAD,CACOE,KAAM9G,KAAKlG,MAAMqX,qBACjBpK,OAAQ,kBAAM,EAAK8O,yBAF1B,UAIG,cAACjP,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACM,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,iCAIN,cAACwG,GAAA,EAAMS,KAAP,UACI,sBAAK7E,UAAU,oBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,aAAf,SACI,wBAAOA,UAAU,mBAAjB,UACA,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,kBAAkBK,GAAG,kBAAkBF,MAAM,IAAI6O,eAAe,KADtH,yBAGA,mBAAGvM,UAAU,wBAGjB,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,aAAf,SACI,wBAAOA,UAAU,mBAAjB,UACA,uBAAOxI,KAAK,QAAQwI,UAAU,mBAAmBzC,KAAK,kBAAkBK,GAAG,iBAAiBF,MAAM,MADlG,qBAGA,mBAAGsC,UAAU,6BAKzB,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sDACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,OAAOK,GAAG,eAAeE,SAAUN,KAAK6S,qBAE/F,sBAAKrQ,UAAU,QAAf,UACI,6CACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,YAAYK,GAAG,oBAAoBF,MAAOF,KAAKlG,MAAMqe,UAAW7X,SAAUN,KAAKqI,qBAGpI,uBACN,qBAAK7F,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,yDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,mBAAmBK,GAAG,kBAAkBF,MAAOF,KAAKlG,MAAMse,iBAAkB9X,SAAUN,KAAKqI,oBAG9I,uBACN,qBAAK7F,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,iDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,aAAaK,GAAG,qBAAqBF,MAAOF,KAAKlG,MAAMue,WAAY/X,SAAUN,KAAKqI,oBAErI,uBACN,qBAAK7F,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,yCACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,QAAQK,GAAG,gBAAgBF,MAAOF,KAAKlG,MAAMoe,MAAO5X,SAAUN,KAAKqI,uBAIhI,qBAAK7F,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,iBAAiBX,QAAS,kBAAI,EAAK2W,wBAA9H,oCAU3B,eAACxP,GAAA,EAAD,CACOE,KAAM9G,KAAKlG,MAAMwe,2BACjBvR,OAAQ,kBAAM,EAAK2R,+BAF1B,UAIG,cAAC9R,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACM,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,gCAIN,cAACwG,GAAA,EAAMS,KAAP,UACM,sBAAK7E,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAEX,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,YAAf,UACM,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,yCACA,uBAAOxI,KAAK,SAAS+F,KAAK,oBAAoBK,GAAG,sBACjD,uBAAOpG,KAAK,OAAOwI,UAAU,eAAezC,KAAK,qBAAqBK,GAAG,qBAAqBF,MAAOF,KAAKlG,MAAM8d,mBAAoBtX,SAAUN,KAAKqI,kBAEvJ,sBAAK7F,UAAU,QAAf,UACI,iDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,0BAA0BK,GAAG,0BAA0BF,MAAOF,KAAKlG,MAAM+d,wBAAyBvX,SAAUN,KAAKqI,uBAI9K,qBAAK7F,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,0DACA,0BAAUA,UAAU,eAAezC,KAAK,wBAAwBK,GAAG,wBAAwBF,MAAOF,KAAKlG,MAAMge,sBAAuBxX,SAAUN,KAAKqI,sBAI/J,qBAAK7F,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,kDACA,0BAAUA,UAAU,eAAezC,KAAK,2BAA2BK,GAAG,2BAA2BF,MAAOF,KAAKlG,MAAMie,yBAA0BzX,SAAUN,KAAKqI,sBAIxK,qBAAK7F,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,kBAAkBX,QAAS,kBAAI,EAAKkZ,uBAA/H,mCAU7B,cAACrR,GAAA,EAAD,CACM7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK0J,qBACpBnF,KAAM9G,KAAKlG,MAAMkQ,iBACjBrC,MAAO,IACPC,UAAQ,EAZd,SAcQ,cAACN,GAAA,EAAMD,KAAP,UACE,+DAAkCrH,KAAKlG,MAAMoQ,oBAIvD,cAAC5C,GAAA,EAAD,CACQ7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK4J,mBACpBrF,KAAM9G,KAAKlG,MAAMiQ,eACjBpC,MAAO,IACPC,UAAQ,EAZhB,SAeI,cAACN,GAAA,EAAMD,KAAP,UACE,8DAAiCrH,KAAKlG,MAAMmQ,yB,GAtjBnCrJ,aC+bXgY,G,kDA7bX,aAAc,IAAD,8BACT,gBACK9e,MAAO,CACV+e,kBAAkB,GAClBC,mBAAoB,GACpBC,yBAAyB,GACzBC,qBAAqB,GACrB/B,WAAW,GAGXgC,yBAAwB,EACxBC,+BAA8B,EAE9BnP,gBAAe,EACfC,kBAAiB,EACjBC,WAAW,GACXC,aAAa,GAEbqH,YAAY,GAEZC,YAAY,IAIf,EAAKnJ,aAAe,EAAKA,aAAa1G,KAAlB,iBACpB,EAAK6R,eAAiB,EAAKA,eAAe7R,KAApB,iBACtB,EAAKmR,qBAAuB,EAAKA,qBAAqBnR,KAA1B,iBA1BlB,E,mDAiCT,SAAgBkE,GACZ7F,KAAKC,SAAS,CACVgK,WAAYpE,EACZkE,gBAAiB/J,KAAKlG,MAAMiQ,mB,+BAGpC,SAAkBlE,GACd7F,KAAKC,SAAS,CACViK,aAAcrE,EACdmE,kBAAmBhK,KAAKlG,MAAMkQ,qB,sCAGtC,WACIhK,KAAKC,SAAS,CACVgZ,yBAA0BjZ,KAAKlG,MAAMmf,4B,4CAG7C,SAA+BnM,EAAO1M,GAClCJ,KAAKC,SAAS,CACViZ,+BAAgClZ,KAAKlG,MAAMof,8BAC3CH,yBAA0BjM,EAC1BkM,qBAAsB5Y,M,4BAQ9B,WAAiB,IAAD,OACVqM,EAAIzM,KAAKlG,MAAM+e,kBAAkB5D,UACrCrW,QAAQC,IAAI4N,GACZ,IAAIF,EAAI,GACR,GAAGE,EAAE,CAEL,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACvBtB,EAAEM,KAAKgB,GAET7N,KAAKC,SAAS,CAACsR,YAAahF,IAAG,kBAAI3N,QAAQC,IAAI,EAAK/E,MAAMyX,mB,6BAI5D,SAAgB7I,GAAQ,IAAD,OACrB9J,QAAQC,IAAI6J,GACZnL,MACEC,EAAA,yDAA6DkL,EAA7D,oBAA+E1I,KAAKlG,MAAM0X,aAC1F,CACE9T,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC4Y,kBAAmB1a,IAAM,WACtCS,QAAQC,IAAI,EAAK/E,MAAM+e,mBACvB,EAAKrF,yB,wBAQf,SAAW0B,GAAO,IAAD,OACb3X,MACEC,EAAA,4DAAgE0X,GAChE,CACExX,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACJ,EAAK8B,SAAS,CAAC4Y,kBAAmB1a,EAAKqT,YAAa0D,IAAQ,WACxD,EAAK1B,iBACL5U,QAAQC,IAAI,qB,kCAKxB,SAAsBe,GAAG,IAAD,EACCA,EAAEE,OAAlBC,EADe,EACfA,KAAOG,EADQ,EACRA,MACdtB,QAAQC,IAAIqB,GACZF,KAAKmV,WAAWjV,GAChBtB,QAAQC,IAAIkB,K,4BAMlB,WAAiB,IAAD,OACdxC,MACEC,EAAW,4CACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC4Y,kBAAmB1a,IAAM,WACtCS,QAAQC,IAAI,EAAK/E,MAAM+e,mBACvB,EAAKrF,yB,qCAId,WAA0B,IAAD,OAEjBjW,MAAMC,EAAA,sBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrBzL,kBAAmBxL,KAAKlG,MAAMgf,qBAElChb,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,uBACvB,EAAKqL,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,mCAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,oC,oCAG3B,WAAyB,IAAD,OAEZ5O,MAAMC,EAAA,iCACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrB8B,yBAA0B/Y,KAAKlG,MAAMif,yBACrCC,qBAAsBhZ,KAAKlG,MAAMkf,uBAErClb,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,uBACvB,EAAKqL,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,kCAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,sC,gCAG/B,SAAmB/L,GAAI,IAAD,OACjB7C,MAAMC,EAAA,mCAA8C,CACzCE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,OAAUmC,KAAKlG,MAAMmd,WACrB7W,GAAIA,IAERtC,QAAS,CACL,OAAW,mBACX,eAAiB,mBACjB,MAAkBvD,aAAaC,QAAQ,YAG9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,gCACvB,EAAKqL,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,oCAG1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,qC,0BAOpC,SAAcvM,GAAG,IAAD,EACSA,EAAEE,OAAlBC,EADO,EACPA,KAAOG,EADA,EACAA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,+BAId,WACEF,KAAKsX,mB,oBAGP,WAAS,IAAD,OACJ,OAGY,sBAAK9U,UAAU,MAAf,UAEI,qBAAKA,UAAU,qCAAf,SACE,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,gCACA,wBAAQxI,KAAK,SAASwI,UAAU,2CAA2C/C,QAAS,kBAAI,EAAK0Z,4BAA7F,6CAMZ,qBAAK3W,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,gCACA,wBAAOpC,GAAG,oBAAoBoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAA5E,UACI,kCACI,6BACE,oBAAIP,MAAO,CAAC8W,UAAU,SAAtB,SAAgC,uBAAOvd,KAAK,OAAOsG,SAAUN,KAAK8S,2BAEpE,+BACI,kDACA,gDAGR,gCAEI9S,KAAKlG,MAAM+e,kBAAkB1a,KAC7B6B,KAAKlG,MAAM+e,kBAAkB1a,KAAKwO,KAAI,SAAAC,GAClC,OACI,+BACI,6BAAKA,EAAKE,SACV,+BAAI,wBAAQrN,QAAS,kBAAI,EAAK2Z,+BAA+BxM,EAAKE,OAAOF,EAAKxM,KAC9EoC,UAAU,kCAAkCxI,KAAK,SAD7C,SACsD,mBAAGwI,UAAU,0BACvE,wBAAQA,UAAU,iCAAiCxI,KAAK,SAASyF,QAAS,kBAAI,EAAK4Z,mBAAmBzM,EAAKxM,KAA3G,SAAgH,mBAAGoC,UAAU,0BAJxHoK,EAAKxM,OASb,UAIjB,qBAAKoC,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,QAAf,SAGIxC,KAAKlG,MAAMyX,YACXvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACvB,OACI,wBACIpK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKwW,gBAAgBrJ,IADhG,SACwGA,GAD3FA,MAIZ,kBAS/B,eAAChG,GAAA,EAAD,CAEIE,KAAM9G,KAAKlG,MAAMmf,wBACjBlS,OAAQ,kBAAM,EAAKoS,4BAHvB,UAKI,cAACvS,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,SACI,gEAGN,cAACwG,GAAA,EAAMS,KAAP,UACM,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,gEACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,qBAAqBK,GAAG,oBAAqBF,MAAOF,KAAKlG,MAAMgf,mBAAoBxY,SAAUN,KAAKqI,sBAI/J,qBAAK7F,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,oBAAoBX,QAAS,kBAAI,EAAKuP,2BAAjI,iCAS9B,eAACpI,GAAA,EAAD,CACIE,KAAM9G,KAAKlG,MAAMof,8BACjBnS,OAAQ,kBAAM,EAAKqS,kCAFvB,UAII,cAACxS,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,SACE,+DAGJ,cAACwG,GAAA,EAAMS,KAAP,UACI,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,gEACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,2BAA2BK,GAAG,2BAA2BF,MAAOF,KAAKlG,MAAMif,yBAA0BzY,SAAUN,KAAKqI,eACrK,uBAAOrO,KAAK,SAAS+F,KAAK,uBAAuBK,GAAG,gCAIhE,qBAAKoC,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,qBAAqBX,QAAS,kBAAI,EAAK6Z,0BAAlI,kCAS1B,cAAChS,GAAA,EAAD,CACM7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK0J,qBACpBnF,KAAM9G,KAAKlG,MAAMkQ,iBACjBrC,MAAO,IACPC,UAAQ,EAZd,SAcQ,cAACN,GAAA,EAAMD,KAAP,UACE,+DAAkCrH,KAAKlG,MAAMoQ,oBAIvD,cAAC5C,GAAA,EAAD,CACQ7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK4J,mBACpBrF,KAAM9G,KAAKlG,MAAMiQ,eACjBpC,MAAO,IACPC,UAAQ,EAZhB,SAeI,cAACN,GAAA,EAAMD,KAAP,UACE,8DAAiCrH,KAAKlG,MAAMmQ,yB,GAvb/CrJ,aC2EZ2Y,GA9ED,kBAEV,sBAAK/W,UAAU,oCAAf,UACE,qBAAKA,UAAU,4BAA4BpC,GAAG,UAA9C,SACE,qBAAIoC,UAAU,MAAd,UACE,oBAAIA,UAAU,uBAAd,SACE,eAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,SAA9B,UACE,sBAAKvF,UAAU,oBAAf,UACE,qBAAKsD,IAAI,QAAQE,IAAI,YACrB,sBAAMxD,UAAU,2BAElB,sBAAKA,UAAU,sCAAf,UACE,sBAAMA,UAAU,wBAAhB,kBACA,sBAAMA,UAAU,4BAAhB,yBAEF,mBAAGA,UAAU,+DAIjB,qBAAIA,UAAU,WAAd,UACE,oBAAGA,UAAU,WAAW6D,cAAY,WAAW7F,KAAK,YAAYgG,gBAAc,QAAQD,gBAAc,WAApG,UACE,sBAAM/D,UAAU,aAAhB,wBACA,mBAAGA,UAAU,eACb,mBAAGA,UAAU,wCAEf,qBAAKA,UAAU,WAAWpC,GAAG,WAA7B,SACE,qBAAIoC,UAAU,2BAAd,UACE,qBAAIA,UAAU,WAAd,cAA0B,cAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,WAA9B,wBAC1B,qBAAIvF,UAAU,WAAd,cAA0B,cAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,mBAA9B,yBAC1B,qBAAIvF,UAAU,WAAd,cAA0B,cAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,qBAA9B,4BAC1B,qBAAIvF,UAAU,WAAd,cAA0B,cAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,0BAA9B,+BAC1B,qBAAIvF,UAAU,WAAd,cAA0B,cAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,kBAA9B,+BAIhC,oBAAIvF,UAAU,WAAd,SACC,eAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,UAA9B,UACG,sBAAMvF,UAAU,aAAhB,oBACA,mBAAGA,UAAU,oCAGjB,qBAAIA,UAAU,WAAd,UACE,oBAAGA,UAAU,WAAW6D,cAAY,WAAW7F,KAAK,oBAAoBgG,gBAAc,QAAQD,gBAAc,WAA5G,UACE,sBAAM/D,UAAU,aAAhB,8BACA,mBAAGA,UAAU,eACb,mBAAGA,UAAU,wCAEf,qBAAKA,UAAU,WAAWpC,GAAG,mBAA7B,SACE,qBAAIoC,UAAU,2BAAd,UACE,qBAAIA,UAAU,WAAd,cAA0B,cAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,4BAA9B,2BAC1B,qBAAIvF,UAAU,WAAd,cAA0B,cAAC,KAAD,CAAMA,UAAU,WAAWuF,GAAG,0BAA9B,iCAIhC,oBAAIvF,UAAU,WAAd,SACE,oBAAGA,UAAU,WAAWhC,KAAK,IAA7B,UACE,sBAAMgC,UAAU,aAAhB,0BACA,mBAAGA,UAAU,oCAGjB,oBAAIA,UAAU,WAAd,SACE,oBAAGA,UAAU,WAAWhC,KAAK,IAA7B,UACE,sBAAMgC,UAAU,aAAhB,oBACA,mBAAGA,UAAU,yCAKnB,qBAAKA,UAAU,aAAa/B,MAAO,CAAC+Y,MAAM,QAA1C,SACA,qBAAKhX,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,0CCvEG,YAASiX,GAEpB,IAAIhN,EAAIgN,EACJlN,EAAI,GACR,GAAGE,EAAE,CACD,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACrBtB,EAAEM,KAAKgB,GAEX,OAAOtB,ICoNAmN,G,kDApNX,aAAc,IAAD,8BACT,gBACK5f,MAAO,CACR6f,cAAkB,GAClBpI,YAAkB,GAElBqI,YAAkB,IAGtB,EAAKC,gBAAyB,EAAKA,gBAAgBlY,KAArB,iBAC9B,EAAKmY,uBAAyB,EAAKA,uBAAuBnY,KAA5B,iBAVrB,E,qDAab,WACI3B,KAAK6Z,gBAAgB,EAAG,GAAI,M,6BAGhC,SAAgBnR,EAAQqR,EAASC,GAAmB,IAAD,OAC3CjX,EAAMvF,EAAA,uDAA2DkL,GACrEnL,MACIwF,EACA,CACIrF,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACI,EAAK8B,SAAS,CACV0Z,cAAmBxb,EAAI,cAAkBA,KACzC8b,aAAevR,IACjB,WAEE,EAAKzI,SAAS,CACVsR,YAAciC,GAAerV,EAAI,cAAkB8W,qB,4CAQvE,SAA+BiF,GAC3B7X,wBAAa,CACT8X,MAAO,kBACPtU,QAAS,gDACTuU,QAAS,CACP,CACEC,MAAO,WACP5a,QAASO,KAAK8Z,wBAEhB,CACEO,MAAO,WACP5a,QAASb,QAAQC,IAAI,QAK7BmB,KAAKC,SAAS,CACV2Z,YAAcM,M,oCAItB,WAAyB,IAAD,OAEhBnX,EAAMvF,EAAA,uCACViF,KAAUC,QACN,8BACI,qDAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MAAMwF,EACF,CACIrF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,YAAkB,EAAK/D,MAAM8f,cAGjC9b,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAEsB,GAArBA,EAAI,WAEHsE,KAAUK,QACN,8BACI,6BAAK3E,EAAI,YAEb,CACEwE,SAAU,cAIhB,EAAKkX,gBAAgB,EAAG,GAAI,KAG5BpX,KAAU9D,MACN,8BACI,6BAAKR,EAAI,YAEb,CACEwE,SAAU,sB,oBAWhC,WAAS,IAAD,OACJ,OACI,qBAAKH,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,iCACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,qCAAqCpC,GAAG,eAAzD,UACI,gCACI,+BACI,qDACA,qDACA,0CACA,4CACA,qDACA,2DACA,+CAGR,gCAEQJ,KAAKlG,MAAM6f,cACV3Z,KAAKlG,MAAM6f,cAAchN,KAAI,SAACxO,EAAMmc,GACjC,OACI,+BACI,mCAAOnc,EAAKoc,mBACZ,mCAAOpc,EAAKqc,mBACZ,mCAAOrc,EAAKsc,sBACZ,mCAAOtc,EAAKuc,wBACZ,mCAAOvc,EAAKwc,mBACZ,mCAAOxc,EAAKyc,yBACZ,6BACI,wBACIpY,UAAc,yBACdxI,KAAc,SACdyF,QAAe,kBAAM,EAAKob,+BAA+B1c,EAAK+b,eAHlE,SAKI,mBAAG1X,UAAU,yBAbdrE,EAAK+b,iBAmBvB,YAKjB,uBACA,qBAAK1X,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKlG,MAAMyX,YACVvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBAEIpK,UAAc,2BACdxI,KAAc,SACdyF,QAAe,kBAAI,EAAKoa,gBAAgBjN,EAAM,GAAI,KAJtD,SAI4DA,GAHzCA,MAOzB,2B,GAvMtBhM,aCmRbka,G,kDAnRX,aAAc,IAAD,8BACT,gBACKhhB,MAAO,CAGRihB,0BAA8B,EAE9BC,oBAA8B,EAC9BC,wBAA8B,GAC9BC,wBAA8B,GAC9BC,uBAA8B,EAC9BC,wBAA8B,EAC9BC,eAA8B,GAC9BC,kBAA8B,GAG9BjX,aAAkB,EAClBC,aAAkB,GAClBC,WAAkB,uBAItB,EAAKgX,gBAA6B,EAAKA,gBAAgB5Z,KAArB,iBAClC,EAAK6Z,oBAA6B,EAAKA,oBAAoB7Z,KAAzB,iBAClC,EAAK8Z,wBAA6B,EAAKA,wBAAwB9Z,KAA7B,iBAClC,EAAK+Z,qBAA6B,EAAKA,qBAAqB/Z,KAA1B,iBAClC,EAAKga,mBAA6B,EAAKA,mBAAmBha,KAAxB,iBA1BzB,E,sDA6Bb,WACI3B,KAAKC,SAAS,CACV8a,0BAA2B/a,KAAKlG,MAAMihB,6B,0BAI9C,SAAalV,EAAS/E,GAClBd,KAAKC,SAAS,CACVqE,aAAeuB,EACftB,WAAezD,EACfuD,aAAe,M,6BAIvB,SAAgBzE,GACf,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVgb,wBAA0B/a,IAEhB,UAAVN,EAAE4O,MACF5P,QAAQC,IAAIqB,GACZF,KAAKwb,oBAAoBtb,M,iCAKjC,SAAoB0W,GAAQ,IAAD,OACvBrZ,MAAMC,EAAA,mBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBoQ,eAAkB2I,IAEtB9Y,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,GAFAS,QAAQC,IAAI,UACZD,QAAQC,IAAIV,GACW,GAApBA,EAAI,SAAqB,CAExB,IAAI+P,EAAW/P,EAAI,SACnB,EAAK8B,SAAS,CACV+a,oBAA0B9M,EAAQ,GAClCgN,wBAA0BhN,EAAQ,OAClCiN,uBAA0BjN,EAAQ,SAClCkN,wBAA0BlN,EAAQ,cAKtC,EAAK/I,aAAa,yBAA0B,4B,qCAMxD,SAAwBvF,GACvB,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVob,eAAiBnb,M,kCAIzB,SAAqBN,GACpB,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVqb,kBAAoBpb,M,gCAI5B,WACC,IAAD,OACI3C,MAAMC,EAAA,oCACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,WAAsBmC,KAAKlG,MAAMkhB,oBACjC,eAAsBhb,KAAKlG,MAAMshB,wBACjC,YAAsBpb,KAAKlG,MAAMwhB,kBACjC,SAAsBtb,KAAKlG,MAAMuhB,iBAErCvd,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAG9CuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GACFS,QAAQC,IAAIV,GACZS,QAAQC,IAAIV,EAAI,UACO,GAApBA,EAAI,UACH,EAAKgH,aAAa,mCAAoC,uBACtD,EAAKyW,sBAEL,EAAKzW,aAAa,mDAAoD,4B,oBAOlF,WAAS,IAAD,OACJ,OACI,sBAAK3C,UAAU,MAAf,UACI,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,sBACA,wBAAQxI,KAAK,SACTyF,QAAS,kBAAI,EAAKmc,sBAClBpZ,UAAU,qCAFd,qCAOZ,cAAC,GAAD,IAKJ,eAACoE,GAAA,EAAD,CACIC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMihB,yBACjBhU,OAAQ,kBAAM,EAAK6U,sBAHvB,UAKI,cAAChV,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,8BAIJ,cAACwG,GAAA,EAAMS,KAAP,UACI,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,2CACA,uBACIxI,KAAc,OACdwI,UAAc,eACdzC,KAAc,0BACdK,GAAc,0BACdE,SAAeN,KAAKub,gBACpBjT,UAAetI,KAAKub,gBACpBjY,WAAS,EACTpD,MAAeF,KAAKlG,MAAMmhB,6BAGlC,qBAAKzY,UAAU,SAASpC,GAAG,sBAInC,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMohB,wBAAxC,UAEJ,sBAAK1Y,UAAU,QAAf,UACI,0CACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMqhB,uBAAxC,UAEJ,sBAAK3Y,UAAU,QAAf,UACI,2CACA,qBAAIA,UAAU,aAAd,gBAA+BxC,KAAKlG,MAAMshB,wBAA1C,eAIZ,qBAAK5Y,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6CACA,uBACIxI,KAAc,OACd+F,KAAc,iBACdK,GAAc,iBACdoC,UAAc,eACdlC,SAAeN,KAAKyb,wBACpBvb,MAAeF,KAAKlG,MAAMuhB,oBAElC,sBAAK7Y,UAAU,QAAf,UACI,iDACA,uBACIxI,KAAc,OACd+F,KAAc,oBACdK,GAAc,oBACdoC,UAAc,eACdlC,SAAeN,KAAK0b,qBACpBxb,MAAeF,KAAKlG,MAAMwhB,4BAI1C,qBAAK9Y,UAAU,mBAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,wDACVpC,GAAG,gBACHX,QAAS,kBAAI,EAAKkc,sBAJtB,mCAapB,cAACrU,GAAA,EAAD,CACI7G,MAAO,CACHkC,SAAkB,QAClB4E,IAAkB,GAClBC,MAAkB,GAClBC,OAAiB,KACjBC,gBAAkB1H,KAAKlG,MAAMyK,WAC7BzD,MAAiB,SAErByB,QAAS,kBAAM,EAAKtC,SAAS,CACzBoE,aAAa,KAEjByC,KAAU9G,KAAKlG,MAAMuK,YACrBsD,MAAU,KACVC,UAAQ,EAdZ,SAgBI,cAACN,GAAA,EAAMD,KAAP,UACA,6BAAKrH,KAAKlG,MAAMwK,0B,GA1QZ1D,aC+rBTib,G,kDA9rBT,aAAc,IAAD,8BACT,gBACK/hB,MAAO,CAEVgiB,WAAW,GACXC,WAAW,GACXC,iBAAiB,GACjBC,oBAAoB,GACpBC,gBAAgB,GAGhBC,2BAA0B,EAC1BC,0BAAyB,EAEzBrS,gBAAe,EACfC,kBAAiB,EACjBC,WAAW,GACXC,aAAa,GAEbqH,YAAY,GAEZC,YAAY,GAEZ6K,YAAY,GACZC,cAAc,GACdC,cAAc,GACdC,gBAAgB,GAChBC,4BAA4B,GAE5BC,SAAS,GACTC,aAAa,GACbC,eAAe,GACfC,eAAe,GACfC,iBAAiB,GACjBC,6BAA6B,GAG7BC,QAAQ,GACRC,WAAW,IAGb,EAAK3F,eAAiB,EAAKA,eAAe3V,KAApB,iBACtB,EAAK0G,aAAe,EAAKA,aAAa1G,KAAlB,iBACpB,EAAKub,gBAAkB,EAAKA,gBAAgBvb,KAArB,iBACvB,EAAKwb,YAAc,EAAKA,YAAYxb,KAAjB,iBACnB,EAAKyb,sBAAwB,EAAKA,sBAAsBzb,KAA3B,iBA7CpB,E,+CAiDb,SAAY0b,GAEA,SAANA,EACFrd,KAAKC,SAAS,CACZoc,YAAY,GACZC,cAAc,GACdC,cAAc,GACdC,gBAAgB,GAChBC,4BAA4B,KAGlB,UAANY,EAERrd,KAAKC,SAAS,CACZyc,SAAS,GACTC,aAAa,GACbC,eAAe,GACfC,eAAe,GACfE,6BAA6B,KAM7B/c,KAAKC,SAAS,CACR6b,WAAW,GACXC,WAAW,GACXE,oBAAoB,GACpBC,gBAAgB,O,6BAM1B,SAAgBrW,GACZ7F,KAAKC,SAAS,CACVgK,WAAYpE,EACZkE,gBAAiB/J,KAAKlG,MAAMiQ,mB,+BAGpC,SAAkBlE,GACd7F,KAAKC,SAAS,CACViK,aAAcrE,EACdmE,kBAAmBhK,KAAKlG,MAAMkQ,qB,wCAItC,WACIhK,KAAKC,SAAS,CACVkc,2BAA4Bnc,KAAKlG,MAAMqiB,0BACvCK,gBAAgB,O,uCAIxB,SAA0BnQ,EAAUjM,EAAG0M,EAAOwQ,EAASvB,EAAWwB,GAAgB,IAAD,OAE/E,GAAgB,UAAblR,EAAsB,CACvB,IAAIE,EAAI,GACR3N,QAAQC,IAAIkd,GAUZ/b,KAAKC,SAAS,CACVmc,0BAA2Bpc,KAAKlG,MAAMsiB,yBACtCM,SAAUtc,EACVuc,aAAc7P,EACd8P,eAAgBU,EAChBR,kBAbAf,EAAWpP,KAAI,SAAAC,GACZ,IAAIxP,EAAIwP,EAAK4Q,MAAMC,YACnBlR,EAAEM,KAAKzP,EAAEsgB,YACT9e,QAAQC,IAAI+N,MAERL,GASPwQ,6BAA8BQ,IAEhC,WACI3e,QAAQC,IAAI,EAAK/E,MAAMgjB,kBACvB,EAAK7c,SAAS,CACZuc,gBAAiB,EAAK1iB,MAAMgjB,2BAOrC9c,KAAKC,SAAS,CACVmc,0BAA2Bpc,KAAKlG,MAAMsiB,yBACtCU,iBAAiB,O,8BAKxB,WAAmB,IAAD,OAEVvf,MAAMC,EAAA,kCACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBiP,OAAQ9M,KAAKlG,MAAMuiB,YACnBiB,SAAUtd,KAAKlG,MAAMyiB,cACrBoB,SAAU3d,KAAKlG,MAAMwiB,cACrBP,WAAY/b,KAAKlG,MAAM0iB,gBACvBoB,eAAgB5d,KAAKlG,MAAM2iB,8BAG/B3e,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,mCACvB,EAAKgI,YAAY,SACjB,EAAKqD,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,8BAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,+B,+BAG3B,WAAoB,IAAD,OAEP5O,MAAMC,EAAA,mCACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBuC,GAAIJ,KAAKlG,MAAM4iB,SACf5P,OAAQ9M,KAAKlG,MAAM6iB,aACnBW,SAAUtd,KAAKlG,MAAM8iB,eACrBe,SAAU3d,KAAKlG,MAAM+iB,eACrBd,WAAY/b,KAAKlG,MAAM0iB,gBACvBoB,eAAgB5d,KAAKlG,MAAMijB,+BAG/Bjf,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,uBACvB,EAAKgI,YAAY,UACjB,EAAKqD,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,+BAI1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,gC,2BAG/B,SAAc/L,GAAI,IAAD,OACXxB,QAAQC,IAAIuB,GACR7C,MAAMC,EAAA,2BAAsC,CACxCE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBuC,GAAIA,IAERtC,QAAS,CACL,OAAW,mBACX,eAAiB,mBACjB,MAAkBvD,aAAaC,QAAQ,YAG9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAI,SACZ,EAAKoN,kBAAkB,qBACvB,EAAKqL,mBAGL1Y,QAAQC,IAAI,SACZ,EAAKsN,gBAAgB,yBAG1BzN,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9D,EAAKsG,gBAAgB,0B,yBAMnC,SAAYvM,GAAG,IAAD,SAEcA,EAAEE,OAArB+d,EAFK,EAELA,QAAU3d,EAFL,EAEKA,MAEb,GAAY,GAAT2d,EAAc,EACXtR,EAAC,aAAOvM,KAAKlG,MAAM0iB,kBACrB3P,KAAK3M,GACPF,KAAKC,SAAS,CACZuc,gBAAiBjQ,EACjBuQ,iBAAkBvQ,IAClB,WAC6C,GAAvC,EAAKzS,MAAMgjB,iBAAkB9O,QAC/B,EAAK/N,SAAS,CACZ8c,6BAA8B,EAAKjjB,MAAMgjB,iBAAiB,GAC1DL,4BAA6B,EAAK3iB,MAAMgjB,iBAAiB,YAO/D,CACFle,QAAQC,IAAI,cACZ,IAAI0N,EACAoB,GADApB,EAAC,aAAOvM,KAAKlG,MAAM0iB,kBACT5O,WAAU,SAAAC,GAAC,OAAGA,IAAM3N,KAC/ByN,GAAO,IACRpB,EAAEuB,OAAOH,EAAM,GACf3N,KAAKC,SAAS,CACZuc,gBAAiBjQ,EACjBuQ,iBAAkBvQ,IAClB,WAC6C,GAAvC,EAAKzS,MAAMgjB,iBAAkB9O,QAC/B,EAAK/N,SAAS,CACZ8c,6BAA8B,EAAKjjB,MAAMgjB,iBAAiB,GAC1DL,4BAA6B,EAAK3iB,MAAMgjB,iBAAiB,Y,6BAQ3E,SAAgBld,GAAG,IAAD,SACOA,EAAEE,OAAlBC,EADS,EACTA,KAAOG,EADE,EACFA,MAEK,GAAhBA,EAAM8N,SACLhO,KAAKC,SAAL,eACKF,EAAQG,IAEV,WACC,EAAK4d,cAETlf,QAAQC,IAAIqB,IAEhBtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,sBAGd,WAAW,IAAD,OAEN3C,MAAMC,EAAA,uBAA2BwC,KAAKlG,MAAMmjB,YACxC,CACIvf,OAAQ,OACRC,KAAMC,KAAKC,UAAU,IAGrBC,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAKlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACFS,QAAQC,IAAIV,GACZ,EAAK8B,SAAS,CAAC+c,QAAS7e,IACtB,kBAAI,EAAK4f,iB,oBAMnB,WACE,IAAI3gB,EAAI4C,KAAKlG,MAAMkjB,QACfxQ,EAAIpP,EAAE+V,QAAQ6K,QAAS,IAAK5gB,EAAE+V,QAAQ8K,gBAAiB,IAAK7gB,EAAE+V,QAAQ+K,gBAE1Ele,KAAKC,SAAS,CACZoc,YAAa7P,M,4BAKjB,WAAiB,IAAD,OACdjP,MACEC,EAAW,sCACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC6b,WAAY3d,IAAM,WAC/BS,QAAQC,IAAI,EAAK/E,MAAMgiB,kBAG/Bve,MACEC,EAAW,wCACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CACZ8b,WAAY5d,EACZ6d,iBAAkB7d,IAClB,WACAS,QAAQC,IAAI,EAAK/E,MAAMiiB,oB,mCAKnC,c,0BAkBE,SAAcnc,GAAG,IAAD,EACSA,EAAEE,OAAlBC,EADO,EACPA,KAAOG,EADA,EACAA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,kCAEd,SAAsBN,GAAG,IAAD,EACCA,EAAEE,OAAlBC,EADe,EACfA,KAAOG,EADQ,EACRA,MACdtB,QAAQC,IAAIqB,GACZF,KAAKmV,WAAWjV,GAChBtB,QAAQC,IAAIkB,K,+BAId,WACEC,KAAKsX,mB,oBAKR,WAAU,IAAD,OACP,OACE,sBAAK9U,UAAU,MAAf,UAEG,qBAAKA,UAAU,qCAAf,SACG,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,sBACA,wBAAQxI,KAAK,SACTyF,QAAS,kBAAI,EAAK0e,8BAClB3b,UAAU,wCAFd,oCAOZ,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,sBACA,wBAAOpC,GAAG,cAAcoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAAtE,UACI,gCACI,+BACI,wCACA,wCACA,0CACA,4CACA,+CAGR,gCAEQhB,KAAKlG,MAAMgiB,WACX9b,KAAKlG,MAAMgiB,WAAWnP,KAAI,SAAAC,GACtB,OACI,+BACI,6BAAKA,EAAKxM,KACV,6BAAKwM,EAAK7M,OACV,6BAAK6M,EAAK0Q,WACV,6BAAK1Q,EAAKmP,WAAWpP,KAAI,SAAAyR,GACtB,OAAO,8BAAMA,EAAEtR,cAElB,+BAAI,wBACJtK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAK4e,0BAA0B,SAASzR,EAAKxM,GAAGwM,EAAK7M,KAAK6M,EAAK0Q,SAAS1Q,EAAKmP,WAAWnP,EAAKgR,iBADhK,SACiL,mBAAGpb,UAAU,0BAClM,wBAAQA,UAAU,iCAAiCxI,KAAK,SAASyF,QAAS,kBAAI,EAAK6e,cAAc1R,EAAKxM,KAAtG,SAA2G,mBAAGoC,UAAU,0BATnHoK,EAAKxM,OAcb,OAGf,qBAAKoC,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,QAAf,SAGIxC,KAAKlG,MAAMyX,YACXvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACvB,OACI,wBACIpK,UAAU,kCAAkCxI,KAAK,SAASyF,QAAS,kBAAI,EAAKwW,gBAAgBrJ,IADhG,SACwGA,GAD3FA,MAIZ,qBAWrC,eAAChG,GAAA,EAAD,CAEIE,KAAM9G,KAAKlG,MAAMqiB,0BACjBpV,OAAQ,kBAAM,EAAKoX,8BAHvB,UAKI,cAACvX,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,+BAIF,cAACwG,GAAA,EAAMS,KAAP,UACM,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,sBAAKA,UAAU,aAAf,UACI,uBAAO+b,QAAQ,wBAAf,iBACA,uBAAOvkB,KAAK,OAAOwI,UAAU,eAAezC,KAAK,aAAaO,SAAUN,KAAKkd,qBAEjF,sBAAK1a,UAAU,aAAf,UACI,uBAAO+b,QAAQ,wBAAf,+BACA,uBAAOvkB,KAAK,OAAOwI,UAAU,eAAezC,KAAK,cAAcO,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMuiB,YAAahc,YAAY,0BAE3I,sBAAKmC,UAAU,aAAf,UACI,uBAAO+b,QAAQ,qBAAf,sBACA,uBAAOvkB,KAAK,QAAQwI,UAAU,eAAezC,KAAK,gBAAgBO,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMyiB,cAAelc,YAAY,gBAEhJ,sBAAKmC,UAAU,aAAf,UACI,uBAAO+b,QAAQ,wBAAf,2BACA,uBAAOvkB,KAAK,WAAWwI,UAAU,eAAezC,KAAK,gBAAgBO,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMwiB,cAAejc,YAAY,kBAEnJ,sBAAKmC,UAAU,aAAf,UACI,uBAAO+b,QAAQ,wBAAf,wBAEEve,KAAKlG,MAAMiiB,WACX/b,KAAKlG,MAAMiiB,WAAWpP,KAAI,SAAAyR,GAC1B,OACG,gCAAK,uBAAOpkB,KAAK,WAAW+F,KAAK,gBAAgBG,MAAOke,EAAEhe,GAAIX,QAAS,EAAK0d,cAA5E,IAA4FiB,EAAEtR,aAE9F,QAKT,sBAAKtK,UAAU,aAAf,UACI,wEACA,wBAAQA,UAAU,6BAA6BzC,KAAK,8BAA8BO,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAM2iB,4BAAjI,SAGQzc,KAAKlG,MAAMkiB,iBACXhc,KAAKlG,MAAMkiB,iBAAiBrP,KAAI,SAACxO,GAC/B,GAAK,EAAKrE,MAAMgjB,iBAAiBlP,WAAU,SAAAxQ,GAAC,OAAEA,GAAGe,EAAKiC,OAAQ,EAC5D,OACC,yBAAsBF,MAAO/B,EAAKiC,GAAlC,cAAyCjC,EAAK2O,OAA9C,MAAa3O,EAAKiC,OAMtB,UAKb,wBAAQpG,KAAK,SAASwI,UAAU,wDAAwD/C,QAAS,kBAAI,EAAK+e,oBAA1G,+BAQxB,eAAC5X,GAAA,EAAD,CAEIE,KAAM9G,KAAKlG,MAAMsiB,yBACjBrV,OAAQ,kBAAM,EAAKsX,6BAHvB,UAKI,cAACzX,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,8BAIF,cAACwG,GAAA,EAAMS,KAAP,UACI,qBAAK7E,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,sBAAKA,UAAU,aAAf,UACI,uBAAO+b,QAAQ,wBAAf,+BACA,uBAAOvkB,KAAK,OAAOwI,UAAU,eAAezC,KAAK,eAAiBG,MAAOF,KAAKlG,MAAM6iB,aAAcrc,SAAUN,KAAKqI,aAAehI,YAAY,0BAEhJ,sBAAKmC,UAAU,aAAf,UACI,uBAAO+b,QAAQ,qBAAf,sBACA,uBAAOvkB,KAAK,QAAQwI,UAAU,eAAezC,KAAK,iBAAkBG,MAAOF,KAAKlG,MAAM8iB,eAAgBtc,SAAUN,KAAKqI,aAAchI,YAAY,aAEnJ,sBAAKmC,UAAU,aAAf,UACI,uBAAO+b,QAAQ,wBAAf,2BACA,uBAAOvkB,KAAK,WAAWwI,UAAU,eAAezC,KAAK,iBAAkBG,MAAOF,KAAKlG,MAAM+iB,eAAgBvc,SAAUN,KAAKqI,aAAchI,YAAY,kBAEtJ,sBAAKmC,UAAU,aAAf,UACI,uBAAO+b,QAAQ,wBAAf,wBAEEve,KAAKlG,MAAMiiB,WACX/b,KAAKlG,MAAMiiB,WAAWpP,KAAI,SAAAyR,GAC1B,OACE,8BAEK,EAAKtkB,MAAMgjB,iBAAiBlP,WAAU,SAAAxQ,GAAC,OAAEA,GAAGghB,EAAEhe,OAAQ,EAC1D,gCAAK,uBAAOpG,KAAK,WAAW+F,KAAK,iBAAiBG,MAAOke,EAAEhe,GAAI2O,gBAAc,EAACtP,QAAS,EAAK0d,cAA5F,IAA4GiB,EAAEtR,UAG9G,gCAAK,uBAAO9S,KAAK,WAAW+F,KAAK,iBAAiBG,MAAOke,EAAEhe,GAAIX,QAAS,EAAK0d,cAA7E,IAA6FiB,EAAEtR,eAM/F,QAKT,sBAAKtK,UAAU,aAAf,UACI,wEACA,wBAAQA,UAAU,6BAA6BzC,KAAK,+BAA+BO,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMijB,6BAAlI,SAGQ/c,KAAKlG,MAAMkiB,iBACXhc,KAAKlG,MAAMkiB,iBAAiBrP,KAAI,SAACxO,EAAKwP,GACpC,GAAK,EAAK7T,MAAMgjB,iBAAiBlP,WAAU,SAAAxQ,GAAC,OAAEA,GAAGe,EAAKiC,OAAQ,EAC5D,OACC,yBAAsBF,MAAO/B,EAAKiC,GAAlC,cAAyCjC,EAAK2O,OAA9C,MAAa3O,EAAKiC,OAMtB,UAKb,wBAAQpG,KAAK,SAASwI,UAAU,wDAAwD/C,QAAS,kBAAI,EAAKgf,qBAA1G,gCAQ1B,cAACnX,GAAA,EAAD,CACM7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK0J,qBACpBnF,KAAM9G,KAAKlG,MAAMkQ,iBACjBrC,MAAO,IACPC,UAAQ,EAZd,SAcQ,cAACN,GAAA,EAAMD,KAAP,UACE,6BAAKrH,KAAKlG,MAAMoQ,mBAI1B,cAAC5C,GAAA,EAAD,CACQ7G,MAAO,CACPkC,SAAU,QACV4E,IAAK,EACLC,MAAO,EACPC,OAAO,KACPC,gBAAiB,sBACjB5G,MAAM,SAENyB,QAAS,kBAAM,EAAK4J,mBACpBrF,KAAM9G,KAAKlG,MAAMiQ,eACjBpC,MAAO,IACPC,UAAQ,EAZhB,SAeI,cAACN,GAAA,EAAMD,KAAP,UACE,6BAAKrH,KAAKlG,MAAMmQ,wB,GAnrBPrJ,aCiBT8d,G,kDAlBT,aAAc,IAAD,8BACT,gBACK5kB,MAAO,GAFH,E,0CAMnB,WAAS,IAAD,OACJ,OACI,qBAAK0I,UAAU,QAAf,SAGI,wBAAQA,UAAU,2CAA2C/C,QAAS,kBAAI,EAAKV,MAAM4f,iBAArF,iC,GAbY/d,aCgETge,G,kDA9DT,aAAc,IAAD,8BACT,gBACK9kB,MAAO,GAFH,E,0CAMnB,WACI,OACM,qBAAK0I,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,iDACA,wBAAOpC,GAAG,cAAcoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAAtE,UACI,gCACI,+BACI,0CACA,uCACA,wCACA,wCACA,0CACA,4CAGR,gCAEQhB,KAAKjB,MAAM8f,QAAQC,YACnB9e,KAAKjB,MAAM8f,QAAQC,YAAYnS,KAAI,SAACC,EAAMe,GACtC,OAAsB,GAAlBf,EAAKP,UAGC,qBAAI7J,UAAU,gBAAd,UACI,6BAAKoK,EAAKmS,WACV,6BAAKnS,EAAKyB,QACV,6BAAKzB,EAAK/P,SACV,6BAAK+P,EAAKoS,WACV,mCAAMpS,EAAKzE,YACX,6BAAKyE,EAAK7D,UANqB4E,GAYvC,qBAAInL,UAAU,eAAd,UACI,6BAAKoK,EAAKmS,WACV,6BAAKnS,EAAKyB,QACV,6BAAKzB,EAAK/P,SACV,6BAAK+P,EAAKoS,WACV,mCAAMpS,EAAKzE,YACX,6BAAKyE,EAAK7D,UANoB4E,MASnC,qB,GArDrB/M,aC0DPqe,G,kDAvDT,aAAc,IAAD,8BACT,gBACKnlB,MAAO,CAEVqE,KAAK,CACD,CAAC+gB,QAAS,EAAGC,SAAU,KACvB,CAACD,QAAS,EAAGC,SAAU,KACvB,CAACD,QAAS,EAAGC,SAAU,KACvB,CAACD,QAAS,EAAGC,SAAU,OARpB,E,0CAgBjB,WACI,OAEE,qBAAK3c,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACG,qBAAKhD,MAAM,gCAAX,SACC,qBAAKgD,UAAW,sB,GAzBX5B,aCkVVwe,G,kDA5UT,aAAc,IAAD,8BACT,gBACKtlB,MAAO,CAEV+kB,QAAQ,GAER5Q,eAAe,GACfoR,iBAAiB,GAEjBC,mBAAmB,GACnBC,YAAY,GACZ/V,eAAe,GACfgW,aAAa,GACbC,sBAAsB,GACtBC,uBAAuB,GACvBC,aAAa,GAIbC,YAAW,EACXC,UAAS,EACTC,aAAY,GAGd,EAAKxI,eAAiB,EAAKA,eAAe3V,KAApB,iBACtB,EAAK0G,aAAe,EAAKA,aAAa1G,KAAlB,iBACpB,EAAKoe,iBAAmB,EAAKA,iBAAiBpe,KAAtB,iBACxB,EAAKgd,cAAgB,EAAKA,cAAchd,KAAnB,iBA3BZ,E,+CA8Bb,SAAY0b,M,4BAGZ,WAEE,IAAIwB,EAAU7e,KAAKlG,MAAM+kB,QAEzB7e,KAAKC,SAAS,CACZqf,mBAAmBtf,KAAKlG,MAAMmU,eAC9BsR,YAAYV,EAAQU,YACpB/V,eAAeqV,EAAQ/R,OACvB0S,aAAaX,EAAQmB,gBACrBP,sBAAsBZ,EAAQoB,iBAC9BP,uBAAuBb,EAAQqB,kBAC/BP,aAAad,EAAQsB,cACrBd,iBAAiB,M,8BAIrB,WAEErf,KAAKC,SAAS,CACZqf,mBAAmB,GACnBC,YAAY,GACZ/V,eAAe,GACfgW,aAAa,GACbC,sBAAsB,GACtBC,uBAAuB,GACvBC,aAAa,GACbN,iBAAiB,O,gCAKrB,WAAqB,IAAD,OAElB5c,KAAUC,QACN,8BACI,mEAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACER,MAAMC,EAAA,uBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB+Y,OAAQ,EAAK9c,MAAMmU,iBAEvBnQ,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACgB,GAAfA,EAAK0E,UACNjE,QAAQC,IAAIV,GACZ,EAAK8B,SAAS,CACZ4e,QAAS1gB,EACTyhB,YAAW,EACXC,UAAS,IACT,kBAAI,EAAKO,oBACXxhB,QAAQC,IAAI,SAEZ4D,KAAUK,QACN,8BACI,yDAEJ,CACEH,SAAU,gBAKhB,EAAK1C,SAAS,CACZ2f,YAAW,EACXC,UAAS,IACT,kBAAI,EAAKQ,sBACX5d,KAAU9D,MACN,8BACI,4DAEJ,CACEgE,SAAU,kBAOrBjE,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC5DpD,KAAU9D,MACN,8BACI,oEAEJ,CACEgE,SAAU,sB,4BAS5B,WAAiB,IAAD,OAEdpF,MACEC,EAAW,wCACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI5CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC8b,WAAY5d,IAAM,WAC/BS,QAAQC,IAAI,EAAK/E,MAAMiiB,oB,2BAKjC,WAAgB,IAAD,OAEbtZ,KAAUC,QACN,8BACI,mDAEJ,CACIC,SAAU,cAEd5E,MAAK,WAEDR,MAAMC,EAAA,uBACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB+Y,OAAQ,EAAK9c,MAAMmU,eACnBqS,WAAW,IAEfxiB,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI7CuD,MAAK,SAAA8E,GAAQ,OAAEA,EAAS0d,UACzBxiB,MAAK,SAAAI,GACJ,IAAIqiB,EAAOjb,SAASkb,cAAc,KAClCD,EAAKhgB,KAAO/D,OAAOikB,IAAIC,gBAAgBxiB,GACvCqiB,EAAKI,SAAL,UAAmB,EAAK9mB,MAAM0P,eAA9B,YAAgD,EAAK1P,MAAMmU,eAA3D,SACAuS,EAAKK,QACHpe,KAAUK,QACN,8BACI,kDAEJ,CACEH,SAAU,iBAIjBjE,OAAM,SAACC,GACNC,QAAQC,IAAI,6CAA4CF,EAAMkH,SAC9DpD,KAAU9D,MACN,8BACI,yEAEJ,CACEgE,SAAU,sB,8BAU9B,WAAmB,IAAD,OAChB/D,QAAQC,IAAI,YACZmB,KAAKC,SAAS,CACZ4f,UAAU,IACV,kBAAI,EAAK5f,SAAS,CAClB6f,aAAY,S,0BAIhB,SAAclgB,GAAG,IAAD,EACSA,EAAEE,OAAlBC,EADO,EACPA,KAAOG,EADA,EACAA,MACdF,KAAKC,SAAL,eACKF,EAAQG,IAGbtB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIqB,K,+BAGd,WACEF,KAAKsX,mB,oBAKR,WAAU,IAAD,OACP,OACE,sBAAK9U,UAAU,MAAf,UAEG,qBAAKA,UAAU,qCAAf,SACG,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,iBAAiBO,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMmU,oBAErH,sBAAKzL,UAAU,QAAf,UACI,yDACA,wBAAQA,UAAU,6BAA6BzC,KAAK,mBAAmBO,SAAUN,KAAKqI,aAAcnI,MAAOF,KAAKlG,MAAMulB,iBAAtH,SAGQrf,KAAKlG,MAAMiiB,WACX/b,KAAKlG,MAAMiiB,WAAWpP,KAAI,SAACxO,GAExB,OACC,yBAAsB+B,MAAO/B,EAAKiC,GAAlC,cAAyCjC,EAAK2O,OAA9C,MAAa3O,EAAKiC,OAIrB,UAKb,sBAAKoC,UAAU,QAAf,UACI,uBACA,wBAAQxI,KAAK,SACTyF,QAAS,kBAAI,EAAKqhB,sBAClBte,UAAU,wCAFd,uBAIJ,sBAAKA,UAAU,QAAf,UACI,iDACA,oBAAIA,UAAU,aAAYzC,KAAK,cAA/B,SAA8CC,KAAKlG,MAAMylB,iBAE3Dvf,KAAKlG,MAAM8lB,YAAc,cAAC,GAAD,CAASjB,cAAe3e,KAAK2e,cAAeoB,iBAAkB/f,KAAK+f,sBAGpG,sBAAKvd,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,yDACA,qBAAIA,UAAU,aAAazC,KAAK,iBAAhC,UAAkDC,KAAKlG,MAAM0P,eAA7D,UAEJ,sBAAKhH,UAAU,QAAf,UACI,2CACA,oBAAIA,UAAU,aAAazC,KAAK,qBAAhC,SAAsDC,KAAKlG,MAAMwlB,wBAErE,sBAAK9c,UAAU,QAAf,UACI,qDACA,oBAAIA,UAAU,aAAazC,KAAK,eAAhC,SAAgDC,KAAKlG,MAAM0lB,kBAE/D,sBAAKhd,UAAU,QAAf,UACI,4DACA,oBAAIA,UAAU,aAAazC,KAAK,qBAAhC,SAAsDC,KAAKlG,MAAM2lB,2BAErE,sBAAKjd,UAAU,QAAf,UACI,6DACA,oBAAIA,UAAU,aAAYzC,KAAK,qBAA/B,SAAqDC,KAAKlG,MAAM4lB,4BAEpE,sBAAKld,UAAU,QAAf,UACI,mDACA,oBAAIA,UAAU,aAAazC,KAAK,eAAhC,SAAgDC,KAAKlG,MAAM6lB,4BAQhF3f,KAAKlG,MAAMgmB,aAAe,cAAC,GAAD,CAAUjB,QAAS7e,KAAKlG,MAAM+kB,UACxD7e,KAAKlG,MAAM+lB,UAAY,cAAC,GAAD,CAAOhB,QAAS7e,KAAKlG,MAAM+kB,iB,GApUnCje,aCmMVmgB,G,kDAtMX,aAAc,IAAD,8BACT,gBACKjnB,MAAO,GAFH,E,0CAOjB,WACI,OACI,qBAAK0I,UAAU,qCAAf,SACA,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,YAAf,UACC,oBAAIA,UAAU,aAAd,oCACD,uBAAM9E,OAAO,OAAOsjB,KAAK,OAAO3a,cAAY,YAAYjG,GAAG,mBAA3D,UACI,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,kCAAO,mBAAGA,UAAU,oBAApB,eACA,uBAAOxI,KAAK,SAAS+F,KAAK,kBAAkBK,GAAG,kBAAkBF,MAAM,8BAA8BsC,UAAU,eAAeye,SAAS,aACvI,uBAAOjnB,KAAK,OAAO+F,KAAK,aAAaK,GAAG,aAAaF,MAAM,iCAAiCsC,UAAU,eAAeye,SAAS,gBAElI,sBAAKze,UAAU,QAAf,UACI,sCAAQ,mBAAGA,UAAU,8BAArB,uBACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,eAAeK,GAAG,eAAeF,MAAM,4CAE9F,sBAAKsC,UAAU,QAAf,UACI,sCAAQ,mBAAGA,UAAU,0BAArB,8BACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAetC,MAAO,qBAAqBH,KAAK,cAAcK,GAAG,mBAElG,sBAAKoC,UAAU,QAAf,UACI,sCAAQ,mBAAGA,UAAU,0BAArB,eACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,aAAaK,GAAG,aAAaK,MAAO,CAACO,MAAO,oBASlG,oBAAIwB,UAAU,aAAd,sBACA,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uCAAS,mBAAGA,UAAU,iCAAtB,6BACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,gBAAgBK,GAAG,gBAAgBK,MAAO,CAACO,MAAO,QAAxF,SACI,wBAAQd,MAAM,IAAd,0BAIZ,sBAAKsC,UAAU,QAAf,UACI,0DACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,kBAAkBK,GAAG,uBAE5E,sBAAKoC,UAAU,QAAf,UACI,0DACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,gBAAgBK,GAAG,0BAIhF,oBAAIoC,UAAU,aAAd,gCACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wBAAOA,UAAU,uBAAuBpC,GAAG,eAA3C,UACI,gCACI,+BACI,oBAAIY,MAAM,OAAV,sBACA,0CACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,OAAV,oBACA,2CACA,0CACA,uCACA,+CAGR,gCACI,+BACI,6BACI,wBAAQwB,UAAU,0BAA0BzC,KAAK,mBAAmBK,GAAG,iBAAiBK,MAAO,CAACO,MAAO,YAO3G,oBAAIwB,UAAU,WAAd,SACI,uBAAOxI,KAAK,OAAOwI,UAAU,0BAA0BzC,KAAK,aAAcG,MAAM,QAEpF,qBAAIsC,UAAU,aAAd,UACI,qCACA,uBAAOxI,KAAK,SAASwI,UAAU,0BAA0BzC,KAAK,eAAeG,MAAM,IAAI+gB,SAAS,QAEpG,qBAAIze,UAAU,SAAd,UACI,qCACA,uBAAOxI,KAAK,SAASwI,UAAU,sBAAsBzC,KAAK,WAAWG,MAAM,IAAI+gB,SAAS,GAAGxgB,MAAO,CAACO,MAAO,aAE9G,+BACI,qCACA,uBAAOhH,KAAK,SAASwI,UAAU,yBAAyBzC,KAAK,cAAcG,MAAM,IAAI+gB,SAAS,QAElG,qBAAIze,UAAU,WAAd,UACI,qCACA,uBAAOxI,KAAK,SAASwI,UAAU,wBAAwBzC,KAAK,aAAaG,MAAM,IAAI+gB,SAAS,GAAGxgB,MAAO,CAACO,MAAO,aAElH,qBAAIwB,UAAU,QAAd,UACI,qCACA,uBAAOxI,KAAK,SAASwI,UAAU,qBAAqBzC,KAAK,UAAUG,MAAM,IAAI+gB,SAAS,GAAGxgB,MAAO,CAACO,MAAO,aAE5G,iCAQhB,sBAAKwB,UAAU,SAAf,UACI,uBAEA,yBAAQxI,KAAK,SAASwI,UAAU,kBAAkBpC,GAAG,gBAArD,UACI,mBAAGoC,UAAU,wBADjB,oCAGA,6BAEF,uBACN,qBAAKA,UAAU,YAAY/B,MAAO,CAACygB,UAAW,QAA9C,SACI,sBAAK1e,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,iDACA,0BAAUA,UAAU,eAAezC,KAAK,mBAAmBK,GAAG,mBAAmBmD,KAAK,IAAIlD,YAAY,qCAAtG,qBAGR,qBAAKmC,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,0CACA,qBAAKA,UAAU,6BAAf,SACI,uBAAOA,UAAU,QAAjB,SACI,kCACI,+BACI,4CACA,qBAAIA,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,sBAAT,eACJ,uBAAOpG,KAAK,SAAS+F,KAAK,iBAAiBK,GAAG,iBAAiBF,MAAM,YAG7E,+BACI,2CACA,qBAAIsC,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,qBAAT,eACJ,uBAAOpG,KAAK,SAAS+F,KAAK,gBAAgBK,GAAG,gBAAgBF,MAAM,YAG3E,+BACI,uCAAS,sBAAMsC,UAAU,eAAhB,sBACT,qBAAIA,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,gBAAT,eACJ,uBAAOpG,KAAK,SAAS+F,KAAK,WAAWK,GAAG,WAAWF,MAAM,YAGjE,+BACI,wCACA,qBAAIsC,UAAU,0BAAd,UAAwC,qBAAIA,UAAU,gBAAd,iBAChC,sBAAMpC,GAAG,kBAAT,kBACJ,uBAAOpG,KAAK,SAAS+F,KAAK,aAAaK,GAAG,aAAaF,MAAM,6BAWjG,qBAAKsC,UAAU,mBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,yDAAyDpC,GAAG,eAA5F,4CAGJ,qBAAKoC,UAAU,QAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,yDAAyDpC,GAAG,gBAA5F,gE,GA1LFQ,aC0bXugB,G,kDAzbX,aAAc,IAAD,8BACT,gBACKrnB,MAAO,CACRqE,KAAK,OACLijB,SAAQ,EACRC,SAAQ,GAIZ,EAAKC,SAAU,EAAKA,SAAS3f,KAAd,iBACf,EAAK4f,SAAU,EAAKA,SAAS5f,KAAd,iBACf,EAAK6f,OAAQ,EAAKA,OAAO7f,KAAZ,iBAXJ,E,4CAab,WACI3B,KAAKC,SAAS,CACdmhB,SAAUphB,KAAKlG,MAAMsnB,Y,sBAGzB,WACIphB,KAAKC,SAAS,CACVohB,SAAUrhB,KAAKlG,MAAMunB,Y,oBAI7B,WACIrhB,KAAKC,SAAS,CACdmhB,SAAUphB,KAAKlG,MAAMsnB,QACrBC,SAAUrhB,KAAKlG,MAAMunB,Y,8BAK7B,WACIziB,QAAQC,IAAI,a,oBAGhB,WAAS,IAAD,OACJ,OACC,qBAAK2D,UAAU,qCAAf,SACG,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,qCACA,uBAAM9E,OAAO,OAAOsjB,KAAK,OAAO3a,cAAY,YAAYjG,GAAG,sBAA3D,UACI,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,kCAAO,mBAAGA,UAAU,oBAApB,eACA,uBAAOxI,KAAK,SAAS+F,KAAK,kBAAkBK,GAAG,kBAAkBF,MAAM,8BAA8BsC,UAAU,eAAeye,SAAS,aACvI,uBAAOjnB,KAAK,OAAO+F,KAAK,aAAaK,GAAG,aAAaF,MAAOF,KAAKjB,MAAM0iB,YAAYC,MAAOlf,UAAU,eAAeye,SAAS,gBAEhI,sBAAKze,UAAU,QAAf,UACI,sCAAQ,mBAAGA,UAAU,8BAArB,wBACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,eAAeK,GAAG,eAAeF,MAAOF,KAAKjB,MAAM4iB,YAAaC,SAAS,gBAEhI,sBAAKpf,UAAU,QAAf,UACI,sCAAQ,mBAAGA,UAAU,0BAArB,8BACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAetC,MAAQF,KAAKjB,MAAMsP,MAAOtO,KAAK,cAAcK,GAAG,mBAEhG,sBAAKoC,UAAU,QAAf,UACI,sCAAQ,mBAAGA,UAAU,0BAArB,eACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAetC,MAAO,QAAQH,KAAK,cAAcK,GAAG,cAAcwhB,SAAS,qBAIpH,oBAAIpf,UAAU,aAAd,sBACA,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uCAAS,mBAAGA,UAAU,iCAAtB,6BACA,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,eAAezC,KAAK,gBAAgBK,GAAG,gBAAgBK,MAAO,CAACO,MAAO,QAAxF,SACI,wBAAQd,MAAM,IAAd,0BAIZ,sBAAKsC,UAAU,QAAf,UACI,yDACA,uBAAOxI,KAAK,SAASwI,UAAU,eAAezC,KAAK,kBAAkBK,GAAG,uBAE5E,sBAAKoC,UAAU,QAAf,UACI,uDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,cAAcK,GAAG,wBAI9E,qBAAKoC,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,kCAAO,mBAAGA,UAAU,iBAApB,yBACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,YAAYK,GAAG,qBAI5E,oBAAIoC,UAAU,aAAd,gCACA,sBAAKA,UAAU,MAAf,UACA,qBAAKA,UAAU,SAAf,SACI,uBAAOA,UAAU,yCAAyCpC,GAAG,cAA7D,SACI,gCACI,+BAEI,oBAAIY,MAAM,OAAV,sBACA,0CACA,4CACA,oBAAIA,MAAM,OAAV,oBACA,2CACA,0CACA,uCACA,mDAMhB,sBAAKwB,UAAU,SAAf,UACI,uBAEA,yBAAQxI,KAAK,SAASwI,UAAU,kBAAkBpC,GAAG,gBAAgBX,QAAS,kBAAM,EAAK8hB,YAAzF,UACI,mBAAG/e,UAAU,wBADjB,oCAGA,6BAEF,uBACN,qBAAKA,UAAU,YAAY/B,MAAO,CAAC,aAAc,QAAjD,SACI,sBAAK+B,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,iDACA,0BAAUA,UAAU,eAAezC,KAAK,mBAAmBK,GAAG,mBAAoBmD,KAAK,IAAIlD,YAAY,qCAAvG,qBAGR,qBAAKmC,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,0CACA,qBAAKA,UAAU,6BAAf,SACI,uBAAOA,UAAU,QAAjB,SACI,kCACI,+BACI,4CACA,qBAAIA,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,sBAAT,eACJ,uBAAOpG,KAAK,SAAS+F,KAAK,iBAAiBK,GAAG,iBAAiBF,MAAM,YAG7E,+BACI,2CACA,qBAAIsC,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,qBAAT,eACJ,uBAAOpG,KAAK,SAAS+F,KAAK,gBAAgBK,GAAG,gBAAgBF,MAAM,YAG3E,+BACI,uCAAS,sBAAMsC,UAAU,eAAhB,sBACT,qBAAIA,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,gBAAT,eACJ,uBAAOpG,KAAK,SAAS+F,KAAK,WAAWK,GAAG,WAAWF,MAAM,YAGjE,+BACI,wCACA,qBAAIsC,UAAU,0BAAd,UAAwC,qBAAIA,UAAU,gBAAd,iBAChC,sBAAMpC,GAAG,kBAAT,kBACJ,uBAAOpG,KAAK,SAAS+F,KAAK,aAAaK,GAAG,aAAaF,MAAM,6BAWjG,qBAAKsC,UAAU,mBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,yDAAyDpC,GAAG,gBAA5F,6CAGJ,qBAAKoC,UAAU,QAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,yDAAyDpC,GAAG,iBAA5F,sDAQhB,qBAAKA,GAAG,8BAA8BoC,UAAU,+CAA+Cwe,KAAK,SAApG,SACI,qBAAKxe,UAAU,wBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,wBAAQxI,KAAK,SAASwI,UAAU,QAAQqf,eAAa,QAArD,kBACA,iEAEJ,sBAAKrf,UAAU,aAAf,UAEQ,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,mBAAmBK,GAAG,wBAE3F,sBAAKoC,UAAU,QAAf,UACI,iDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,kBAAkBK,GAAG,uBAE1F,sBAAKoC,UAAU,QAAf,UACI,gDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,iBAAiBK,GAAG,sBAEzF,sBAAKoC,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,mBAAmBK,GAAG,wBAE3F,sBAAKoC,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,mBAAmBK,GAAG,gCAKvG,yBAAQpG,KAAK,SAASwI,UAAU,kBAAkBpC,GAAG,yBAArD,UACI,mBAAGoC,UAAU,wBADjB,kCAKJ,qBAAKA,UAAU,YAAYpC,GAAG,kCAA9B,SACI,uBAAOoC,UAAU,yCAAyCpC,GAAG,oBAAoBK,MAAO,CAACO,MAAM,QAA/F,SACI,gCACI,+BACI,wCACA,uCACA,sCACA,6CACA,wCACA,wCACA,kEActC,eAAC4F,GAAA,EAAD,CACMC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMsnB,QACjBra,OAAQ,kBAAM,EAAKwa,YAHzB,UAKE,cAAC3a,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,0CAIF,cAACwG,GAAA,EAAMS,KAAP,UACI,sBAAK7E,UAAU,oBAAf,UACY,qBAAKA,UAAU,uBAAf,SACI,gEAEJ,sBAAKA,UAAU,aAAf,UAEQ,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,mBAAmBK,GAAG,wBAE3F,sBAAKoC,UAAU,QAAf,UACI,iDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,kBAAkBK,GAAG,uBAE1F,sBAAKoC,UAAU,QAAf,UACI,gDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,iBAAiBK,GAAG,sBAEzF,sBAAKoC,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,mBAAmBK,GAAG,wBAE3F,sBAAKoC,UAAU,QAAf,UACI,kDACA,uBAAOxI,KAAK,OAAOwI,UAAU,+BAA+BzC,KAAK,mBAAmBK,GAAG,gCAKvG,yBAAQpG,KAAK,SAASwI,UAAU,kBAAkBpC,GAAG,yBAAyBX,QAAS,kBAAM,EAAK+hB,UAAlG,UACI,mBAAGhf,UAAU,wBADjB,kCAKJ,qBAAKA,UAAU,YAAYpC,GAAG,kCAA9B,SACI,uBAAOoC,UAAU,yCAAyCpC,GAAG,oBAAoBK,MAAO,CAACO,MAAM,QAA/F,SACI,gCACI,+BACI,wCACA,uCACA,sCACA,6CACA,wCACA,wCACA,iEAWtC,eAAC4F,GAAA,EAAD,CACME,KAAM9G,KAAKlG,MAAMunB,QACjBta,OAAQ,kBAAM,EAAKua,YAFzB,UAIE,cAAC1a,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,oCAIF,cAACwG,GAAA,EAAMS,KAAP,UACQ,sBAAK7E,UAAU,oBAAf,UACQ,qBAAKA,UAAU,uBAAf,SACI,sDAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,YAAf,SACI,uBAAM9E,OAAO,OAAOsjB,KAAK,OAAO3a,cAAY,YAAYjG,GAAG,eAA3D,kBAEI,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,2BAE9E,qBAAKoC,UAAU,SAASpC,GAAG,sBAKnC,qBAAKoC,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,+BAItF,qBAAKoC,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAO+F,KAAK,sBAAsBK,GAAG,sBAAsBoC,UAAU,eAC7EmG,QAAQ,qCAAgCzI,MAAM,GAAG2I,YAAU,WAAWxI,YAAY,0BAKlG,qBAAKmC,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,gBAA3F,sCAWhC,qBAAKA,GAAG,wBAAwBoC,UAAU,sCAAsCwe,KAAK,SAArF,SACI,qBAAKxe,UAAU,gBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,wBAAQxI,KAAK,SAASwI,UAAU,QAAQqf,eAAa,QAArD,kBACA,uDAEJ,qBAAKrf,UAAU,aAAf,SACI,qBAAKA,UAAU,YAAf,SACI,uBAAM9E,OAAO,OAAOsjB,KAAK,OAAO3a,cAAY,YAAYjG,GAAG,eAA3D,kBAEI,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,2BAE9E,qBAAKoC,UAAU,SAASpC,GAAG,sBAKnC,qBAAKoC,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAOwI,UAAU,eAAezC,KAAK,sBAAsBK,GAAG,+BAItF,qBAAKoC,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wDACA,uBAAOxI,KAAK,OAAO+F,KAAK,sBAAsBK,GAAG,sBAAsBoC,UAAU,eAC7EmG,QAAQ,qCAAgCzI,MAAM,GAAG2I,YAAU,WAAWxI,YAAY,0BAKlG,qBAAKmC,UAAU,mBAAf,SACI,wBAAQxI,KAAK,SAASwI,UAAU,wDAAwDpC,GAAG,gBAA3F,kD,GAzabQ,aC6FRkhB,G,kDA3Ff,aAAc,IAAD,8BACT,gBACKhoB,MAAO,CACRqO,SAAW,GAGf,EAAKE,aAAe,EAAKA,aAAa1G,KAAlB,iBACpB,EAAKogB,sBAAwB,EAAKA,sBAAsBpgB,KAA3B,iBAPpB,E,gDAUb,SAAc/B,GAAG,IAAD,EACWA,EAAEE,OAAXI,GADF,EACLH,KADK,EACEG,OAEA,UAAVN,EAAE4O,MACF5P,QAAQC,IAAIqB,GACZF,KAAKjB,MAAMijB,qBAAqB9hB,EAAOF,KAAKjB,MAAMub,a,mCAI1D,SAAsB1a,GAAG,IAAD,EACGA,EAAEE,OAAXI,GADM,EACbH,KADa,EACNG,OAEdF,KAAKC,SAAS,CACVkI,SAAWjI,IAGftB,QAAQC,IAAIqB,GACZF,KAAKjB,MAAMkjB,6BAA6BjiB,KAAKjB,MAAMub,SAAUpa,EAAOF,KAAKjB,MAAMmJ,U,oBAGnF,WAAS,IAAD,OACJ,OACI,+BACI,6BACI,uBACIga,aAAc,MACdloB,KAAK,OACLwI,UAAU,gBACVzC,KAAK,WACLuD,WAAS,EACTpD,MAAOF,KAAKjB,MAAM6X,OAClBtW,SAAU,SAAAV,GAAC,OAAI,EAAKb,MAAMojB,cAAcviB,EAAG,EAAKb,MAAMub,WACtDhS,UAAWtI,KAAKqI,iBAExB,6BACI,+BAAOrI,KAAKjB,MAAMmP,aAOtB,oBAAI1L,UAAU,WAAd,SACI,uBACIxI,KAAK,SACLwI,UAAU,0BACVlC,SAAUN,KAAK+hB,sBACf7hB,MAAOF,KAAKlG,MAAMqO,SAClBpI,KAAK,iBAEb,qBAAIyC,UAAU,aAAd,UACI,+BAAOxC,KAAKjB,MAAMgK,QAClB,uBAAO/O,KAAK,SAASwI,UAAU,0BAA0BzC,KAAK,eAAeG,MAAM,SAEvF,qBAAIsC,UAAU,SAAd,UAEQxC,KAAKjB,MAAMqjB,kBACV,iCAAM,iCAASpiB,KAAKjB,MAAMmJ,SAA1B,MAA8ClI,KAAKjB,MAAMuc,qBACzD,+BAAOtb,KAAKjB,MAAMmJ,SAEvB,uBAAOlO,KAAK,SAASwI,UAAU,sBAAsBzC,KAAK,WAAWG,MAAM,IAAIO,MAAO,CAACO,MAAO,aAElG,oBAAIwB,UAAU,YAAd,SACI,+BAAOxC,KAAKjB,MAAMsjB,cAEtB,qBAAI7f,UAAU,WAAd,UACI,+BAAOxC,KAAKjB,MAAMujB,WAClB,uBAAOtoB,KAAK,SAASwI,UAAU,wBAAwBzC,KAAK,aAAaG,MAAM,IAAIO,MAAO,CAACO,MAAO,aAEtG,qBAAIwB,UAAU,QAAd,UACI,+BAAOxC,KAAKjB,MAAMwjB,QAClB,uBAAOvoB,KAAK,SAASwI,UAAU,qBAAqBzC,KAAK,UAAUG,MAAM,IAAIO,MAAO,CAACO,MAAO,aAEhG,6BACI,wBAAQhH,KAAK,SAASwI,UAAU,6CAA6C/C,QAAS,kBAAI,EAAKV,MAAMyjB,wBAAwB,EAAKzjB,MAAMyO,SAAxI,SACI,mBAAGhL,UAAU,6B,GAvFK5B,aCw6C3B6hB,G,kDAt5CX,aAAc,IAAD,gCACT,gBACK3oB,OAAL,GACI4oB,QAAkB,EAClBC,YAAkB,IAFtB,4BAGsB,IAHtB,2BAIsB,IAJtB,6BAOsB,GAPtB,6BAQsB,IARtB,2BASsB,uBATtB,yBAYsB,GAZtB,2CAeiC,GAfjC,sCAkBkC,IAlBlC,yCAmBkC,GAnBlC,sCAoBkC,GApBlC,sBAqBkC,IArBlC,qCAsBkC,IAtBlC,qCAyBkC,GAzBlC,uCA0BkC,IA1BlC,8BA2BkC,IA3BlC,gCA4BkC,IA5BlC,uCA6BkC,GA7BlC,sCA8BkC,GA9BlC,2BA+BkC,IA/BlC,2BAgCkC,KAhClC,4BAiCkC,IAjClC,4BAkCkC,IAlClC,gDAoCsC,GApCtC,wCAqCkC,GArClC,+BAsCkC,GAtClC,yBAuCkC,GAvClC,8BAwCkC,GAxClC,2BAyCkC,GAzClC,iCA2CkC,MA3ClC,uCA8CkC,IA9ClC,uCA+CkC,IA/ClC,uCAgDkC,IAhDlC,yBAkDY,GAlDZ,6BAmDkC,IAnDlC,4BAqDiB,IArDjB,4BAsDiB,IAtDjB,GA0DA,EAAKC,yBAAkC,EAAKA,yBAAyBjhB,KAA9B,iBACvC,EAAKkhB,uBAAkC,EAAKA,uBAAuBlhB,KAA5B,iBACvC,EAAKmhB,qBAAkC,EAAKA,qBAAqBnhB,KAA1B,iBACvC,EAAKohB,gBAAkC,EAAKA,gBAAgBphB,KAArB,iBACvC,EAAKsgB,6BAAkC,EAAKA,6BAA6BtgB,KAAlC,iBACvC,EAAKqgB,qBAAkC,EAAKA,qBAAqBrgB,KAA1B,iBACvC,EAAK6gB,wBAAkC,EAAKA,wBAAwB7gB,KAA7B,iBACvC,EAAKqhB,0BAAkC,EAAKA,0BAA0BrhB,KAA/B,iBACvC,EAAKshB,2BAAkC,EAAKA,2BAA2BthB,KAAhC,iBACvC,EAAKuhB,6BAAkC,EAAKA,6BAA6BvhB,KAAlC,iBACvC,EAAKwhB,oBAAkC,EAAKA,oBAAoBxhB,KAAzB,iBACvC,EAAKyhB,kBAAkC,EAAKA,kBAAkBzhB,KAAvB,iBACvC,EAAK0hB,wBAAkC,EAAKA,wBAAwB1hB,KAA7B,iBAEvC,EAAK2hB,aAAkC,EAAKA,aAAa3hB,KAAlB,iBACvC,EAAKmR,qBAAkC,EAAKA,qBAAqBnR,KAA1B,iBACvC,EAAK4hB,sBAAkC,EAAKA,sBAAsB5hB,KAA3B,iBACvC,EAAKwgB,cAAkC,EAAKA,cAAcxgB,KAAnB,iBACvC,EAAK6hB,oBAAkC,EAAKA,oBAAoB7hB,KAAzB,iBACvC,EAAKgD,qBAAkC,EAAKA,qBAAqBhD,KAA1B,iBA/E9B,E,uDAmFjB,WACI3B,KAAKC,SAAS,CACVmhB,SAAUphB,KAAKlG,MAAMsnB,Y,+BAI7B,WACIphB,KAAKsjB,iB,0BAIT,WAAe,IAAD,OACV/lB,MACIC,EAAW,4BACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9CuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CACVmQ,aAAcjS,IAElB,EAAKqV,sB,4BAIjB,WAAiB,IAAD,OACR/G,EAAIzM,KAAKlG,MAAMsW,aAAa6E,UAChCrW,QAAQC,IAAI4N,GACZ,IAAIF,EAAI,GACR,GAAGE,EAAE,CACD,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACrBtB,EAAEM,KAAKgB,GAEX7N,KAAKC,SAAS,CAACsR,YAAahF,IAAG,kBAAI3N,QAAQC,IAAI,EAAK/E,MAAMyX,mB,2BAIlE,SAAc7I,GAAQ,IAAD,OACjBnL,MAAMC,EAAA,yCAA6CkL,EAA7C,oBAA+D1I,KAAKlG,MAAM0X,cAC7EzT,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACmQ,aAAcjS,IAAM,WACjCS,QAAQC,IAAI,EAAK/E,MAAMsW,cACvB,EAAKoD,yB,wBAOjB,SAAW0B,EAAMnV,GAAM,IAAD,OAClBxC,MACIC,EAAA,oCAAwCuC,EAAxC,YAAgDmV,GAChD,CACIxX,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIhDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACJ,EAAK8B,SAAS,CAACmQ,aAAcjS,EAAKqT,YAAa0D,IAAQ,WACnD,EAAK1B,iBACL5U,QAAQC,IAAI,qB,kCAKxB,SAAsBe,GAAG,IAAD,EAECA,EAAEE,OAAlBC,EAFe,EAEfA,KAAOG,EAFQ,EAERA,MACdtB,QAAQC,IAAIqB,GACZF,KAAKmV,WAAWjV,EAAMH,GACtBnB,QAAQC,IAAIkB,GACZnB,QAAQC,IAAI,uBAAuBmB,KAAKlG,MAAM2pB,4B,kCAGhD,SAAsB7jB,GAAG,IAAD,EAEGA,EAAEE,OAAXI,GAFM,EAEbH,KAFa,EAENG,OACdF,KAAKC,SAAS,CACVyjB,iBAAmBxjB,M,mCAK3B,SAAsB0W,GAElB5W,KAAKgiB,qBAAqBpL,EAAQ5W,KAAKlG,MAAM2pB,yBAAyB,GACtEzjB,KAAKwjB,wB,2BAGT,SAAc5jB,EAAG0a,GAAU,IAAD,EACC1a,EAAEE,OAAXI,GADQ,EACfH,KADe,EACRG,OAEdF,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,eAAoEpa,EACpEF,KAAKC,SAAS,CACV0jB,qBAAuB3jB,KAAKlG,MAAM6pB,yB,kCAI1C,SAAqB/jB,GAAG,IAAD,EACIA,EAAEE,OAAXI,GADK,EACZH,KADY,EACLG,OAEdF,KAAKC,SAAS,CACV2jB,qBAAuB1jB,IAEf,GAATA,GACCF,KAAKC,SAAS,CACV4jB,uBAA0B,SAC1BC,cAA0B,oBAGlCllB,QAAQC,IAAImB,KAAKlG,MAAM8pB,wB,6BAG3B,SAAgBhkB,GAAG,IAAD,EACSA,EAAEE,OAAXI,GADA,EACPH,KADO,EACAG,OAEdF,KAAKC,SAAS,CACV8jB,WAAa7jB,M,sCAKrB,SAAyBN,GAAG,IAAD,EACAA,EAAEE,OAAXI,GADS,EAChBH,KADgB,EACTG,OAEdF,KAAKC,SAAS,CACV4jB,uBAA0B3jB,IAGQ,GAAnCF,KAAKlG,MAAM8pB,sBAA6C,GAAhB1jB,EAAM8N,OAC7ChO,KAAKgkB,YAAY,MAAO9jB,GACgB,GAAnCF,KAAKlG,MAAM8pB,sBAA6C,IAAhB1jB,EAAM8N,OACnDhO,KAAKgkB,YAAY,MAAO9jB,GAGxBF,KAAKC,SAAS,CACV6jB,cAAkB,kBAClBG,uBAA0B,EAC1BC,sBAA0B,M,yBAOtC,SAAYC,EAAejkB,GAAO,IAAD,OACzB6C,EAAMvF,EAAA,YAAuB2mB,EAAvB,WAAyCjkB,GACnDtB,QAAQC,IAAIkE,GACZxF,MAAMwF,EACF,CACIrF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,IAGrBC,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GACF,EAAK8B,SACD,CACI0iB,YAAaxkB,EAAI,UAErB,WACIS,QAAQC,IAAIkE,GACZnE,QAAQC,IAAI,EAAK/E,MAAM+pB,wBACvBjlB,QAAQC,IAAI,UACZD,QAAQC,IAAIV,GACW,GAApBA,EAAI,UACH,EAAK8B,SAAS,CACVgkB,uBAA0B9lB,EAAI,uBAC9B+lB,sBAA0B/lB,EAAI,wBAElC,EAAKgH,aAAa,qBAAsB,uBACxCvG,QAAQC,IAAI,EAAK/E,MAAM6oB,aACvB,EAAKyB,YAAYD,IAGjB,EAAKhf,aAAa,0BAA2B,+B,yBASjE,SAAYgf,GACY,OAAjBA,EACCnkB,KAAKC,SAAS,CACV6jB,cAAkB9jB,KAAKlG,MAAM6oB,YAAY3E,QAAQ,IAAIhe,KAAKlG,MAAM6oB,YAAYzE,gBAAgB,IAAIle,KAAKlG,MAAM6oB,YAAY1E,iBAE3Hrf,QAAQC,IAAImB,KAAKlG,MAAM6oB,cAEvB3iB,KAAKC,SAAS,CACV6jB,cAAkB9jB,KAAKlG,MAAM6oB,YAAYtP,aAE7CzU,QAAQC,IAAImB,KAAKlG,MAAM6oB,gB,oCAI/B,SAAuB/iB,GAAG,IAAD,EAEEA,EAAEE,OAAXI,GAFO,EAEdH,KAFc,EAEPG,OACdF,KAAKC,SAAS,CACV6jB,cAAkB5jB,M,0BAK1B,SAAa2F,EAAS/E,GAClBd,KAAKC,SAAS,CACVqE,aAAeuB,EACftB,WAAezD,EACfuD,aAAe,M,iCAIvB,SAAoBpC,EAAQC,EAAamiB,GACrChiB,wBAAa,CACTC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,sBAAKC,UAAU,YAAf,UACI,6BAAKP,IACL,4BAAIC,IACJ,qBAAKM,UAAU,mBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACA,wBAAQxI,KAAK,SAASyF,QAAS4kB,EAC3B7hB,UAAU,8DADd,uBAKA,qBAAKA,UAAU,QAAf,SACI,wBAAQxI,KAAK,SAASyF,QAAS8C,EAC3BC,UAAU,6DADd,qC,sBAchC,SAASP,EAAQC,EAAamiB,GAC1BhiB,wBAAa,CACTC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,sBAAKC,UAAU,YAAf,UACI,6BAAKP,IACL,4BAAIC,IACJ,qBAAKM,UAAU,mBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACA,wBAAQxI,KAAK,SAASyF,QAAS8C,EAC3BC,UAAU,8DADd,mC,6BAa5B,SAAgB8X,GAAU,IAAD,OACkB,GAAvCta,KAAKlG,MAAM2pB,yBACTzjB,KAAKskB,yBACLjiB,wBAAa,CACXC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,sBAAKC,UAAU,YAAf,UACI,2DACA,6GACA,uBACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,+BAAjB,kCACA,uBACIxI,KAAK,OACLwI,UAAU,wBACVc,WAAS,EACThD,SAAU,SAAAV,GAAC,OAAI,EAAKqjB,2BAA2BrjB,EAAG,SAK1D,uBACA,qBAAK4C,UAAU,qBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,+BAAjB,uBACA,uBACIxI,KAAK,OACLwI,UAAU,eACVlC,SAAU,SAAAV,GAAC,OAAI,EAAKqjB,2BAA2BrjB,EAAG,WAK9D,qBAAK4C,UAAU,qBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,+BAAjB,sBACA,uBACIxI,KAAK,OACLwI,UAAU,eACVlC,SAAU,SAAAV,GAAC,OAAI,EAAKqjB,2BAA2BrjB,EAAG,gBAQtE,qBAAK4C,UAAU,sBAAf,SACI,wBACIxI,KAAK,SACLyF,QAAS,WACL,EAAKyjB,6BAA6B5I,GAClC/X,KAGJC,UAAU,mCAPd,kC,wCAgB5B,SAA2B5C,EAAG2kB,GAAc,IAAD,EAChB3kB,EAAEE,OAAXI,GADyB,EAChCH,KADgC,EACzBG,OACd,OAAOqkB,GACH,KAAK,EACDvkB,KAAKlG,MAAM0qB,uBAA0BtkB,EACrCF,KAAKC,SAAS,CACVukB,uBAAyBxkB,KAAKlG,MAAM0qB,yBAExC,MACJ,KAAK,EACDxkB,KAAKlG,MAAM2qB,uBAAyBvkB,EACpCF,KAAKC,SAAS,CACVwkB,uBAA0BzkB,KAAKlG,MAAM2qB,yBAEzC,MACJ,KAAK,EACDzkB,KAAKlG,MAAM4qB,uBAAyBxkB,EACpCF,KAAKC,SAAS,CACVykB,uBAA0B1kB,KAAKlG,MAAM4qB,yBAKjD9lB,QAAQC,IAAIqB,GACZtB,QAAQC,IAAImB,KAAKlG,MAAM0qB,wBACvB5lB,QAAQC,IAAImB,KAAKlG,MAAM2qB,wBACvB7lB,QAAQC,IAAImB,KAAKlG,MAAM4qB,0B,0CAK3B,SAA6BpK,GAAU,IAAD,OAElC/c,MAAMC,EAAA,iCACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,oBAA0BmC,KAAKlG,MAAM0qB,uBACrC,oBAA0BxkB,KAAKlG,MAAM2qB,uBACrC,oBAA0BzkB,KAAKlG,MAAM4qB,yBAEzC5mB,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,GAFAS,QAAQC,IAAIV,GACZS,QAAQC,IAAIV,EAAI,UACO,GAApBA,EAAI,SAAqB,CAExB,EAAKgH,aAAa,gDAAiD,uBACnE,EAAKrL,MAAM4qB,uBAAyB,GACpC,EAAK5qB,MAAM2qB,uBAAyB,GACpC,EAAK3qB,MAAM0qB,uBAAyB,GACpC,EAAKvkB,SAAS,CACVukB,uBAAyB,EAAK1qB,MAAM0qB,uBACpCC,uBAA0B,EAAK3qB,MAAM2qB,uBACrCC,uBAA0B,EAAK5qB,MAAM4qB,yBAGzC,IAAIxW,EAAW/P,EAAI,SAEnB,EAAKrE,MAAM6pB,qBAAqBrJ,GAAhC,WAAiEpM,EAAQ,GACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,eAAiEpM,EAAQ,OACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,eAAiEpM,EAAQ,OACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,cAAiEpM,EAAQ,SACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,eAAiEpM,EAAQ,OACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,eAAiE,EACjE,EAAKxgB,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiE,EACjE,EAAKxgB,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiE,EAGjE,EAAK2H,6BAA6B3H,EAAU,EAAGpM,EAAQ,QACvD,EAAKoW,8BAEL,EAAKnf,aAAa,mDAAoD,4B,oCAMlF,WAAyB,IAAD,OACpBnF,KAAKC,SAAS,CACVwjB,yBAA8BzjB,KAAKlG,MAAM2pB,yBAAyB,EAClEkB,sBAA8B3kB,KAAKlG,MAAM6qB,sBAAsB,IACjE,WAEM,EAAK1kB,SAAS,CACV0jB,qBAAoB,uBACb,EAAK7pB,MAAM6pB,sBADE,CAEhB,CACIiB,QAAsB,EAAK9qB,MAAM6qB,sBACjCxa,WAAsB,EACtB8D,eAAsB,GACtBzE,eAAsB,GACtBwK,iBAAsB,EACtB6Q,cAAsB,EACtBpb,eAAsB,EACtB4R,eAAsB,EACtBC,kBAAsB,EACtBwJ,iBAAsB,EACtBC,cAAsB,EACtBC,eAAsB,EACtB5C,kBAAsB,OAKtC,EAAKniB,SAAS,CACVglB,sBAAqB,uBAAS,EAAKnrB,MAAMmrB,uBAApB,CAA2C,EAAKnrB,MAAM6qB,+B,4EAKvF,WAA8BnX,GAA9B,mBAAApQ,EAAA,6DACGwB,QAAQC,IAAI2O,GADf,SAISxN,KAAKC,SAAS,CACfwjB,yBAA8BzjB,KAAKlG,MAAM2pB,yBAAyB,IAL1E,UAQO/V,EARP,aAQmB1N,KAAKlG,MAAMmrB,0BACvBtX,EAAQD,EAAMwX,QAAQ1X,KAEb,GAXhB,wBAYQE,EAAMI,OAAOH,EAAM,GACnB/O,QAAQC,IAAI6O,GAbpB,UAcc1N,KAAKC,SAAS,CAChBglB,sBAAuBvX,IAfnC,eAmBOyX,EAA4B,GAnBnC,UAqBSnlB,KAAKlG,MAAM6pB,qBAAqBhX,KAAI,SAACxO,EAAMmc,GACzCnc,EAAKymB,SAAWpX,IACf2X,EAAyB,uBAClBA,GADkB,CAErB,CACIP,QAAsBzmB,EAAKymB,QAC3Bza,WAAsBhM,EAAKgM,WAC3B8D,eAAsB9P,EAAK8P,eAC3BzE,eAAsBrL,EAAKqL,eAC3BwK,iBAAsB7V,EAAK6V,iBAC3B6Q,cAAsB1mB,EAAK0mB,cAC3Bpb,eAAsBtL,EAAKsL,eAC3B4R,eAAsBld,EAAKkd,eAC3BC,kBAAsBnd,EAAKmd,kBAC3BwJ,iBAAsB3mB,EAAK2mB,iBAC3BC,cAAsB5mB,EAAK4mB,cAC3BC,eAAsB7mB,EAAK6mB,eAC3B5C,kBAAsBjkB,EAAKikB,yBAtC/C,yBA4CUpiB,KAAKC,SAAS,CAChB0jB,qBAAsBwB,IA7C9B,QAgDInlB,KAAKgjB,4BAhDT,iD,yFAoDA,SAAqBpM,EAAQ0D,GAAU,IAAD,OAClC/c,MAAMC,EAAA,mBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBoQ,eAAkB2I,IAEtB9Y,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,GAFAS,QAAQC,IAAI,UACZD,QAAQC,IAAIV,GACW,GAApBA,EAAI,SAAqB,CAExB,EAAKgH,aAAa,+BAAgC,uBAElD,IAAI+I,EAAc/P,EAAI,SAClBkkB,EAAclkB,EAAI,UAEtB,EAAKrE,MAAM6pB,qBAAqBrJ,GAAhC,WAAiEpM,EAAQ,GACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,eAAiEpM,EAAQ,OACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,eAAiEpM,EAAQ,OACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,cAAiEpM,EAAQ,SACzE,EAAKpU,MAAM6pB,qBAAqBrJ,GAAhC,eAAiEpM,EAAQ,OAEzD,GAAbmU,GACC,EAAKvoB,MAAM6pB,qBAAqBrJ,GAAhC,eAAiE+H,EAAS,SAC1E,EAAKvoB,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiE+H,EAAS,YAE1E,EAAKvoB,MAAM6pB,qBAAqBrJ,GAAhC,iBAAgEnc,EAAI,mBAEpE,EAAKrE,MAAM6pB,qBAAqBrJ,GAAhC,eAAiE,EACjE,EAAKxgB,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiE,GAErE,EAAKxgB,MAAM6pB,qBAAqBrJ,GAAhC,eAAiE,EACjE,EAAKxgB,MAAM6pB,qBAAqBrJ,GAAhC,kBAAoE,EAEpE,EAAK2H,6BAA6B3H,EAAU,EAAGpM,EAAQ,QACvD,EAAKoW,8BAEL,EAAKnf,aAAa,yBAA0B,uBAC5C,EAAKigB,gBAAgB9K,Q,sBAMjC,WAQI1b,QAAQC,IAAImB,KAAKlG,MAAM6pB,wB,qCAG3B,SAAwB/jB,GAAG,IAAD,EACCA,EAAEE,OAAXI,GADQ,EACfH,KADe,EACRG,OACdF,KAAKC,SAAS,CACVolB,wBAA2BnlB,IAGjB,UAAVN,EAAE4O,MACFxO,KAAKC,SAAL,aAEIqlB,eAAiBC,WAAWvlB,KAAKlG,MAAMwrB,gBAAkBC,WAAWvlB,KAAKlG,MAAM0rB,iCAC/EA,gCAAkCtlB,GAHtC,iBAIqBqlB,WAAWvlB,KAAKlG,MAAMwrB,gBAAkBC,WAAWvlB,KAAKlG,MAAM0rB,mCAEnF5mB,QAAQC,IAAIqB,M,0CAKpB,SAA6Boa,EAAUnS,EAAUD,GAM7C,IAAIud,EACApD,EAEJ,GAAGla,GAAYnI,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,gBAA8H,GAA/Dta,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,eAI1E,GAAGta,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,iBAA8DtM,OAAS,EAAE,CAIxE,IAFA,IAAI0X,EAAsB,EAElB7X,EAAI,EAAGA,EAAI7N,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,iBAA8DtM,OAAQH,IACrF,GAAG1F,GAAYnI,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,iBAA8DzM,GAA9D,SAA6E,CAExF6X,EAAuB1lB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,iBAA8DzM,GAA9D,SACvB4X,EAAkBzlB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,iBAA8DzM,GAA9D,YAClB,MAIR7N,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,eAAiEoL,EACjE1lB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiEmL,EAEjEzlB,KAAKC,SAAS,CACV0jB,qBAAuB3jB,KAAKlG,MAAM6pB,uBAGtC3jB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiE,EACjE+H,IAAoBna,EAASud,GAAgBtd,GAAUwd,QAAQ,QAI/D3lB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiE,EAEjE+H,IAAoBna,GADpBud,EAAkBzlB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,oBAC2BnS,GAAUwd,QAAQ,QAMnE3lB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,kBAAiE,EACjEmL,EAAkBvd,EAClBma,EAAkB,EAGtB,IAAIE,EAAckD,EAAiBtd,EAC/Bma,EAAcC,EAAQ,KAG1BviB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,iBAAiEnS,EACjEnI,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,iBAAiEgI,EAASqD,QAAQ,GAClF3lB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,cAAiEiI,EAAMoD,QAAQ,GAC/E3lB,KAAKlG,MAAM6pB,qBAAqBrJ,GAAhC,eAAiE+H,EAKjE,IAAI3U,EAAK,aAAO1N,KAAKlG,MAAM6pB,sBAC3B3jB,KAAKC,SAAS,CACV0jB,qBAAsBjW,IAE1B1N,KAAKgjB,8B,uCAGT,WAA4B,IAAD,OAEvBhjB,KAAKlG,MAAMwrB,eAAmBC,WAAW,GACzCvlB,KAAKlG,MAAM8rB,SAAmBL,WAAW,GACzCvlB,KAAKlG,MAAM+rB,cAAmBN,WAAW,GACzCvlB,KAAKlG,MAAMgsB,WAAmBP,WAAW,GAEzCvlB,KAAKC,SAAS,CACVqlB,eAAkBtlB,KAAKlG,MAAMwrB,eAC7BM,SAAkB5lB,KAAKlG,MAAM8rB,SAC7BC,cAAkB7lB,KAAKlG,MAAM+rB,cAC7BC,WAAkB9lB,KAAKlG,MAAMgsB,aAGjC9lB,KAAKlG,MAAM6pB,qBAAqBhX,KAAI,SAACxO,EAAMmc,GACvC,EAAKxgB,MAAMwrB,eAAmBC,WAAW,EAAKzrB,MAAMwrB,gBAAkBC,WAAWpnB,EAAK6mB,gBACtF,EAAKlrB,MAAM8rB,SAAoBL,WAAWpnB,EAAK4mB,eAAiBQ,WAAWpnB,EAAK2mB,kBAAqBS,WAAW,EAAKzrB,MAAM8rB,UAC3H,EAAK9rB,MAAM+rB,cAAmBN,WAAW,EAAKzrB,MAAM+rB,eAAiBN,WAAWpnB,EAAK2mB,kBACrF,EAAKhrB,MAAMgsB,WAAmBP,WAAW,EAAKzrB,MAAMgsB,YAAcP,WAAWpnB,EAAK4mB,kBAGtF/kB,KAAKC,SAAS,CACVqlB,eAAkBtlB,KAAKlG,MAAMwrB,eAAeK,QAAQ,GACpDC,SAAkB5lB,KAAKlG,MAAM8rB,SAASD,QAAQ,GAC9CE,cAAkB7lB,KAAKlG,MAAM+rB,cAAcF,QAAQ,GACnDG,WAAkB9lB,KAAKlG,MAAMgsB,WAAWH,QAAQ,KAGpD/mB,QAAQC,IAAI,qBAAqBmB,KAAKlG,MAAMgsB,c,iCAGhD,WAAsB,IAAD,OACjBzjB,wBAAa,CACTC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,qBAAKC,UAAU,+BAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,0EACA,wGACA,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,qDACV/C,QAAS,WACL,EAAK2jB,kBAAkB,GACvB7gB,KALR,wBAYJ,qBAAKC,UAAU,oBAAf,SACI,wBACIxI,KAAK,SACLyF,QAAS,WACL,EAAK2jB,kBAAkB,GACvB7gB,KAEJC,UAAU,kDANd,uBAUJ,qBAAKA,UAAU,oBAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,oDAFd,6C,+BAkBhD,SAAkBhB,GAAU,IAAD,OAiBvBiB,KAAUC,QACN,8BACI,2DAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MAAMC,EAAA,6BACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,cAAsB,EAAK/D,MAAM8pB,qBACjC,gBAAsB,EAAK9pB,MAAM+pB,uBACjC,cAAsB,EAAK/pB,MAAMgqB,cACjC,gBAAsB,EAAK/kB,MAAMgnB,gBACjC,WAAsB,EAAKhnB,MAAMinB,WACjC,WAAsB,EAAKlsB,MAAMiqB,WACjC,YAAsB,EAAKhlB,MAAMknB,YACjC,YAAsB,aACtB,eAAsB,EAAKnsB,MAAMwrB,eACjC,SAAsB,EAAKxrB,MAAM8rB,SACjC,cAAsB,EAAK9rB,MAAM+rB,cACjC,WAAsB,EAAK/rB,MAAMgsB,WACjC,iBAAsB,EAAKhsB,MAAM4pB,iBACjC,cAAsB,EAAK5pB,MAAM6pB,uBAIrC7lB,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,GAFAS,QAAQC,IAAIV,GACZS,QAAQC,IAAIV,EAAI,UACO,GAApBA,EAAI,UAeH,GAbA,EAAKY,MAAMmnB,oBAAoB,EAAG,GAAG,IACrC,EAAKnnB,MAAMonB,gBACX,EAAKpnB,MAAMqnB,sBAEX3jB,KAAUK,QACN,8BACI,iEAEJ,CACAH,SAAU,cAIC,GAAZnB,EAAc,CAEb,IAAIuB,EAAMvF,EAAA,uBAAwCW,EAAI,QACtDsE,KAAUC,QACN,8BACI,qDAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MACIwF,EACA,CACIrF,OAAQ,QAQfK,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACOA,EAAI,UACHsE,KAAUK,QACN,8BACI,6DAEJ,CACAH,SAAU,cAIdF,KAAU9D,MACN,8BACI,wEAEJ,CACAgE,SAAU,0BAWlCF,KAAU9D,MACN,8BACI,oFAEJ,CACAgE,SAAU,sB,oBAa9B,WAAS,IAAD,OACJ,OAEJ,sBAAKH,UAAU,qCAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,4BACA,uBAAM9E,OAAO,OAAOsjB,KAAK,OAAO3a,cAAY,YAAYjG,GAAG,mBAA3D,UACI,qBAAKoC,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,QAAf,UACI,uCAAS,mBAAGA,UAAU,iCAAtB,wBACA,qBAAKA,UAAU,cAAf,SACI,yBACIA,UAAU,eACVzC,KAAK,WACLK,GAAG,WACHK,MAAO,CAACO,MAAO,QACfV,SAAUN,KAAK+iB,gBALnB,UAOI,wBAAQ7iB,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,qCAOpB,oBAAIsC,UAAU,aAAd,sBACA,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uCAAS,mBAAGA,UAAU,iCAAtB,6BACA,qBAAKA,UAAU,cAAf,SACI,yBACIA,UAAU,eACVzC,KAAK,gBACLK,GAAG,gBACHK,MAAO,CAACO,MAAO,QACfV,SAAUN,KAAK8iB,qBALnB,UAOI,wBAAQ5iB,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,6BAM2B,GAAnCF,KAAKlG,MAAM8pB,qBACV,qBAAKphB,UAAU,QAAf,SACG,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,0DACA,uBAAOxI,KAAK,SACRwI,UAAc,eACdzC,KAAc,kBACdK,GAAc,kBACdE,SAAeN,KAAK4iB,yBACpB1iB,MAAeF,KAAKlG,MAAM+pB,uBAC1BvgB,WAAS,OAIjB,sBAAKd,UAAU,QAAf,UACI,0DACA,uBACIxI,KAAc,OACdwI,UAAc,eACdzC,KAAc,gBACdK,GAAc,gBACdF,MAAeF,KAAKlG,MAAMgqB,cAC1BxjB,SAAeN,KAAK6iB,4BAG5B,sBAAKrgB,UAAU,QAAf,UACI,kDAAyB,uBACzB,+BAAOxC,KAAKlG,MAAMmqB,4BAEtB,sBAAKzhB,UAAU,QAAf,UACI,qDAA+B,uBAC/B,sCAASxC,KAAKlG,MAAMoqB,iCAI/B,UAKb,oBAAI1hB,UAAU,aAAd,gCACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wBAAOA,UAAU,uBAAuBpC,GAAG,eAA3C,UACI,gCACI,+BACI,oBAAIY,MAAM,OAAV,oBACA,oBAAIA,MAAM,OAAV,sBACA,oBAAKA,MAAM,OAAX,sBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,uBACA,0CACA,uCACA,+CAGR,gCAYQhB,KAAKlG,MAAM6pB,qBACV3jB,KAAKlG,MAAM6pB,qBAAqBhX,KAAI,SAACxO,EAAMmc,GACzC,OACK,cAAC,GAAD,CAEI9M,OAAkCrP,EAAKymB,QACvCtK,SAAkCA,EAClC1D,OAAkCzY,EAAK8P,eACvCC,SAAkC/P,EAAKqL,eACvCT,MAAkC5K,EAAK0mB,cACvC3c,OAAkC/J,EAAKsL,eACvC4Y,UAAkClkB,EAAK6mB,eACvC1C,SAAkCnkB,EAAK2mB,iBACvCvC,MAAkCpkB,EAAK4mB,cACvC3C,kBAAkCjkB,EAAKikB,kBACvCiE,iBAAkCloB,EAAKkoB,iBACvC/K,kBAAkCnd,EAAKmd,kBACvC2G,6BAAkC,EAAKA,6BACvCO,wBAAkC,EAAKA,wBACvCR,qBAAkC,EAAKA,qBACvCG,cAAkC,EAAKA,eAhBLhkB,EAAKymB,YAoBlD,YAMjB,sBAAKpiB,UAAU,SAAf,UACI,uBAE2C,GAAvCxC,KAAKlG,MAAM2pB,yBACV,yBAAQzpB,KAAK,SACVwI,UAAU,kBAAkBpC,GAAG,gBAAgBX,QAAS,kBAAI,EAAK2lB,mBADpE,UAEG,mBAAG5iB,UAAU,wBAFhB,oCAKA,yBAAQxI,KAAK,SACVwI,UAAU,kBAAkBpC,GAAG,gBAAgBX,QAAS,kBAAI,EAAK2lB,gBAAgB,EAAKtrB,MAAM2pB,yBAA2B,IAD1H,UAEG,mBAAGjhB,UAAU,wBAFhB,kCAUsC,GAAvCxC,KAAKlG,MAAM2pB,yBACV,yBAAQzpB,KAAK,SACVwI,UAAU,kBAAkB/C,QAAS,kBAAM,EAAK+jB,uBADnD,UAEG,mBAAGhhB,UAAU,wBAFhB,wBAIA,KAEL,6BAEF,uBACN,qBAAKA,UAAU,YAAY/B,MAAO,CAACygB,UAAW,QAA9C,SACI,sBAAK1e,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,iDACA,0BACIA,UAAU,eACVzC,KAAK,mBACLK,GAAG,mBACHmD,KAAK,IACLjD,SAAUN,KAAK2E,qBALnB,SAMM3E,KAAKlG,MAAM4pB,wBAGzB,qBAAKlhB,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,0CACA,qBAAKA,UAAU,6BAAf,SACI,uBAAOA,UAAU,QAAjB,SACI,kCAeI,+BACI,kDACA,qBAAIA,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,sBAAT,SAAgCJ,KAAKlG,MAAMwrB,uBAGvD,+BACI,2CACA,qBAAI9iB,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,qBAAT,SAA+BJ,KAAKlG,MAAM+rB,gBAC9C,uBAAO7rB,KAAK,SAAS+F,KAAK,gBAAgBK,GAAG,gBAAgBF,MAAM,YAG3E,+BACI,uCAAS,sBAAMsC,UAAU,eAAhB,sBACT,qBAAIA,UAAU,aAAd,iBACQ,sBAAMpC,GAAG,gBAAT,SAA0BJ,KAAKlG,MAAM8rB,WACzC,uBAAO5rB,KAAK,SAAS+F,KAAK,WAAWK,GAAG,WAAWF,MAAM,YAGjE,+BACI,wCACA,qBAAIsC,UAAU,0BAAd,UAAwC,qBAAIA,UAAU,gBAAd,iBAChC,sBAAMpC,GAAG,kBAAT,SAA4BJ,KAAKlG,MAAMgsB,gBAC3C,uBAAO9rB,KAAK,SAAS+F,KAAK,aAAaK,GAAG,aAAaF,MAAM,6BAWjG,qBAAKsC,UAAU,mBAAf,SACI,qBAAKA,UAAU,MAAf,SAOI,qBAAKA,UAAU,SAAf,SACI,wBAAQxI,KAAK,SACTwI,UAAU,yDACV/C,QAAS,kBAAI,EAAK0jB,uBAFtB,iDAcxB,eAACvc,GAAA,EAAD,CACIC,KAAK,KACLC,KAAM9G,KAAKlG,MAAMsnB,QACjBra,OAAQ,kBAAM,EAAKyc,uBAHvB,UAKA,cAAC5c,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,0CAIJ,cAACwG,GAAA,EAAMS,KAAP,UACI,sBAAK7E,UAAU,oBAAf,UACY,qBAAKA,UAAU,uBAAf,SACI,gEAEJ,sBAAKA,UAAU,aAAf,UAEQ,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,kDACA,uBACIxI,KAAK,OACLwI,UAAU,+BACVzC,KAAK,UAAUK,GAAG,mBAClBE,SAAUN,KAAK8S,0BAGvB,sBAAKtQ,UAAU,QAAf,UACI,iDACA,uBACIxI,KAAK,OACLwI,UAAU,+BACVzC,KAAK,SACLK,GAAG,kBACHE,SAAUN,KAAK8S,0BAGvB,sBAAKtQ,UAAU,QAAf,UACI,gDACA,uBACIxI,KAAK,OACLwI,UAAU,+BACVzC,KAAK,QACLK,GAAG,iBACHE,SAAUN,KAAK8S,0BAGvB,sBAAKtQ,UAAU,QAAf,UACI,kDACA,uBACIxI,KAAK,OACLwI,UAAU,+BACVzC,KAAK,UACLK,GAAG,mBACHE,SAAUN,KAAK8S,0BAGvB,sBAAKtQ,UAAU,QAAf,UACI,kDACA,uBACIxI,KAAK,OACLwI,UAAU,+BACVzC,KAAK,UACLK,GAAG,mBACHE,SAAUN,KAAK8S,kCAMvC,sBAAKtQ,UAAU,YAAYpC,GAAG,kCAA9B,UACI,uBAAOoC,UAAU,yCAAyCpC,GAAG,oBAAoBK,MAAO,CAACO,MAAM,QAA/F,SACI,kCACI,+BACI,wCACA,uCACA,sCACA,6CACA,wCACA,wCACA,gDAGAhB,KAAKlG,MAAMsW,aAAajS,KACvB6B,KAAKlG,MAAMsW,aAAajS,KAAKwO,KAAI,SAACC,EAAM0N,GACrC,OACI,+BACI,6BAAK1N,EAAKqB,iBACV,6BAAKrB,EAAKQ,gBACV,6BAAKR,EAAKS,eACV,6BAAKT,EAAK0Z,sBACV,6BAAK1Z,EAAKpD,iBACV,6BAAKoD,EAAKnD,iBACV,6BACA,wBACIjH,UAAU,6BACVxI,KAAK,SACLyF,QAAS,kBAAI,EAAK8jB,sBAAsB3W,EAAKqB,iBAHjD,SAKI,mBAAGzL,UAAU,uBAbZoK,EAAK2Z,aAkBpB,UAId,qBAAK/jB,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKlG,MAAMyX,YACVvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBACIpK,UAAU,kCACVxI,KAAK,SACLyF,QAAS,kBAAI,EAAK+mB,cAAc5Z,IAHpC,SAG4CA,GAH/BA,MAOnB,yBAY1C,cAACtF,GAAA,EAAD,CACI7G,MAAO,CACHkC,SAAkB,QAClB4E,IAAkB,GAClBC,MAAkB,GAClBC,OAAiB,KACjBC,gBAAkB1H,KAAKlG,MAAMyK,WAC7BzD,MAAiB,SAErByB,QAAS,kBAAM,EAAKtC,SAAS,CACzBoE,aAAa,KAEjByC,KAAU9G,KAAKlG,MAAMuK,YACrBsD,MAAU,KACVC,UAAQ,EAdZ,SAgBI,cAACN,GAAA,EAAMD,KAAP,UACA,6BAAKrH,KAAKlG,MAAMwK,0B,GA/4CC1D,aCgJV6lB,G,kDA3JX,aAAc,IAAD,8BACT,gBACK3sB,MAAO,CACR4sB,mBAAsB,GACtBplB,iBAAsB,sBACtBC,kBAAsB,uBAI1B,EAAKolB,uBAAgC,EAAKA,uBAAuBhlB,KAA5B,iBACrC,EAAKilB,wBAAgC,EAAKA,wBAAwBjlB,KAA7B,iBACrC,EAAKklB,mBAAgC,EAAKA,mBAAmBllB,KAAxB,iBAX5B,E,0DAcb,WAAyB,IAAD,OACpBU,wBAAa,CACTC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACT,OACI,qBAAKC,UAAU,+BAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,gDACA,2HACA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,gEACA,0BACIA,UAAc,eACde,KAAc,IACdlD,YAAc,8BACdC,SAAe,SAACV,GAAD,OAAK,EAAKgnB,wBAAwBhnB,IACjDG,KAAc,4BAIpB,uBAEN,sBAAKyC,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLyF,QAAS,WACL,EAAKonB,qBACLtkB,KAEJC,UAAU,oDANd,8BAUJ,qBAAKA,UAAU,QAAf,SACI,wBACIxI,KAAK,SACLyF,QAAS,WACL8C,KAEJC,UAAU,kDALd,2C,qCAqBhD,SAAwB5C,GACpBI,KAAKC,SAAL,eAAgBL,EAAEE,OAAOC,KAAOH,EAAEE,OAAOI,U,gCAG7C,WAAqB,IAAD,OACZ6C,EAAMvF,EAAA,iCAEViF,KAAUC,QACN,8BACI,oDAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MAAMwF,EACF,CACIrF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,GAAW,EAAKkB,MAAM+nB,QACtB,OAAW,EAAKhtB,MAAM4sB,qBAE1B5oB,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAEsB,GAArBA,EAAI,WACH,EAAK8B,SAAS,CACVymB,mBAAsB,KAE1BjkB,KAAUK,QACN,8BACI,iEAEJ,CACEH,SAAU,cAGhB,EAAK5D,MAAMmnB,oBAAoB,EAAG,GAAI,KAGtCzjB,KAAU9D,MACN,8BACI,yEAEJ,CACEgE,SAAU,sB,oBAYhC,WACI,OACI,wBACIlC,MAAe,CAAC,eAAe,OAC/BzG,KAAc,SACdoG,GAAc,YACdX,QAAeO,KAAK2mB,uBACpBnkB,UAAc,oCALlB,SAMQ,mBAAGA,UAAU,yB,GAvJL5B,aC6EbmmB,G,kDA3EX,aAAc,IAAD,8BACT,gBACKjtB,MAAO,CACR4sB,mBAAsB,GACtBplB,iBAAsB,sBACtBC,kBAAsB,uBAG1B,EAAKylB,mBAA2B,EAAKA,mBAAmBrlB,KAAxB,iBARvB,E,sDAWb,WAAqB,IAAD,OACZoB,EAAMvF,EAAA,uBAAwCwC,KAAKjB,MAAM+nB,QAE7DrkB,KAAUC,QACN,8BACI,qDAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MAAMwF,EACF,CACIrF,OAAQ,QAGfK,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAEsB,GAArBA,EAAI,WACHsE,KAAUK,QACN,8BACI,yDAEJ,CACEH,SAAU,cAGhB,EAAK5D,MAAMmnB,oBAAoB,EAAG,GAAI,KAGtCzjB,KAAU9D,MACN,8BACI,yEAEJ,CACEgE,SAAU,sB,oBAYhC,WACI,OACI,wBACIlC,MAAe,CAACwmB,WAAW,OAAQC,WAAW,SAC9CltB,KAAc,SACdoG,GAAc,YACdX,QAAeO,KAAKgnB,mBACpBxkB,UAAc,oCALlB,SAMQ,mBAAGA,UAAU,0B,GAvEL5B,aCgabumB,G,kDA5ZX,aAAc,IAAD,8BACT,gBACKrtB,MAAO,CAERstB,SAA0B,GAC1BC,qBAA0B,EAC1BC,oBAA0B,EAC1BC,wBAA0B,EAC1BC,kBAA0B,EAC1BC,iBAA0B,EAC1BC,qBAA0B,EAC1BjG,YAA0B,GAC1BkG,WAA0B,GAC1BC,eAA0B,GAE1BC,cAA0B,cAE1B9B,gBAA0B,GAC1BE,YAA0B,GAG1B1U,YAA0B,GAC1B0I,aAA0B,EAC1B6N,YAA0B,GAC1BC,gBAA0B,IAO9B,EAAKC,WAAuB,EAAKA,WAAWrmB,KAAhB,iBAC5B,EAAKsmB,UAAuB,EAAKA,UAAUtmB,KAAf,iBAC5B,EAAKwkB,cAAuB,EAAKA,cAAcxkB,KAAnB,iBAC5B,EAAKumB,iBAAuB,EAAKA,iBAAiBvmB,KAAtB,iBAC5B,EAAKwmB,gBAAuB,EAAKA,gBAAgBxmB,KAArB,iBAC5B,EAAKykB,oBAAuB,EAAKA,oBAAoBzkB,KAAzB,iBAC5B,EAAKukB,oBAAuB,EAAKA,oBAAoBvkB,KAAzB,iBAE5B,EAAKkhB,uBAAyB,EAAKA,uBAAuBlhB,KAA5B,iBAC9B,EAAKymB,qBAAyB,EAAKA,qBAAqBzmB,KAA1B,iBAxCrB,E,oDA8Cb,WAAmB,IAAD,OAChBpE,MACIC,EAAW,wBACX,CACEE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIhDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAACwhB,YAAatjB,IAAM,WAChCS,QAAQC,IAAI,EAAK/E,MAAM2nB,aACvB,EAAKxhB,SAAS,CAACunB,kBAAkB,IAAM,kBAAI5oB,QAAQC,IAAI,EAAK/E,MAAM0tB,6B,6BAK1E,WAAkB,IAAD,OACbjqB,MACIC,EAAW,uBACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CAAC0nB,WAAYxpB,IAAM,WAC/BS,QAAQC,IAAI,EAAK/E,MAAM6tB,YACvB,EAAK1nB,SAAS,CAACwnB,iBAAiB,IAAM,kBAAI7oB,QAAQC,IAAI,EAAK/E,MAAM2tB,4B,iCAK3E,WAAsB,IAAD,OACjBlqB,MAAMC,EAAW,sBACb,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,IAGrBC,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACFS,QAAQC,IAAI,mBACZD,QAAQC,IAAIV,GACZ,EAAK8B,SAAS,CACV+lB,WAAkB7nB,EAAI,WACtBypB,eAAkBzpB,EAAI,mBAExB,WACES,QAAQC,IAAI,EAAK/E,MAAM8tB,gBACvB,EAAK3nB,SAAS,CACZynB,qBAAwB,EACxB3B,gBAAwB,EAAKjsB,MAAM8tB,eAAX,GACxB3B,YAAwB,EAAKnsB,MAAM8tB,eAAX,sB,+BAMtC,WACE5nB,KAAKkoB,mBACLloB,KAAKmoB,kBACLnoB,KAAKomB,sBACLpmB,KAAKkmB,oBAAoB,EAAG,GAAI,M,wBAGlC,WACElmB,KAAKC,SAAS,CACZqnB,oBAAoB,EACpBD,qBAAuBrnB,KAAKlG,MAAMutB,wB,uBAItC,WACErnB,KAAKC,SAAS,CACZonB,qBAAsB,EACtBC,oBAAsBtnB,KAAKlG,MAAMwtB,uB,2BAIrC,WACI1oB,QAAQC,IAAImB,KAAKlG,MAAMisB,iBACvBnnB,QAAQC,IAAImB,KAAKlG,MAAMmsB,aACvBrnB,QAAQC,IAAImB,KAAKlG,MAAMksB,YACvB,IAAIqC,EAAY9iB,SAASC,cAAc,cACnC8iB,EAAU,GAC0B,GAArCtoB,KAAKlG,MAAMytB,wBACVc,EAAU5iB,UAAUC,OAAO,cAC3B2iB,EAAU5iB,UAAUE,IAAI,eACxB2iB,EAAU,gBAEVD,EAAU5iB,UAAUC,OAAO,eAC3B2iB,EAAU5iB,UAAUE,IAAI,cACxB2iB,EAAU,kBAIdtoB,KAAKC,SAAS,CACZonB,qBAA4B,EAC5BC,oBAA4B,EAC5BC,wBAA6BvnB,KAAKlG,MAAMytB,uBACxCM,cAA4BS,M,iCAKlC,SAAoB5f,EAAQqR,EAASC,GAAmB,IAAD,OACnDzc,MACIC,EAAA,iCAAqCkL,EAArC,qBAAwDqR,EAAxD,+BAAsFC,GACtF,CACItc,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACF,EAAK8B,SAAS,CACVmnB,SAAkBjpB,EAClB8b,aAAkBvR,IACpB,WACE,EAAK8K,yB,oCAMjB,SAAuB5T,GAAG,IAAD,EACEA,EAAEE,OAAXI,GADO,EACdH,KADc,EACPG,OACdF,KAAKC,SAAS,CACV6nB,YAAc5nB,IAElBF,KAAKkmB,oBAAoBlmB,KAAKlG,MAAMmgB,aAAc/Z,EAAOF,KAAKlG,MAAMiuB,mB,kCAGxE,SAAqBnoB,GAAG,IAAD,EACIA,EAAEE,OAAXI,GADK,EACZH,KADY,EACLG,OACdF,KAAKC,SAAS,CACV8nB,gBAAkB7nB,IAEtBF,KAAKkmB,oBAAoBlmB,KAAKlG,MAAMmgB,aAAcja,KAAKlG,MAAMguB,YAAa5nB,K,4BAG9E,WACI,IAAIuM,EAAIzM,KAAKlG,MAAMstB,SAASnS,UACxB1I,EAAI,GACR,GAAGE,EAAE,CACD,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACrBtB,EAAEM,KAAKgB,GAEX7N,KAAKC,SAAS,CACVsR,YAAahF,O,oBAKzB,WAAS,IAAD,OACN,OACM,sBAAK/J,UAAU,MAAf,UACI,qBAAKA,UAAU,qCAAf,SACE,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,mCASE,wBAAQxI,KAAK,SAASoG,GAAI,YAAYX,QAAS,kBAAI,EAAK0mB,iBACpD3jB,UAAU,iDADd,SAEM,uBAAMpC,GAAG,aAAT,UAAuBJ,KAAKlG,MAAM+tB,cAAlC,gBAMlB7nB,KAAKlG,MAAMutB,qBAA2BrnB,KAAKlG,MAAM0tB,kBAAuB,cAAC,GAAD,CAAe/F,YAAazhB,KAAKlG,MAAM2nB,cAC/GzhB,KAAKlG,MAAMwtB,oBAA2BtnB,KAAKlG,MAAM2tB,iBAAuB,cAAC,GAAD,CAAeE,WAAY3nB,KAAKlG,MAAM6tB,aAC9G3nB,KAAKlG,MAAMytB,wBACX,cAAC,GAAD,CACIxB,gBAAuB/lB,KAAKlG,MAAMisB,gBAClCE,YAAuBjmB,KAAKlG,MAAMmsB,YAClCD,WAAuBhmB,KAAKlG,MAAMksB,WAClCG,cAAuBnmB,KAAKmmB,cAC5BD,oBAAuBlmB,KAAKkmB,oBAC5BE,oBAAuBpmB,KAAKomB,sBAKlC,qBAAK5jB,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,oBAEA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,4CACA,uBACExI,KAAc,OACdwI,UAAc,+BACdzC,KAAc,oBACdK,GAAc,oBACdF,MAAeF,KAAKlG,MAAMguB,YAC1BxnB,SAAYN,KAAK6iB,4BAWvB,sBAAKrgB,UAAU,QAAf,UACI,0DACA,uBACExI,KAAc,OACdwI,UAAc,+BACdzC,KAAc,8BACdO,SAAeN,KAAKooB,qBACpBloB,MAAeF,KAAKlG,MAAMiuB,gBAC1B3nB,GAAG,mCAET,sBAAKoC,UAAU,QAAf,UACI,sDACA,uBACExI,KAAK,OACLwI,UAAU,+BACVzC,KAAK,iCACLK,GAAG,iCAAiCmoB,aAAa,kBAOvE,qBAAK/lB,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,0BACA,uBAAOpC,GAAG,YAAYoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAApE,SACI,kCACI,+BACI,mCACA,kDACA,yCACA,kDACA,2CACA,wCACA,0CACA,uCACA,oBAAIwnB,QAAQ,IAAZ,yBAGExoB,KAAKlG,MAAMstB,SAASjpB,KACnB6B,KAAKlG,MAAMstB,SAASjpB,KAAKwO,KAAI,SAACC,EAAM0N,GACjC,OACI,+BACI,6BAAKA,IACL,6BAAK1N,EAAK6b,cACV,6BAAK7b,EAAK8b,iBACV,+BACK9b,EAAK+b,uBAAuB,uBAEH,GAAtB/b,EAAKgc,cACJ,qBAAKnoB,MAAO,CAACK,MAAM,QAAnB,qBACA,qBAAKL,MAAO,CAACK,MAAM,SAAnB,yBAGT,6BAAK8L,EAAKic,eACV,6BAAKjc,EAAKkc,oBACV,6BAAKlc,EAAKmc,iBACV,6BAAKnc,EAAKoc,cAEV,+BAEkC,GAA1Bpc,EAAKkc,kBACJ,wBACG9uB,KAAK,SACLwI,UAAU,sDAFb,6BAMA,cAAC,GAAD,CAEGskB,QAAuBla,EAAK2Z,SAC5BL,oBAAuB,EAAKA,qBAFLtZ,EAAK2Z,UAMpC,mBAEI/lB,KAAMhD,EAAW,eAAeoP,EAAK2Z,SACrCzmB,OAAO,SACP0C,UAAU,yCACVxI,KAAK,SALT,SAMQ,mBAAGwI,UAAU,kBAGrB,cAAC,GAAD,CAEIskB,QAAuBla,EAAK2Z,SAC5BL,oBAAuB,EAAKA,qBAFLtZ,EAAK2Z,eA3C/B3Z,EAAK2Z,aAoDpB,UAKhB,qBAAK/jB,UAAU,YAAf,SACE,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKlG,MAAMyX,YACVvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBACIpK,UAAU,kCACVxI,KAAK,SACLyF,QAAS,kBAAI,EAAKymB,oBAAoBtZ,EAAM,EAAK9S,MAAMguB,YAAa,EAAKhuB,MAAMiuB,kBAHnF,SAGsGnb,GAHzFA,MAOnB,yB,GA/YtBhM,aC+PLqoB,G,kDAnQX,aAAc,IAAD,8BACT,gBACKnvB,MAAO,CACRovB,mBAAqB,GAErB3X,YAAqB,GACrB0I,aAAqB,EACrBkP,YAAqB,GACrBC,mBAAqB,GACrBC,SAAqB,GACrBC,SAAqB,IAKzB,EAAKC,sBAAyB,EAAKA,sBAAsB5nB,KAA3B,iBAC9B,EAAK6nB,qBAAyB,EAAKA,qBAAqB7nB,KAA1B,iBAC9B,EAAKymB,qBAAyB,EAAKA,qBAAqBzmB,KAA1B,iBAC9B,EAAK8nB,iBAAyB,EAAKA,iBAAiB9nB,KAAtB,iBAC9B,EAAK+nB,iBAAyB,EAAKA,iBAAiB/nB,KAAtB,iBAnBrB,E,yDAuBb,SAAsBgoB,EAAWC,EAAY5P,EAAmB6P,EAASC,GAAS,IAAD,OAC7EvsB,MACIC,EAAA,4CAAgDmsB,EAAhD,wBAAyEC,EAAzE,+BAA0G5P,EAA1G,oBAAuI6P,EAAvI,oBAA0JC,GAC1J,CACIpsB,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI9CuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAGdH,MAAK,SAAAI,GACF,EAAKrE,MAAMovB,mBAAqB/qB,EAChC,EAAK8B,SAAS,CACVipB,mBAAsB,EAAKpvB,MAAMovB,mBACjCjP,aAAsB0P,IACxB,WACA,EAAKnW,yB,+BAOnB,WACIxT,KAAKupB,sBAAsB,EAAG,GAAI,GAAI,GAAI,M,4BAG9C,WACI,IAAI9c,EAAIzM,KAAKlG,MAAMovB,mBAAmBjU,UAClC1I,EAAI,GACR,GAAGE,EAAE,CACD,IAAI,IAAIoB,EAAI,EAAIA,GAAKpB,EAAIoB,IACrBtB,EAAEM,KAAKgB,GAEX7N,KAAKC,SAAS,CACVsR,YAAahF,O,kCAKzB,SAAqB3M,GAAG,IAAD,EACIA,EAAEE,OAAXI,GADK,EACZH,KADY,EACLG,OACdF,KAAKC,SAAS,CACVkpB,YAAcjpB,IAElBF,KAAKupB,sBACDvpB,KAAKlG,MAAMmgB,aACX/Z,EACAF,KAAKlG,MAAMsvB,mBACXppB,KAAKlG,MAAMuvB,SACXrpB,KAAKlG,MAAMwvB,Y,kCAKnB,SAAqB1pB,GAAG,IAAD,EACIA,EAAEE,OAAXI,GADK,EACZH,KADY,EACLG,OACdF,KAAKC,SAAS,CACVmpB,mBAAqBlpB,IAEzBF,KAAKupB,sBACDvpB,KAAKlG,MAAMmgB,aACXja,KAAKlG,MAAMqvB,YACXjpB,EACAF,KAAKlG,MAAMuvB,SACXrpB,KAAKlG,MAAMwvB,Y,8BAKnB,SAAiB1pB,GAAG,IAAD,EACQA,EAAEE,OAAXI,GADC,EACRH,KADQ,EACDG,OACdF,KAAKC,SAAS,CACVopB,SAAWnpB,IAEfF,KAAKupB,sBACDvpB,KAAKlG,MAAMmgB,aACXja,KAAKlG,MAAMqvB,YACXnpB,KAAKlG,MAAMsvB,mBACXlpB,EACAF,KAAKlG,MAAMwvB,Y,8BAKnB,SAAiB1pB,GAAG,IAAD,EACQA,EAAEE,OAAXI,GADC,EACRH,KADQ,EACDG,OACdF,KAAKC,SAAS,CACVqpB,SAAWppB,IAEfF,KAAKupB,sBACDvpB,KAAKlG,MAAMmgB,aACXja,KAAKlG,MAAMqvB,YACXnpB,KAAKlG,MAAMsvB,mBACXppB,KAAKlG,MAAMuvB,SACXnpB,K,oBAKR,WAAS,IAAD,OACJ,OACI,sBAAKsC,UAAU,MAAf,UACI,qBAAKA,UAAU,qCAAf,SACE,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,oBAEA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,oDACA,uBACExI,KAAc,OACdwI,UAAc,+BACdtC,MAAeF,KAAKlG,MAAMqvB,YAC1B7oB,SAAeN,KAAKwpB,0BAG1B,sBAAKhnB,UAAU,QAAf,UACI,0DACA,uBACExI,KAAc,OACdwI,UAAc,+BACdtC,MAAeF,KAAKlG,MAAMsvB,mBAC1B9oB,SAAeN,KAAKooB,0BAG1B,sBAAK5lB,UAAU,QAAf,UACI,uDACA,uBACExI,KAAK,OACLwI,UAAU,+BACVtC,MAAgBF,KAAKlG,MAAMuvB,SAC3B/oB,SAAgBN,KAAKypB,sBAG3B,sBAAKjnB,UAAU,QAAf,UACI,uDACA,uBACExI,KAAgB,OAChBwI,UAAgB,+BAChBtC,MAAgBF,KAAKlG,MAAMwvB,SAC3BhpB,SAAgBN,KAAK0pB,gCAQ3C,qBAAKlnB,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,6BACA,uBAAOpC,GAAG,YAAYoC,UAAU,sBAAsB/B,MAAO,CAACO,MAAM,QAApE,SACI,kCACI,+BACI,0CACA,kDACA,kDACA,6CACA,iDACA,iDACA,wCACA,0CACA,2CACA,0CACA,0CAGEhB,KAAKlG,MAAMovB,mBAAmB/qB,KAC7B6B,KAAKlG,MAAMovB,mBAAmB/qB,KAAKwO,KAAI,SAACC,EAAM0N,GAC3C,OACI,+BACI,6BAAK1N,EAAKmd,iBACV,6BAAKnd,EAAK6b,cACV,6BAAK7b,EAAK+b,yBACV,6BAAK/b,EAAKic,eACV,6BAAKjc,EAAKqB,iBACV,6BAAKrB,EAAKpD,iBACV,6BAAKoD,EAAKnD,iBACV,6BAAKmD,EAAKod,uBACV,6BAAKpd,EAAKqd,wBACV,6BAAKrd,EAAKsd,uBACV,6BAAKtd,EAAKud,sBAXLvd,EAAKwd,mBAiBpB,UAKhB,qBAAK5nB,UAAU,YAAf,SACE,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKlG,MAAMyX,YACVvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBACIpK,UAAU,kCACVxI,KAAK,SACLyF,QAAS,kBAAI,EAAK8pB,sBACd3c,EACA,EAAK9S,MAAMqvB,YACX,EAAKrvB,MAAMsvB,mBACX,EAAKtvB,MAAMuvB,SACX,EAAKvvB,MAAMwvB,WARnB,SASY1c,GATCA,MAanB,yB,GArPXhM,aC2UhBypB,G,kDA3UX,aAAc,IAAD,8BACT,gBACKvwB,MAAO,CAERmhB,wBAA8B,GAC9BD,oBAA8B,EAC9BE,wBAA8B,GAC9BC,uBAA8B,EAC9BC,wBAA8B,EAE9BkP,SAA8B,GAC9BC,UAA8B,GAC9BC,mBAA8B,GAC9BC,oBAA8B,GAC9BC,mBAA8B,IAMlC,EAAKnP,gBAAyB,EAAKA,gBAAgB5Z,KAArB,iBAC9B,EAAK6Z,oBAAyB,EAAKA,oBAAoB7Z,KAAzB,iBAE9B,EAAKgpB,4BAAiC,EAAKA,4BAA4BhpB,KAAjC,iBACtC,EAAKipB,6BAAiC,EAAKA,6BAA6BjpB,KAAlC,iBACtC,EAAKkpB,UAAiC,EAAKA,UAAUlpB,KAAf,iBACtC,EAAKmpB,wBAAiC,EAAKA,wBAAwBnpB,KAA7B,iBA1B7B,E,qDA+Bb,WACI3B,KAAKC,SAAS,CACVqqB,SAActqB,KAAKjB,MAAMgsB,kBAAkB,GAA7B,GACdR,UAAcvqB,KAAKjB,MAAMgd,WAAW,GAAtB,O,6BAItB,SAAgBnc,GACf,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVgb,wBAA0B/a,IAEhB,UAAVN,EAAE4O,KACFxO,KAAKwb,oBAAoBtb,K,yCAKjC,SAA4BN,GAC3B,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVuqB,mBAAqBtqB,M,iCAI7B,SAAoB0W,GAAQ,IAAD,OACvBnU,KAAUC,QACN,8BACI,qDAEJ,CACIC,SAAU,cAGhB5E,MAAK,WACHR,MAAMC,EAAA,mBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBoQ,eAAkB2I,IAEtB9Y,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GACF,GAAuB,GAApBA,EAAI,SAAqB,CAExB,IAAI+P,EAAW/P,EAAI,SACnB,EAAK8B,SAAS,CACV+a,oBAA0B9M,EAAQ,GAClCgN,wBAA0BhN,EAAQ,OAClCiN,uBAA0BjN,EAAQ,SAClCkN,wBAA0BlN,EAAQ,SAGtCzL,KAAUK,QACN,gCACI,kEACA,4BAAIoL,EAAQ,YAEhB,CACEvL,SAAU,mBAMhBF,KAAU9D,MACN,8BACI,uEAEJ,CACEgE,SAAU,sB,0CAUhC,SAA6B/C,GAAG,IAAD,EACJA,EAAEE,OAAXI,GADa,EACpBH,KADoB,EACbG,OAEdF,KAAKC,SAAS,CACVwqB,oBAAuBvqB,M,qCAI/B,WAA0B,IAAD,OACrBF,KAAKjB,MAAMisB,oCAEXvoB,KAAUC,QACN,8BACI,0DAEJ,CACIC,SAAU,cAGhB5E,MAAK,WACHR,MAAMC,EAAA,gCACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,SAA0B,EAAK/D,MAAMwwB,SACrC,UAA0B,EAAKxwB,MAAMywB,UACrC,WAA0B,EAAKzwB,MAAMkhB,oBACrC,eAA0B,EAAKlhB,MAAMmhB,wBACrC,SAA0B,EAAKnhB,MAAM0wB,mBACrC,OAA0B,EAAK1wB,MAAM2wB,oBACrC,iBAA0B,EAAK3wB,MAAMqhB,uBACrC,mBAA0B,EAAKrhB,MAAMqhB,uBAAyB,EAAKrhB,MAAM0wB,qBAE7E1sB,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GACsB,GAArBA,EAAI,WAEH,EAAKY,MAAMksB,yBACX,EAAKlsB,MAAMmsB,kBAEXzoB,KAAUK,QACN,8BACI,mCAAM3E,EAAI,QAAV,WAEJ,CACEwE,SAAU,eAMhBF,KAAU9D,MACN,8BACI,6BAAKR,EAAI,YAEb,CACEwE,SAAU,sB,uBAUhC,SAAW/C,GAAG,IAAD,EACcA,EAAEE,OAAlBC,EADE,EACFA,KAAOG,EADL,EACKA,MACdF,KAAKC,SAAL,eACKF,EAAQG,M,oBAKjB,WAAU,IAAD,OACL,OACI,qBAAKsC,UAAU,oBAAf,SACG,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACK,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,2CACA,qBAAKA,UAAU,cAAf,SACO,wBACCA,UAAc,eACdzC,KAAc,WACdO,SAAeN,KAAK6qB,UAHrB,SAMQ7qB,KAAKjB,MAAMgsB,kBACV/qB,KAAKjB,MAAMgsB,kBAAkBpe,KAAI,SAAAsC,GAC9B,OACI,wBAA2B/O,MAAO+O,EAAQ7O,GAA1C,SAAiD6O,EAAQnC,QAA1CmC,EAAQ7O,OAG9B,YAKpB,sBAAKoC,UAAU,QAAf,UACI,4CACA,qBAAKA,UAAU,cAAf,SACI,wBACIA,UAAc,eACdzC,KAAc,YACdO,SAAeN,KAAK6qB,UAHxB,SAMQ7qB,KAAKjB,MAAMgd,WACV/b,KAAKjB,MAAMgd,WAAWpP,KAAI,SAAAsC,GACvB,OACI,wBAA2B/O,MAAO+O,EAAQ7O,GAA1C,SAAiD6O,EAAQnC,QAA1CmC,EAAQ7O,OAG9B,eAQrB,qBAAKoC,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,2CACA,uBACIxI,KAAc,OACdwI,UAAc,eACdzC,KAAc,0BACdK,GAAc,0BACdE,SAAeN,KAAKub,gBACpBjT,UAAetI,KAAKub,gBACpBjY,WAAS,EACTpD,MAAeF,KAAKlG,MAAMmhB,6BAGlC,sBAAKzY,UAAU,QAAf,UACI,6CACA,uBACIxI,KAAc,OACdwI,UAAc,eACdlC,SAAeN,KAAK2qB,4BACpBzqB,MAAeF,KAAKlG,MAAM0wB,6BAO1C,qBAAKhoB,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wDACA,qBAAIA,UAAU,aAAd,cAA6BxC,KAAKlG,MAAMohB,wBAAxC,UAEJ,sBAAK1Y,UAAU,QAAf,UACI,0CACA,qBAAIA,UAAU,aAAd,UACKxC,KAAKlG,MAAMqhB,uBADhB,MAC2Cnb,KAAKlG,MAAM0wB,mBADtD,MAC6ExqB,KAAKlG,MAAMqhB,uBAAyBnb,KAAKlG,MAAM0wB,yBAGhI,sBAAKhoB,UAAU,QAAf,UACI,2CACA,qBAAIA,UAAU,aAAd,gBAA+BxC,KAAKlG,MAAMshB,wBAA1C,eAIZ,qBAAK5Y,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,sDACA,0BACIA,UAAc,eACde,KAAc,IACdlD,YAAc,SACdC,SAAeN,KAAK4qB,6BACpB1qB,MAAeF,KAAKlG,MAAM2wB,gCAQ9C,qBAAKjoB,UAAU,mBAAf,SACI,wBACAxI,KAAK,SACLwI,UAAU,wDACV/C,QAAS,kBAAM,EAAKqrB,2BAHpB,qC,GA9TalqB,aCiN1BuqB,G,kDA5MX,aAAc,IAAD,8BACT,gBACKrxB,MAAO,CACRsxB,gBAAkB,GAGtB,EAAKvQ,+BAAiC,EAAKA,+BAA+BlZ,KAApC,iBACtC,EAAK0pB,2BAAiC,EAAKA,2BAA2B1pB,KAAhC,iBAP7B,E,kEAWb,SAA+BypB,GAC3BprB,KAAKC,SAAS,CACVmrB,gBAAkBA,IAGtB/oB,wBAAa,CACT8X,MAAO,yBACPtU,QAAS,gDACTuU,QAAS,CACP,CACEC,MAAO,WACP5a,QAASO,KAAKqrB,4BAEhB,CACEhR,MAAO,WACP5a,QAASb,QAAQC,IAAI,U,wCAMjC,WAA6B,IAAD,OACxBD,QAAQC,IAAImB,KAAKlG,MAAMsxB,iBACvB,IAAIroB,EAAMvF,EAAA,mCACViF,KAAUC,QACN,8BACI,4DAEJ,CACIC,SAAU,cAIjB5E,MAAK,WACFR,MAAMwF,EACF,CACIrF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,gBAAsB,EAAK/D,MAAMsxB,kBAGrCttB,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAEsB,GAArBA,EAAI,WAEHsE,KAAUK,QACN,8BACI,6BAAK3E,EAAI,YAEb,CACEwE,SAAU,cAIhB,EAAK5D,MAAMusB,oBAAoB,EAAG,GAAI,KAGtC7oB,KAAU9D,MACN,8BACI,6BAAKR,EAAI,YAEb,CACEwE,SAAU,sB,oBAWhC,WAAS,IAAD,OACJ,OAMQ,aALJ,CAKI,OAAKH,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,yCACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,qCAAqCpC,GAAG,eAAzD,UACI,gCACI,+BACI,wCACA,yCACA,iDACA,0CACA,0CACA,+CAGR,gCAEQJ,KAAKjB,MAAMwsB,kBACVvrB,KAAKjB,MAAMwsB,kBAAkB5e,KAAI,SAACxO,EAAMmc,GACrC,OACI,+BACI,6BACKnc,EAAKqtB,sBAEV,6BACKrtB,EAAKstB,uBAEV,6BACKttB,EAAK8P,iBAEV,6BACK9P,EAAKqL,iBAEV,6BACKrL,EAAKutB,sBAGV,6BACI,qBAAKlpB,UAAU,eAAf,SAQI,wBACIxI,KAAc,SACdoG,GAAc,6BACdX,QACI,kBAAM,EAAKob,+BAA+B1c,EAAKitB,kBAGnD5oB,UAAc,sDAPlB,SAQQ,mBAAGA,UAAU,2BAlCxBrE,EAAKitB,oBA0CrB,YAKjB,uBACA,qBAAK5oB,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKjB,MAAMwS,YACVvR,KAAKjB,MAAMwS,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBAEIpK,UAAc,2BACdxI,KAAc,SACdyF,QAAe,kBAAI,EAAKV,MAAMusB,oBAAoB1e,EAAM,GAAI,KAJhE,SAKSA,GAJUA,MAQzB,2B,GA7LtBhM,aCwDjB+qB,G,kDA1DX,aAAc,IAAD,8BACT,gBACK7xB,MAAO,GAFH,E,qDAUb,c,oBAIA,WACI,OACI,qBAAK0I,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,kDACA,uBACIxI,KAAK,OACLwI,UAAU,oCAGlB,sBAAKA,UAAU,QAAf,UACI,iDACA,uBACIxI,KAAK,OACLwI,UAAU,oCAGlB,sBAAKA,UAAU,QAAf,UACI,gDACA,uBACIxI,KAAK,OACLwI,UAAU,oCAGlB,sBAAKA,UAAU,QAAf,UACI,kDACA,uBACIxI,KAAK,OACLwI,UAAU,kD,GAhDH5B,aCyL5BgrB,G,kDAnLX,aAAc,IAAD,8BACT,gBACK9xB,MAAO,CACRkxB,mCAAsC,EACtCD,kBAAsC,GACtChP,WAAsC,GAGtCwP,kBAAqB,GACrBtR,aAAqB,GACrB1I,YAAqB,IAIzB,EAAKyZ,kCAAoC,EAAKA,kCAAkCrpB,KAAvC,iBAEzC,EAAKspB,uBAAyB,EAAKA,uBAAuBtpB,KAA5B,iBAC9B,EAAKupB,gBAAyB,EAAKA,gBAAgBvpB,KAArB,iBAC9B,EAAK2pB,oBAAyB,EAAKA,oBAAoB3pB,KAAzB,iBAlBrB,E,qEAqBb,WACI3B,KAAKC,SAAS,CACV+qB,mCAAqChrB,KAAKlG,MAAMkxB,sC,+BAIxD,WACIhrB,KAAKirB,yBACLjrB,KAAKkrB,kBACLlrB,KAAKsrB,oBAAoB,EAAG,GAAI,M,oCAGpC,WACC,IAAD,OACI/tB,MACIC,EAAW,gCACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI1CuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACI,EAAK8B,SAAS,CACV8qB,kBAAmB5sB,EAAK4d,kB,6BAShD,WACC,IAAD,OACIxe,MACIC,EAAW,wBACX,CACIE,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAI1CuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACI,EAAK8B,SAAS,CACV8b,WAAY5d,EAAK4d,kB,iCAOzC,SAAoBrT,EAAQqR,EAASC,GAAmB,IAAD,OAC/CjX,EAAMvF,EAAA,yDAA6DkL,EAA7D,gBACVnL,MACIwF,EACA,CACIrF,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GAEI,EAAK8B,SAAS,CACVsrB,kBAAsBptB,EAAI,kBAAsBA,KAChD8b,aAAsBvR,IACxB,WAEE,EAAKzI,SAAS,CACVsR,YAAciC,GAAerV,EAAI,kBAAsB8W,qB,oBAS3E,WAAS,IAAD,OACJ,OACI,sBAAKzS,UAAU,MAAf,UACG,qBAAKA,UAAU,qCAAf,SACK,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,eAAf,SACI,wBACIxI,KAAK,SACLwI,UAAU,2CACV/C,QAAS,kBAAI,EAAKurB,qCAHtB,6CAUhB,cAAC,GAAD,IAIA,cAAC,GAAD,CACIM,oBAAuBtrB,KAAKsrB,oBAC5BC,kBAAuBvrB,KAAKlG,MAAMyxB,kBAClCha,YAAuBvR,KAAKlG,MAAMyX,cAItC,eAAC3K,GAAA,EAAD,CACIC,KAAK,KACLC,KAAW9G,KAAKlG,MAAMkxB,kCACtBjkB,OAAW,kBAAM,EAAKikB,qCAH1B,UAKI,cAACpkB,GAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACP,GAAA,EAAMQ,MAAP,CAAahH,GAAG,qCAAhB,sCAIJ,cAACwG,GAAA,EAAMS,KAAP,UACI,cAAC,GAAD,CACI2jB,kCAAqChrB,KAAKgrB,kCAE1CC,uBAA2BjrB,KAAKirB,uBAChCC,gBAA2BlrB,KAAKkrB,gBAEhCH,kBAAuB/qB,KAAKlG,MAAMixB,kBAClChP,WAAuB/b,KAAKlG,MAAMiiB,yB,GAzK5Bnb,aC+CnBirB,G,kDAjDX,aAAc,IAAD,8BACT,gBACK/xB,MAAO,GAFH,E,0CAQb,WACI,OACI,+BACI,6BACI,wBACI0I,UAAU,qCACVxI,KAAK,SAFT,SAGQ,mBAAGwI,UAAU,oBAGzB,6BAAKxC,KAAKjB,MAAM+sB,kBAChB,6BAAK9rB,KAAKjB,MAAMgtB,gBAChB,6BAAK/rB,KAAKjB,MAAMitB,kBAChB,6BAAKhsB,KAAKjB,MAAMktB,kBAChB,6BAAKjsB,KAAKjB,MAAMmtB,oBAChB,6BAAKlsB,KAAKjB,MAAMitB,kBAChB,6BAAMhsB,KAAKjB,MAAMotB,yBACjB,6BAAMnsB,KAAKjB,MAAMqtB,yBACjB,6BAAKpsB,KAAKjB,MAAMstB,uBAChB,6BAAKrsB,KAAKjB,MAAMutB,sBAChB,6BAAKtsB,KAAKjB,MAAMwtB,+BAChB,6BAAKvsB,KAAKjB,MAAMytB,8BAChB,6BAAKxsB,KAAKjB,MAAM0tB,gCAChB,6BAAKzsB,KAAKjB,MAAM2tB,+BAChB,6BAAK1sB,KAAKjB,MAAM4tB,kCAChB,6BAAK3sB,KAAKjB,MAAM6tB,iCAChB,6BAAK5sB,KAAKjB,MAAM8tB,wBAChB,6BAAK7sB,KAAKjB,MAAM+tB,uBAChB,6BAAK9sB,KAAKjB,MAAMguB,0BAChB,6BAAK/sB,KAAKjB,MAAMiuB,yBAChB,6BAAKhtB,KAAKjB,MAAMkuB,wBAChB,6BAAKjtB,KAAKjB,MAAMmuB,uBAChB,6BAAKltB,KAAKjB,MAAMouB,uBAChB,6BAAKntB,KAAKjB,MAAMquB,iCAChB,6BAAKptB,KAAKjB,MAAMsuB,iCAChB,6BAAKrtB,KAAKjB,MAAMuuB,sC,GA7CG1sB,aCsKpB2sB,G,kDAlKX,aAAc,IAAD,8BACT,gBACKzzB,MAAO,CACR0zB,aAAkB,GAElBjc,YAAkB,IAItB,EAAKkc,iBAAoB,EAAKA,iBAAiB9rB,KAAtB,iBAThB,E,qDAYb,WACI3B,KAAKytB,iBAAiB,EAAG,GAAI,M,8BAGjC,SAAiB/kB,EAAQqR,EAASC,GAAmB,IAAD,OAC5CjX,EAAMvF,EAAA,2CAA+CkL,EAA/C,qBAAkEqR,EAAlE,+BAAgGC,GAC1Gzc,MACIwF,EACA,CACIrF,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GAEI,EAAK8B,SAAS,CACVutB,aAAkBrvB,EAAI,aAAiBA,KACvC8b,aAAkBvR,IACpB,WAEE,EAAKzI,SAAS,CACVsR,YAAciC,GAAerV,EAAI,aAAiB8W,qB,oBAWtE,WAAS,IAAD,OACJ,OACI,gCACI,oBAAIzS,UAAU,aAAd,yCACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,qCAAqCpC,GAAG,eAAzD,UACI,gCACI,+BACI,0CACA,0CACA,yCACA,wCACA,wCACA,gDACA,8CACA,+CACA,+CACA,6CACA,4CACA,gDACA,8CACA,iDACA,+CACA,kDACA,iDACA,8CACA,6CACA,gDACA,+CACA,8CACA,8CACA,sDACA,wDACA,yDACA,4DAIR,gCAEQJ,KAAKlG,MAAM0zB,aACVxtB,KAAKlG,MAAM0zB,aAAa7gB,KAAI,SAACxO,EAAMmc,GAAY,IAAD,EAC3C,OACQ,cAAC,IAAD,GAEIyR,cAAqC5tB,EAAK4tB,cAC1CD,gBAAqC3tB,EAAK2tB,gBAC1CE,gBAAqC7tB,EAAK6tB,gBAC1CC,gBAAqC9tB,EAAK8tB,gBAC1CC,kBAAqC/tB,EAAK+tB,mBAN9C,gCAOyC/tB,EAAK6tB,iBAP9C,wCAQwE,EAA9B7tB,EAAKguB,wBAA4BxG,QAAQ,IARnF,wCASwE,EAA9BxnB,EAAKiuB,wBAA4BzG,QAAQ,IATnF,sCAUsE,EAA5BxnB,EAAKkuB,sBAA0B1G,QAAQ,IAVjF,qCAWqE,EAA3BxnB,EAAKmuB,qBAAyB3G,QAAQ,IAXhF,6CAYyCxnB,EAAKouB,8BAZ9C,6CAa6E,EAAnCpuB,EAAKquB,6BAAiC7G,QAAQ,IAbxF,8CAcyCxnB,EAAKsuB,+BAd9C,8CAe8E,EAApCtuB,EAAKuuB,8BAAkC/G,QAAQ,IAfzF,gDAgByCxnB,EAAKwuB,iCAhB9C,gDAiBgF,EAAtCxuB,EAAKyuB,gCAAoCjH,QAAQ,IAjB3F,sCAkByCxnB,EAAK0uB,uBAlB9C,sCAmBsE,EAA5B1uB,EAAK2uB,sBAA0BnH,QAAQ,IAnBjF,wCAoByCxnB,EAAK4uB,yBApB9C,wCAqBwE,EAA9B5uB,EAAK6uB,wBAA4BrH,QAAQ,IArBnF,sCAsByCxnB,EAAK8uB,uBAtB9C,sCAuBsE,EAA5B9uB,EAAK+uB,sBAA0BvH,QAAQ,IAvBjF,qCAwByCxnB,EAAKgvB,sBAxB9C,+CAyByChvB,EAAKivB,gCAzB9C,+CA0ByCjvB,EAAKkvB,gCA1B9C,6CA2ByClvB,EAAKmvB,8BA3B9C,GACyCnvB,EAAKyE,gBA+BzD,YAKjB,uBACA,qBAAKJ,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKlG,MAAMyX,YACVvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBAEIpK,UAAc,kCACdxI,KAAc,SACdyF,QAAe,kBAAI,EAAKguB,iBAAiB7gB,EAAM,GAAI,KAJvD,SAI6DA,GAH1CA,MAOzB,uB,GAxJbhM,aC4Bd8sB,G,kDA7BX,aAAc,IAAD,8BACT,gBACK5zB,MAAO,GAFH,E,0CAWb,WACI,OACI,qBAAK0I,UAAU,MAAf,SACG,qBAAKA,UAAU,qCAAf,SACK,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,GAAD,gB,GAlBC5B,aC0Hd+sB,G,kDAvHX,aAAc,IAAD,8BACT,gBACK7zB,MAAO,CACR8zB,UAAe,GACfrc,YAAe,IAGnB,EAAKsc,YAAe,EAAKA,YAAYlsB,KAAjB,iBAPX,E,qDAUb,WACI3B,KAAK6tB,YAAY,EAAG,GAAI,M,yBAG5B,SAAYnlB,EAAQqR,EAASC,GAAmB,IAAD,OACvCjX,EAAMvF,EAAA,sCAA0CkL,GACpDnL,MACIwF,EACA,CACIrF,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACIS,QAAQC,IAAI,4BACZD,QAAQC,IAAIV,GACZS,QAAQC,IAAI,4BACZ,EAAKoB,SAAS,CACV2tB,UAAezvB,EAAI,UAAcA,KACjC8b,aAAevR,IACjB,WAEE,EAAKzI,SAAS,CACVsR,YAAciC,GAAerV,EAAI,UAAc8W,qB,oBAOnE,WAAS,IAAD,OACJ,OACI,qBAAKzS,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,iCACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,qCAAqCpC,GAAG,eAAzD,UACI,gCACI,+BACI,0CACA,mDACA,iDACA,kDACA,uCACA,6CAGR,gCAEQJ,KAAKlG,MAAM8zB,UACV5tB,KAAKlG,MAAM8zB,UAAUjhB,KAAI,SAACxO,EAAMmc,GAC7B,OACI,+BACI,6BAAKnc,EAAK4rB,iBACV,6BAAK5rB,EAAK8tB,kBACV,6BAAK9tB,EAAK2vB,aACV,6BAAK3vB,EAAK4vB,cACV,6BAAK5vB,EAAK6vB,QACV,6BAAK7vB,EAAK8vB,gBANL9vB,EAAK+vB,YAUrB,YAKjB,uBACA,qBAAK1rB,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKlG,MAAMyX,YACVvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBAEIpK,UAAc,2BACdxI,KAAc,SACdyF,QAAe,kBAAI,EAAKouB,YAAYjhB,EAAM,GAAI,KAJlD,SAIwDA,GAHrCA,MAOzB,2B,GA1G1BhM,aCuBTutB,G,kDAvBX,aAAc,IAAD,8BACT,gBACKr0B,MAAO,GAFH,E,0CAWb,WACI,OACI,qBAAK0I,UAAU,MAAf,SACI,cAAC,GAAD,U,GAfS5B,aCuHVwtB,G,kDApHX,aAAc,IAAD,8BACT,gBACKt0B,MAAO,CACRu0B,YAAe,GACf9c,YAAe,IAGnB,EAAK+c,cAAiB,EAAKA,cAAc3sB,KAAnB,iBAPb,E,qDAUb,WACI3B,KAAKsuB,cAAc,EAAG,GAAI,M,2BAG9B,SAAc5lB,EAAQqR,EAASC,GAAmB,IAAD,OACzCjX,EAAMvF,EAAA,0CAA8CkL,GACxDnL,MACIwF,EACA,CACIrF,OAAQ,MACRI,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MACG,SAAAC,GAAG,OAAIA,EAAIE,UAEdH,MACG,SAAAI,GACI,EAAK8B,SAAS,CACVouB,YAAiBlwB,EAAI,YAAgBA,KACrC8b,aAAevR,IACjB,WAEE,EAAKzI,SAAS,CACVsR,YAAciC,GAAerV,EAAI,YAAgB8W,qB,oBAOrE,WAAS,IAAD,OACJ,OACI,qBAAKzS,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,mCACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,qCAAqCpC,GAAG,eAAzD,UACI,gCACI,+BACI,0CACA,mDACA,mDACA,oDACA,yCACA,6CAGR,gCAEQJ,KAAKlG,MAAMu0B,YACVruB,KAAKlG,MAAMu0B,YAAY1hB,KAAI,SAACxO,EAAMmc,GAC/B,OACI,+BACI,mCAAOnc,EAAK4rB,kBACZ,mCAAO5rB,EAAK8tB,mBACZ,mCAAO9tB,EAAKowB,gBACZ,mCAAOpwB,EAAKqwB,iBACZ,mCAAOrwB,EAAKswB,WACZ,mCAAOtwB,EAAKuwB,mBANLvwB,EAAKwwB,cAUvB,YAKjB,uBACA,qBAAKnsB,UAAU,YAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,QAAf,SAEQxC,KAAKlG,MAAMyX,YACVvR,KAAKlG,MAAMyX,YAAY5E,KAAI,SAAAC,GACxB,OACI,wBAEIpK,UAAc,2BACdxI,KAAc,SACdyF,QAAe,kBAAI,EAAK6uB,cAAc1hB,EAAM,GAAI,KAJpD,SAI0DA,GAHvCA,MAOzB,2B,GAvGxBhM,aCuBXutB,G,kDAvBX,aAAc,IAAD,8BACT,gBACKr0B,MAAO,GAFH,E,0CAWb,WACI,OACI,qBAAK0I,UAAU,MAAf,SACI,cAAC,GAAD,U,GAfS5B,aCuKVguB,G,kDAtKX,aAAc,IAAD,8BACT,gBACK90B,MAAO,CAGRihB,0BAA8B,EAE9BC,oBAA8B,EAC9BC,wBAA8B,GAC9BC,wBAA8B,GAC9BC,uBAA8B,EAC9BC,wBAA8B,EAC9BC,eAA8B,GAC9BC,kBAA8B,GAG9BjX,aAAkB,EAClBC,aAAkB,GAClBC,WAAkB,uBAItB,EAAKgX,gBAA6B,EAAKA,gBAAgB5Z,KAArB,iBAClC,EAAK6Z,oBAA6B,EAAKA,oBAAoB7Z,KAAzB,iBAClC,EAAK8Z,wBAA6B,EAAKA,wBAAwB9Z,KAA7B,iBAClC,EAAK+Z,qBAA6B,EAAKA,qBAAqB/Z,KAA1B,iBAClC,EAAKga,mBAA6B,EAAKA,mBAAmBha,KAAxB,iBA1BzB,E,sDA6Bb,WACI3B,KAAKC,SAAS,CACV8a,0BAA2B/a,KAAKlG,MAAMihB,6B,0BAI9C,SAAalV,EAAS/E,GAClBd,KAAKC,SAAS,CACVqE,aAAeuB,EACftB,WAAezD,EACfuD,aAAe,M,6BAIvB,SAAgBzE,GACf,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVgb,wBAA0B/a,IAEhB,UAAVN,EAAE4O,MACF5P,QAAQC,IAAIqB,GACZF,KAAKwb,oBAAoBtb,M,iCAKjC,SAAoB0W,GAAQ,IAAD,OACvBrZ,MAAMC,EAAA,mBACF,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjBoQ,eAAkB2I,IAEtB9Y,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAIlDuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GAGF,GAFAS,QAAQC,IAAI,UACZD,QAAQC,IAAIV,GACW,GAApBA,EAAI,SAAqB,CAExB,IAAI+P,EAAW/P,EAAI,SACnB,EAAK8B,SAAS,CACV+a,oBAA0B9M,EAAQ,GAClCgN,wBAA0BhN,EAAQ,OAClCiN,uBAA0BjN,EAAQ,SAClCkN,wBAA0BlN,EAAQ,cAKtC,EAAK/I,aAAa,yBAA0B,4B,qCAMxD,SAAwBvF,GACvB,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVob,eAAiBnb,M,kCAIzB,SAAqBN,GACpB,IAAD,EAC2BA,EAAEE,OAAXI,GADlB,EACWH,KADX,EACkBG,OACdF,KAAKC,SAAS,CACVqb,kBAAoBpb,M,gCAI5B,WACC,IAAD,OACI3C,MAAMC,EAAA,oCACN,CACIE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEjB,WAAsBmC,KAAKlG,MAAMkhB,oBACjC,eAAsBhb,KAAKlG,MAAMshB,wBACjC,YAAsBpb,KAAKlG,MAAMwhB,kBACjC,SAAsBtb,KAAKlG,MAAMuhB,iBAErCvd,QAAS,CACL,OAAW,mBACX,eAAgB,mBAChB,MAAkBvD,aAAaC,QAAQ,YAG9CuD,MAAK,SAAA8E,GAAQ,OAAIA,EAAS3E,UAC1BH,MAAK,SAAAI,GACFS,QAAQC,IAAIV,GACZS,QAAQC,IAAIV,EAAI,UACO,GAApBA,EAAI,UACH,EAAKgH,aAAa,mCAAoC,uBACtD,EAAKyW,sBAEL,EAAKzW,aAAa,mDAAoD,4B,oBAOlF,WAAS,IAAD,OACJ,OACI,qBAAK3C,UAAU,MAAf,SACI,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,sBACA,wBAAQxI,KAAK,SACTyF,QAAS,kBAAI,EAAKmc,sBAClBpZ,UAAU,qCAFd,2C,GAtJA5B,a,8BCoIbiuB,G,kDAlIX,aAAc,IAAD,8BACT,gBACK/0B,MAAQ,CACTg1B,cAAmB,EACnBC,cAAmB,GACnBC,iBAAmB,KACnB30B,UAAmB,EACnB40B,cAAmB,EACnBC,eAAmB,EACnBC,gBAAmB,GAEvB,EAAKC,gBAAkB,EAAKA,gBAAgBztB,KAArB,iBACvB,EAAKutB,cAAgB,EAAKA,cAAcvtB,KAAnB,iBAZZ,E,mDAeb,SAAgB/B,GACZhB,QAAQC,IAAItE,aAAaC,QAAQ,aACjCwF,KAAKqvB,KAAKC,kBAAkBzO,U,oEAGhC,WAAsB0O,GAAtB,SAAAnyB,EAAA,sDACImyB,EAAMC,kBACND,EAAME,iBACNzvB,KAAKlG,MAAMk1B,iBAAmBO,EAAMzvB,OAAO4vB,MAAM,GAEjD1vB,KAAKC,SAAS,CACV6uB,cAAgB,EAChBC,cAAgB/uB,KAAKlG,MAAMk1B,iBAAX,OAPxB,gD,yHAWA,qCAAA5xB,EAAA,6DACI4C,KAAKC,SAAS,CACV5F,UAAW,KAGTs1B,EAAW,IAAIC,UACZC,OAAO,OAAO7vB,KAAKlG,MAAMk1B,kBAE9BjsB,EAAMvF,EAAW,wCARzB,SASUsyB,KAAMC,KAAKhtB,EAAK4sB,EAAS,CAC3BlyB,KAAK,OACLK,QAAS,CACL,OAAW,mBACX,eAAgB,sBAChB,YAAavD,aAAaC,QAAQ,YAClC,MAAkBD,aAAaC,QAAQ,YAG9CuD,MAAK,SAAAiyB,GAEoB,GADVA,EAAK7xB,KACRd,UACL,EAAK4C,SAAS,CACVgvB,cAAe,IAGnB,EAAKhvB,SAAS,CACVgvB,cAAe,OAK1BvwB,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZ,EAAKsB,SAAS,CACV5F,UAAW,EACX40B,cAAe,OAnC3B,OAwCIjvB,KAAKC,SAAS,CACVivB,eAAkB,EAClBC,gBAAkB,EAClB90B,UAAkB,EAClB20B,iBAAkB,OAGtBhvB,KAAKiwB,kBA/CT,gD,mFAkDA,WACIjwB,KAAKC,SAAS,CACV6uB,cAAmB,EACnBC,cAAmB,GACnBC,iBAAmB,S,oBAM3B,WAAU,IAAD,OACL,OACI,gCACI,uBACIh1B,KAAK,OACLoG,GAAG,OACH8vB,IAAI,oBACJzvB,MAAO,CAAC0vB,QAAS,QACjB7vB,SAAU,SAACV,GAAD,OAAO,EAAKwwB,gBAAgBxwB,MAE1C,sBAAKQ,GAAG,6BAAR,UACI,qBAAKA,GAAG,yBAAR,4BACA,qBAAKA,GAAG,0BAAR,SACI,gCAEQJ,KAAKlG,MAAMk1B,iBACV,mCAAE,8BAAMhvB,KAAKlG,MAAMi1B,kBACnB,KAGD/uB,KAAKlG,MAAMk1B,iBACV,qBACG5uB,GAAG,+BACHX,QAASO,KAAKkvB,cAFjB,4BAIA,qBACG9uB,GAAG,oCACHX,QAASO,KAAKovB,gBAFjB,iCAKL,qBAAKhvB,GAAG,kCAAR,8C,GA1HHQ,aC6GV+M,GAxFD,WAEV,OACI,cAAC,KAAD,UACI,gCACI,qBAAKnL,UAAU,YAAf,SACA,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,YACf,qBAAKA,UAAU,iBAGnB,sBAAKpC,GAAG,eAAR,UACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,sBAAKoC,UAAU,eAAf,UACI,qBAAKA,UAAU,2BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,gDAAf,SACI,oBAAIA,UAAU,kCAAd,yBAEJ,qBAAKA,UAAU,gDAAf,SACI,qBAAKiE,aAAW,aAAajE,UAAU,iCAAvC,SACI,qBAAIA,UAAU,mDAAd,UACI,oBAAIA,UAAU,kBAAd,SAAgC,mBAAGhC,KAAK,IAAR,oBAChC,oBAAIgC,UAAU,yBAAyB6tB,eAAa,OAApD,mCAMpB,qBAAK7tB,UAAU,+BAAf,SACI,eAAC,IAAD,WACA,cAAC,IAAD,CAAO8tB,MAAI,EAACC,KAAK,SAASC,UAAWjX,KAWrC,cAAC,IAAD,CAAOgX,KAAI,WAAcC,UAAWrgB,GAASsgB,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAI,0BAA6BC,UAAW5E,KACnD,cAAC,IAAD,CAAO2E,KAAI,mBAAsBC,UAAWla,KAC5C,cAAC,IAAD,CAAOia,KAAI,kBAAqBC,UAAWxZ,KAC3C,cAAC,IAAD,CAAOuZ,KAAI,qBAAwBC,UAAW7Y,KAC9C,cAAC,IAAD,CAAO4Y,KAAI,0BAA6BC,UAAW5X,KACnD,cAAC,IAAD,CAAO2X,KAAI,uBAA0BC,UAAW3B,KAWhD,cAAC,IAAD,CAAO0B,KAAI,yBAA6BC,UAAWE,KACnD,cAAC,IAAD,CAAOH,KAAI,0BAA6BC,UAAWG,KACnD,cAAC,IAAD,CAAOJ,KAAI,gCAAmCC,UAAW5B,KAEzD,cAAC,IAAD,CAAO0B,MAAI,EAACC,KAAK,UAAUC,UAAWI,KACtC,cAAC,IAAD,CAAON,MAAI,EAACC,KAAK,oBAAoBC,UAAWvH,KAChD,cAAC,IAAD,CAAOqH,MAAI,EAACC,KAAI,gBAAmBC,UAAWpR,KAS9C,cAAC,IAAD,CAAOmR,KAAI,QAAmBC,UAAa9C,GAAgB+C,OAAK,IAChE,cAAC,IAAD,CAAOF,KAAI,iBAAoBC,UAAaK,KAC5C,cAAC,IAAD,CAAON,KAAI,eAAoBC,UAAarC,UAGhD,cAAC,GAAD,gBCtDL2C,OA5Cf,WAEkCC,aAAY,qBAAEj1B,QAAqBf,yBAC7Bg2B,aAAY,qBAAEj1B,QAAqBd,+BADvE,IAEMV,EAAay2B,aAAY,qBAAEn1B,MAAiBtB,cAE5C2C,EAAW+B,cAUjB,OARAgyB,oBAAS,sBAAC,sBAAA5zB,EAAA,6DAENwB,QAAQC,IAAI,SAFN,SAGA5B,EtDqGgC,uCAAM,WAAOA,EAAUE,GAAjB,SAAAC,EAAA,0DAK7C7C,aAAaC,QAAQ,SALwB,uBAM5CoE,QAAQC,IAAI,aANgC,SAStC5B,EAASC,EAAa,CAACvC,QAASJ,aAAaC,QAAQ,WAAY6D,YAAa9D,aAAaC,QAAQ,kBAT7D,6BAY5CoE,QAAQC,IAAI,aAZgC,OAgBhD5B,EAASH,GAA4B,IACrCG,EAASL,GAAsB,IAjBiB,2CAAN,yDsDxGhC,2CAKP,CAACtC,IAIA,qBAAKmG,MAAO,CAACkC,SAAS,YAAtB,SACI,cAAC,gBAAD,UACI,qBAAKlC,MAAO,CAACkC,SAAS,WAAY3B,MAAM,OAAQD,OAAO,SAAvD,SACI,sBAAKN,MAAO,CAACkC,SAAS,YAAtB,UAGsB,MAAdrI,EAEC,cAAC22B,GAAD,IACA,cAAC,IAAD,UACG,cAAC,IAAD,CAAOR,OAAK,EAACF,KAAK,SAASC,UAAW30B,OAK5B,MAAdvB,EACC,KACA,cAAC,IAAD,CAAUyN,GAAG,qBCnB3BmpB,OAhBf,WAEI,IAAMC,E5DOMC,YACZ/1B,EAAkBC,GAClBkB,EAEE60B,IAAe,WAAf,GACEl1B,YAAiBb,IADnB,OAEKgB,M4DVP,OACI,cAAC,IAAD,CAAU60B,MAAOA,EAAjB,SACI,cAAC,IAAD,CAAiB71B,QAASA,EAA1B,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOi1B,KAAK,IAAIC,UAAWM,YCJzCQ,GAAcC,QACW,cAA7B90B,OAAO6C,SAASkyB,UAEe,UAA7B/0B,OAAO6C,SAASkyB,UAEhB/0B,OAAO6C,SAASkyB,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAen0B,GACtCo0B,UAAUC,cACPC,SAASH,GACT5zB,MAAK,SAACg0B,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBn4B,QACf83B,UAAUC,cAAcO,YAI1BxzB,QAAQC,IACN,+GAKErB,GAAUA,EAAO60B,UACnB70B,EAAO60B,SAASN,KAMlBnzB,QAAQC,IAAI,sCAGRrB,GAAUA,EAAO80B,WACnB90B,EAAO80B,UAAUP,WAO5BrzB,OAAM,SAACC,GACNC,QAAQD,MAAM,4CAA6CA,MCnGjE,IAYe4zB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB10B,MAAK,YAAkD,IAA/C20B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF1tB,SAAS2tB,eAAe,SFcnB,SAAkB11B,GACvB,GAA6C,kBAAmBo0B,UAAW,CAGzE,GADkB,IAAIlR,IAAIyS,GAAwB12B,OAAO6C,SAASkB,MACpD4yB,SAAW32B,OAAO6C,SAAS8zB,OAIvC,OAGF32B,OAAO42B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMwB,GAAN,sBAEP7B,KAgEV,SAAiCK,EAAen0B,GAE9CD,MAAMo0B,EAAO,CACX7zB,QAAS,CAAE,iBAAkB,YAE5BC,MAAK,SAAC8E,GAEL,IAAMywB,EAAczwB,EAAS/E,QAAQy1B,IAAI,gBAEnB,MAApB1wB,EAAS5E,QACO,MAAfq1B,IAA8D,IAAvCA,EAAYpO,QAAQ,cAG5C0M,UAAUC,cAAc2B,MAAMz1B,MAAK,SAACg0B,GAClCA,EAAa0B,aAAa11B,MAAK,WAC7BtB,OAAO6C,SAASC,eAKpBmyB,GAAgBC,EAAOn0B,MAG1BkB,OAAM,WACLE,QAAQC,IAAI,oEAtFV60B,CAAwB/B,EAAOn0B,GAI/Bo0B,UAAUC,cAAc2B,MAAMz1B,MAAK,WACjCa,QAAQC,IACN,+GAMJ6yB,GAAgBC,EAAOn0B,OEpC/Bm2B,GAKApB,O","file":"static/js/main.27e0a971.chunk.js","sourcesContent":["// REQUEST\r\nexport const ESTADO_REQUEST_EXITO           = 'ESTADO_REQUEST_EXITO'\r\nexport const ESTADO_REQUEST_NO_AUTORIZADO   = 'ESTADO_REQUEST_NO_AUTORIZADO'\r\nexport const ESTADO_REQUEST_NO_EXISTE       = 'ESTADO_REQUEST_NO_EXISTE'\r\nexport const ESTADO_REQUEST_ERROR_SERVIDOR  = 'ESTADO_REQUEST_ERROR_SERVIDOR'\r\nexport const ESTADO_REQUEST_DESCONOCIDO     = 'ESTADO_REQUEST_DESCONOCIDO'\r\n","import {\r\n    ESTADO_REQUEST_EXITO,\r\n    ESTADO_REQUEST_NO_AUTORIZADO,\r\n    ESTADO_REQUEST_ERROR_SERVIDOR,\r\n    ESTADO_REQUEST_NO_EXISTE,\r\n    ESTADO_REQUEST_DESCONOCIDO\r\n} from \"../../Constantes/EstadoRequest/EstadoRequest\";\r\n\r\nconst INIT_STATE = {\r\n    init_estadoRequest  : 0,\r\n    init_request    : false\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case ESTADO_REQUEST_EXITO: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest : action.payload,\r\n            init_request       : true\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_NO_AUTORIZADO: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_NO_EXISTE: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_ERROR_SERVIDOR: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_DESCONOCIDO: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\nexport const MOSTRAR_FORMULARIO_LOGIN = 'MOSTRAR_FORMULARIO_LOGIN'\r\nexport const OBTENER_LOGIN = 'OBTENER_LOGIN'","import {\r\n    MOSTRAR_FORMULARIO_LOGIN,\r\n    OBTENER_LOGIN\r\n} from \"../../../Constantes/Login/Login\";\r\n\r\nconst INIT_STATE = {\r\n    mostrarFormularioLogin : false,\r\n    cargando     : false,\r\n    LoginUsuid   : localStorage.getItem('usuid'),\r\n    LoginUsuario : {},\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case MOSTRAR_FORMULARIO_LOGIN: {\r\n        return {\r\n            ...state,\r\n            mostrarFormularioLogin : action.payload\r\n        }\r\n    }\r\n    case OBTENER_LOGIN: {\r\n        return {\r\n            ...state,\r\n            LoginUsuid   : action.payload.usuid,\r\n            LoginUsuario : action.payload.usuario\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\nexport const COMUNES_CARGANDO_PAGINA = 'COMUNES_CARGANDO_PAGINA'\r\nexport const COMUNES_MOSTRAR_MENU = 'COMUNES_MOSTRAR_MENU'\r\nexport const COMUNES_CARGANDO_PAGINA_INICIO = 'COMUNES_CARGANDO_PAGINA_INICIO'","import {\r\n    COMUNES_CARGANDO_PAGINA,\r\n    COMUNES_MOSTRAR_MENU,\r\n    COMUNES_CARGANDO_PAGINA_INICIO,\r\n} from \"../../../Constantes/Comunes/Comunes\";\r\n\r\nconst INIT_STATE = {\r\n    ComunesCargandoPagina : true,\r\n    ComunesCargandoPaginaInicio : true,\r\n    ComunesMostrarMenu : false,\r\n    ComunesOcultarMenu : false\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case COMUNES_CARGANDO_PAGINA_INICIO : {\r\n        return {\r\n            ...state,\r\n            ComunesCargandoPaginaInicio : action.payload\r\n        }\r\n    }\r\n    case COMUNES_CARGANDO_PAGINA: {\r\n        return {\r\n            ...state,\r\n            ComunesCargandoPagina : action.payload\r\n        }\r\n    }\r\n    case COMUNES_MOSTRAR_MENU: {\r\n        return {\r\n            ...state,\r\n            ComunesMostrarMenu : action.payload.mostrarmenu,\r\n            ComunesOcultarMenu : action.payload.ocultarmenu,\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport EstadoRequest from './EstadoRequest'\r\nimport Login from './Login/Login'\r\nimport Comunes from './Comunes/Comunes'\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  estadoRequest : EstadoRequest,\r\n  login : Login,\r\n  comunes : Comunes,\r\n});\r\n\r\nexport default createRootReducer\r\n","import createSagaMiddleware from \"redux-saga\";\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../Reducers'\r\n\r\nconst createBrowserHistory = require('history').createBrowserHistory;\r\nexport const history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [thunk,sagaMiddleware, routeMiddleware];\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    composeEnhancers( \r\n      // applyMiddleware(thunk)\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        ...middlewares\r\n      ),\r\n    )\r\n  )\r\n\r\n  // sagaMiddleware.run(rootSaga);\r\n  return store\r\n}","export default __webpack_public_path__ + \"static/media/bg-01.a13f3587.jpg\";","export default {\r\n    // api: 'http://backend-endulzate.gavsistemas.com/',\r\n    // apiTicket: 'https://pre-back.leadsmartview.com/',\r\n\r\n    api: 'http://backend-endulzate.gavsistemas.com/',\r\n    apiTicket: 'http://localhost/',\r\n\r\n    basename: '/',\r\n    produccion: true\r\n};\r\n","import {\r\n    COMUNES_CARGANDO_PAGINA,\r\n    COMUNES_MOSTRAR_MENU,\r\n    COMUNES_CARGANDO_PAGINA_INICIO\r\n} from \"../../../Constantes/Comunes/Comunes\";\r\n\r\nexport const CargandoPaginaReducer = (accion) => {\r\n    return {\r\n        type: COMUNES_CARGANDO_PAGINA,\r\n        payload: accion\r\n    }\r\n}\r\n\r\nexport const CargandoPaginaInicioReducer = (accion) => {\r\n    return {\r\n        type: COMUNES_CARGANDO_PAGINA_INICIO,\r\n        payload: accion\r\n    }\r\n}\r\n\r\nexport const MostrarMenuReducer = (accion) => async (dispatch) => {\r\n\r\n    if(accion == true){\r\n        dispatch({\r\n            type: COMUNES_MOSTRAR_MENU,\r\n            payload: {\r\n                mostrarmenu : accion,\r\n                ocultarmenu : false\r\n            }\r\n        })\r\n    }else{\r\n        dispatch ({\r\n            type: COMUNES_MOSTRAR_MENU,\r\n            payload: {\r\n                mostrarmenu : true,\r\n                ocultarmenu : true\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch ({\r\n                type: COMUNES_MOSTRAR_MENU,\r\n                payload: {\r\n                    mostrarmenu : false,\r\n                    ocultarmenu : false\r\n                }\r\n            })\r\n        }, 1000);\r\n    }\r\n}","import {\r\n    ESTADO_REQUEST_EXITO,\r\n    ESTADO_REQUEST_NO_AUTORIZADO,\r\n    ESTADO_REQUEST_ERROR_SERVIDOR,\r\n    ESTADO_REQUEST_NO_EXISTE,\r\n    ESTADO_REQUEST_DESCONOCIDO\r\n} from \"../../Constantes/EstadoRequest/EstadoRequest\";\r\nimport {CargandoPaginaReducer} from './Comunes/Comunes'\r\n\r\n// REDUCER -> ENVIAR LA DATA DE FETCH A UNA CONSTANTE O ESTADO\r\nexport const estadoRequestReducer = (estado) => (dispatch) => {\r\n    dispatch(CargandoPaginaReducer(false))\r\n    if(estado === 200){\r\n        dispatch({\r\n            type: ESTADO_REQUEST_EXITO,\r\n            payload: estado\r\n        })\r\n    }else if(estado === 401){\r\n        dispatch ({\r\n            type: ESTADO_REQUEST_NO_AUTORIZADO,\r\n            payload: estado\r\n        })\r\n    }else if(estado === 404){\r\n        \r\n        dispatch({\r\n            type: ESTADO_REQUEST_NO_EXISTE,\r\n            payload: estado\r\n        })\r\n        \r\n    }else if(estado === 500){\r\n        dispatch({\r\n            type: ESTADO_REQUEST_ERROR_SERVIDOR,\r\n            payload: estado\r\n        })\r\n    }else{\r\n        dispatch({\r\n            type: ESTADO_REQUEST_DESCONOCIDO,\r\n            payload: estado\r\n        })\r\n    }\r\n};","import {\r\n    MOSTRAR_FORMULARIO_LOGIN,\r\n    OBTENER_LOGIN\r\n} from \"../../../Constantes/Login/Login\";\r\nimport config from '../../../config'\r\nimport { estadoRequestReducer } from \"../EstadoRequest\"\r\nimport { CargandoPaginaReducer, CargandoPaginaInicioReducer } from \"../Comunes/Comunes\"\r\n\r\nexport const MostrarFormularioReducer = (accion) => {\r\n    return {\r\n        type: MOSTRAR_FORMULARIO_LOGIN,\r\n        payload: accion\r\n    }\r\n}\r\n\r\nexport const LoginReducer = (usuario) => async (dispatch, getState) => {\r\n\r\n    let respuesta = false\r\n    let mensaje = \"\"\r\n\r\n    dispatch(CargandoPaginaReducer(true))\r\n    dispatch(CargandoPaginaInicioReducer(true))\r\n\r\n    await fetch(config.api+'api/versiondos/login',\r\n\t\t{\r\n\t\t\tmode:'cors',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(usuario),\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept' : 'application/json',\r\n\t\t\t\t'Content-type' : 'application/json'\r\n\t\t\t}\r\n      \t}\r\n    )\r\n    .then( async res => {\r\n\t\tawait dispatch(estadoRequestReducer(res.status))\r\n\t\treturn res.json()\r\n    })\r\n    .then(data => {\r\n\t\tconst estadoRequest = getState().estadoRequest.init_request\r\n\t\tif(estadoRequest === true){\r\n            respuesta = data.respuesta\r\n            mensaje = data.mensaje\r\n\t\t\tif(data.respuesta === true){\r\n\t\t\t\tlocalStorage.setItem('usuario', usuario.usuario)\r\n\t\t\t\tlocalStorage.setItem('contrasenia', usuario.contrasenia)\r\n\r\n\t\t\t\tlocalStorage.setItem('usuid', data.datos.usuid)\r\n\t\t\t\tlocalStorage.setItem('usutoken', data.datos.usutoken)\r\n\t\t\t\tlocalStorage.setItem('usuusuario', data.datos.usuusuario)\r\n\t\t\t\tlocalStorage.setItem('pernombre', data.datos.pernombre)\r\n\t\t\t\t// localStorage.setItem('tpuprivilegio', data.datos.tpuprivilegio)\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: OBTENER_LOGIN,\r\n\t\t\t\t\tpayload: {\r\n                        usuid   : data.datos.usuid,\r\n                        usuario : data.datos\r\n                    }\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: OBTENER_LOGIN,\r\n\t\t\t\t\tpayload: {\r\n                        usuid   : null,\r\n                        usuario : {}\r\n                    }\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}else{\r\n            respuesta = false\r\n            mensaje = \"Lo sentimos, login corrupto\"\r\n\r\n            dispatch({\r\n                type: OBTENER_LOGIN,\r\n                payload: {\r\n                    usuid   : null,\r\n                    usuario : {}\r\n                }\r\n            });\r\n        }\r\n    }).catch((error)=> {\r\n        respuesta = false\r\n        mensaje = error\r\n\r\n        console.log(error)\r\n        dispatch({\r\n            type: OBTENER_LOGIN,\r\n            payload: {\r\n                usuid   : null,\r\n                usuario : {}\r\n            }\r\n        });\r\n    });\r\n\r\n    return {\r\n        respuesta : respuesta,\r\n        mensaje : mensaje\r\n    }\r\n}\r\n\r\nexport const CerrarSesionReducer = () => async (dispatch, getState) => {\r\n    localStorage.removeItem('usuario')\r\n    localStorage.removeItem('contrasenia')\r\n    localStorage.removeItem('usuid')\r\n    localStorage.removeItem('usutoken')\r\n    localStorage.removeItem('usuusuario')\r\n    localStorage.removeItem('pernombre')\r\n    // localStorage.removeItem('tpuprivilegio')\r\n    dispatch ({\r\n        type: OBTENER_LOGIN,\r\n        payload: {\r\n            usuid   : null,\r\n            usuario : {}\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const ValidarUsuarioConectadoReducer = () => async (dispatch, getState) => {\r\n\r\n    // console.log(\"LOCAL STORAGE:\")\r\n    // console.log(localStorage.getItem('otros'))\r\n\r\n    if(localStorage.getItem('usuid')){\r\n        console.log('SI EXISTE')\r\n        // console.log(localStorage.getItem('usuid'))\r\n        // console.log(localStorage.getItem('contrasenia'))\r\n        await dispatch(LoginReducer({usuario: localStorage.getItem('usuario'), contrasenia: localStorage.getItem('contrasenia')}))\r\n\r\n    }else{\r\n        console.log('no existe')\r\n        \r\n    }\r\n\r\n    dispatch(CargandoPaginaInicioReducer(false))\r\n    dispatch(CargandoPaginaReducer(false))\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport { LoginReducer } from \"../../Redux/Actions/Login/Login\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst BtnEnviarLogin = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n\r\n    const enviarData = async () => {\r\n        \r\n        let login = await dispatch(LoginReducer({\r\n            \"usuario\" : props.usuario,\r\n            \"contrasenia\" : props.contrasenia,\r\n        }))\r\n        if(login.respuesta === true){\r\n            addToast(login.mensaje, { appearance: 'success', autoDismiss: true});\r\n            window.location.reload(true);\r\n        }else{\r\n            addToast(login.mensaje, { appearance: 'error', autoDismiss: true});\r\n        }\r\n        console.log(login)\r\n        \r\n    };\r\n\r\n    return (\r\n        <div class=\"container-login100-form-btn\">\r\n            <button \r\n                type=\"submit\" class=\"login100-form-btn\"\r\n                onClick={enviarData}\r\n                // onClick={() => this.enviarData()}\r\n            >\r\n                Iniciar Sesións\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnEnviarLogin\r\n","import React, {Component} from 'react';\r\nimport '../../Estilos/Login/Login.css'\r\nimport bg01 from '../../Assets/assetsLogin/images/bg-01.jpg'\r\nimport BtnEnviarLogin from './BtnEnviarLogin'\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            input_usuario : \"\",\r\n            input_contrasenia : \"\"\r\n        };\r\n    }\r\n\r\n    capturarCambioInput(e){\r\n        let variable = e.target.name\r\n        this.setState({\r\n            [variable] : e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"limiter\">\r\n                    <div class=\"container-login100\">\r\n                        <div class=\"wrap-login100\">\r\n                            <div class=\"login100-form validate-form\">\r\n                                <span class=\"login100-form-title p-b-34\">\r\n                                    Endulzate | Iniciar Sesión\r\n                                </span>\r\n                                \r\n                                <div class=\"wrap-input100 rs1-wrap-input100 validate-input m-b-20\" data-validate=\"Type user name\">\r\n                                    <input \r\n                                        id=\"first-name\" class=\"input100\" type=\"text\" name=\"input_usuario\" placeholder=\"User name\" \r\n                                        onChange={(e) => this.capturarCambioInput(e)}\r\n                                    />\r\n                                    <span class=\"focus-input100\"></span>\r\n                                </div>\r\n                                <div class=\"wrap-input100 rs2-wrap-input100 validate-input m-b-20\" data-validate=\"Type password\">\r\n                                    <input \r\n                                        class=\"input100\" type=\"password\" name=\"input_contrasenia\" placeholder=\"Contraseña\" \r\n                                        onChange={(e) => this.capturarCambioInput(e)}\r\n                                    />\r\n                                    <span class=\"focus-input100\"></span>\r\n                                </div>\r\n                                \r\n                                <BtnEnviarLogin \r\n                                    usuario = {this.state.input_usuario}\r\n                                    contrasenia = {this.state.input_contrasenia}\r\n                                />\r\n                                <div class=\"w-full text-center p-t-27 p-b-239\">\r\n                                    <a href=\"#\" class=\"txt2\">\r\n                                        Usuario / contraseña?\r\n                                    </a>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"login100-more\" style={{backgroundImage: \"url(\"+bg01+\")\"}}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }}\r\nexport default Login\r\n","import React, { Component } from 'react'\nimport Loader from 'react-loader-spinner'\n\n export default class Loading extends React.Component {\n  //other logic\n    render() {\n     return(\n      <Loader\n         type       = \"ThreeDots\"\n         color      = \"#00BFFF\"\n         height     = {50}\n         width      = {50}\n         timeout    = {3000} //3 secs\n\n      />\n     );\n    }\n }","import React from 'react'\nimport {Component} from 'react';\nimport { Link } from 'react-router-dom'\nimport './cerrarCaja.css'\n// Confirmar\nimport confirmarFuncion from '../../extras/confirmarFuncion'\n\n// Loading\nimport Loading from '../../extras/loading'\n\n// TOAST\nimport cogoToast from 'cogo-toast';\nimport config from '../../../config'\n\nclass CerrarCajaVentaComponente extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            totalCerro            : '',\n            observacionesCierre   : '',\n\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\n            colorToastSuccess   : 'rgba(76,208,76,0.7)',\n            \n            imprimir            : 0,\n\n            mostrarErrorInput : false\n\n        }\n        this.getCambioTotalCerro        = this.getCambioTotalCerro.bind(this);\n        this.getCambioObservacionCierre = this.getCambioObservacionCierre.bind(this);\n        this.activarConfirmacion        = this.activarConfirmacion.bind(this);\n        this.sendCierreCajaVenta        = this.sendCierreCajaVenta.bind(this);\n\n    }\n\n    getCambioTotalCerro(e){\n\n        const {name , value} = e.target;\n        \n        if(this.props.totalCierre != value){\n            this.setState({\n                mostrarErrorInput : true\n            })\n        }else{\n            this.setState({\n                mostrarErrorInput : false\n            })\n        }\n\n        this.setState({\n            totalCerro  : value\n        })\n    }\n\n    getCambioObservacionCierre(e){\n        const {name , value} = e.target;\n        this.setState({\n            observacionesCierre : value\n        })\n\n    }\n\n    activarConfirmacion(numeroImpresion){\n        this.setState({\n            imprimir : numeroImpresion\n        })\n\n        this.props.modalCerrarCajaVenta();\n        confirmarFuncion(\n            \"CERRAR CAJA\",\n            \"Al confirmar esta acción no podremos realizar mas ventas, hasta volver abrir caja\",\n            this.sendCierreCajaVenta\n        );\n    }\n\n    sendCierreCajaVenta(){ //SI IMPRIMIR ES 1 IMPRIMIR, SI NO, NO IMPRIMIR\n\n        cogoToast.loading(\n            <div>\n                <h4>CERRANDO CAJA</h4>\n            </div>, \n            {\n                position: 'top-right'\n            }\n            \n        ).then(() => {\n                fetch(config.api+`/caja/venta/cierre`,\n                    {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            // '_token'                 : csrf_token,\n                            'idCajaVenta'            : this.props.idCajaVenta,    \n                            'totalCerro'             : this.state.totalCerro,\n                            'observacionCierre'      : this.state.observacionesCierre,\n                        }),\n                        headers: {\n                            'Accept'        : 'application/json',\n                            'Content-Type'  : 'application/json',\n                            'usuid'         : localStorage.getItem('usuid')\n                        }\n                    }\n                )\n                .then(response => response.json())\n                .then(data => {\n                    \n                    console.log(data)\n                    if(data['respuesta']){\n                        cogoToast.success(\n                            <div>\n                                <h4>LA CAJA SE CERRO SATISFACTORIAMENTE</h4>\n                            </div>, \n                            {\n                              position: 'top-right'\n                            }\n                        );\n                        // this.props.activarToast('El cierre de caja fue exitoso', this.state.colorToastSuccess);\n                        this.setState({\n                            totalCerro              : '',\n                            observacionesCierre     : '',\n                        });\n\n                        if(this.state.imprimir == 1){\n                            let url = `http://localhost/api/imprimir/cierreCaja/`+data['idCaja'];\n                            cogoToast.loading(\n                                <div>\n                                    <h4>IMPRIMIENDO CIERRE DE CAJA</h4>\n                                </div>, \n                                {\n                                    position: 'top-right'\n                                }\n                                \n                            )\n                            .then(() => {\n                                fetch(\n                                    url\n                                )\n                                .then(\n                                    res => res.json()\n                                )\n                                .then(\n                                    data => {\n                                        if(data['respuesta']){\n                                            cogoToast.success(\n                                                <div>\n                                                    <h4>COPIA DE CIERRE DE CAJA FINALIZADA</h4>\n                                                </div>, \n                                                {\n                                                position: 'top-right'\n                                                }\n                                            );\n                                        }else{\n                                            cogoToast.error(\n                                                <div>\n                                                    <h4>NO SE PUDO CONECTAR CON LA IMPRESORA</h4>\n                                                </div>, \n                                                {\n                                                position: 'top-right'\n                                                }\n                                            );\n                                        }\n                                    }\n                                )\n                            });\n                        }\n\n                        this.props.getEstadoCajaVent();\n\n                    }else{\n                        cogoToast.error(\n                            <div>\n                                <h4>HUBO UN PROBLEMA AL MOMENTO DE CERRAR CAJA</h4>\n                            </div>, \n                            {\n                              position: 'top-right'\n                            }\n                        );\n                        // this.props.activarToast('Hubo un problema al momento de cerrar caja', this.state.colorToastDanger)\n                    }\n                    \n                })\n            }\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"card card-default\">\n                <div className=\"modal-body\">\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <label>SUCURSAL</label>\n                                    <h4 className=\"card-title\">{this.props.sucursalNombre} </h4>\n                                </div>\n                                <div className=\"col-6\">\n                                    <label>USUARIO CONECTADO</label>\n                                    <h4 className=\"card-title\"> {this.props.usuarioNombre} </h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\" >\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <label>DINERO APERTURADO</label>\n                                    <h4 className=\"card-title\">{this.props.totalApertura } </h4>\n                                </div>\n                                <div className=\"col-6\">\n                                    <label>DINERO CON EL QUE SE APERTURO</label>\n                                    <h4 className=\"card-title\">{this.props.totalAperturo } </h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\" >\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <label>DINERO DE CIERRE DE CAJA</label>\n                                    {\n                                        this.props.loadModalCierreCajaVenta\n                                        ?<Loading\n                                        />\n                                        :<h4 className=\"card-title\">{this.props.totalCierre } </h4>\n                                    }\n                                    \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\" >\n                            <div className=\"row\"> \n                                <div className=\"col-12\">\n                                    <label>Dinero para cerrar caja</label><br/>\n                                    <input \n                                        type        = \"number\" \n                                        \n                                        onChange    = {this.getCambioTotalCerro}\n                                        value       = {this.state.totalCerro}\n                                        autoFocus\n                                        id={\n                                            this.state.mostrarErrorInput == true\n                                            ?\"Input-Cerrar-Caja-Error\"\n                                            :\"Input-Cerrar-Caja\"\n                                            \n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <label>Comentario (opcional)</label>\n                                    <textarea \n                                        className   = \"form-control\" \n                                        rows        = \"3\" \n                                        placeholder = \"Comentario\"\n                                        onChange    = {this.getCambioObservacionCierre}\n                                        value       = {this.state.observacionesCierre}\n                                    >\n\n                                    </textarea>\n                                </div>                                        \n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <h4 className=\"card-title\">Si el dinero en la caja no cuadra con el del sistema, ingresar sin preocupaciones, dejando un comentario del asunto o acción realizada</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group boton\">\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <button \n                                        type=\"button\" \n                                        className=\"addexis form-control btn btn-block btn-danger btn-lg\" \n                                        id=\"crearProducto\" \n                                        onClick     = {\n                                            () => this.activarConfirmacion(1)\n                                        }\n                                    >\n                                        CERRAR E IMPRIMIR CAJA</button>\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <button \n                                        type=\"button\" \n                                        className=\"addexis form-control btn btn-block btn-danger btn-lg\" \n                                        onClick     = {\n                                            () => this.activarConfirmacion(0)\n                                        }\n                                    >\n                                        CERRAR CAJA</button>\n                                </div>\n                                {/* <div className=\"col-6\">\n                                    <Link to=\"/almacen\">\n                                        <button \n                                            type=\"button\" \n                                            className=\"addexis form-control btn btn-block btn-info btn-lg\" \n                                            \n                                            >\n                                            VISUALIZAR CAJA</button>\n                                    </Link>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         ) \n    }\n\n}\n\nexport default CerrarCajaVentaComponente","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nexport default function(titulo, descripcion, funcion)\n{\n\n    confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className=\"page-content container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className='card'>\n                                <div className=\"card-body\">\n                                    <h1>{titulo}</h1>\n                                    <p>{descripcion}</p>\n                                    <div className=\"form-group boton\">\n                                        <div className=\"row\">\n                                            <div className=\"col-6\">\n                                                <button \n                                                    type=\"button\"\n                                                    onClick={() => {\n                                                        funcion();\n                                                        onClose();\n                                                    }}\n                                                    className=\"btn waves-effect waves-light btn-block btn-info\">\n                                                        ACEPTAR\n                                                </button>\n                                            </div>\n                                            <div className=\"col-6\">\n                                                <button \n                                                    type=\"button\" \n                                                    onClick={() => {\n                                                        onClose();\n                                                    }}\n                                                    className=\"btn waves-effect waves-light btn-block btn-danger\">\n                                                        CANCELAR\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    });\n\n} \n","export default __webpack_public_path__ + \"static/media/logo-icon.aa66cde1.png\";","export default __webpack_public_path__ + \"static/media/logo-light-icon.99704e51.png\";","export default __webpack_public_path__ + \"static/media/logo-text.ebec6fa3.png\";","export default __webpack_public_path__ + \"static/media/logo-light-text.981f470a.png\";","export default __webpack_public_path__ + \"static/media/1.af3753e4.jpg\";","import React from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport { CerrarSesionReducer } from \"../../../Redux/Actions/Login/Login\"\r\n\r\nconst BtnCerrarSesion = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <a \r\n            onClick={() => dispatch(CerrarSesionReducer())}\r\n            className=\"dropdown-item\" href=\"#\">\r\n                <i className=\"fa fa-power-off mr-1 ml-1\"></i> \r\n                Salir\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default BtnCerrarSesion\r\n","import React, { Component } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport CerrarCajaVentaComponente from './cerrarCajaVenta'\nimport { Link } from 'react-router-dom'\nimport cogoToast from 'cogo-toast';\nimport LogoIcon from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-icon.png'\nimport LogoLightIcon from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-light-icon.png'\nimport LogoText from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-text.png'\nimport LogoTextLight from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-light-text.png'\nimport User1 from '../../../Assets/assetsAdminTemplate/assets/images/users/1.jpg'\nimport config from '../../../config'\nimport BtnCerrarSesion from './BtnCerrarSesion'\n\nclass Top extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            // variables de la apertura de la caja\n            idCajaVenta             : '',\n            sucursalNombre          : '',\n            usuarioNombre           : '',\n            totalApertura           : '',\n            totalAperturo           : '',\n            observacionesApertura   : '',\n            totalCierre             : '',\n\n            registrarGastoIngreso   : '',\n            motivoGastoIngreso      : '',\n\n            // Estado de la caja\n            estadoCajaVenta              : true,  // false = NO SE SABE EL ESTADO DE LA CAJA DE VENTA, TRUE = SI SABEMOS\n            cerrarAbrirCajaVenta         : false, // false = ABRIR CAJARA, TRUE = CERRAR CAJA\n            txt_btn_abriCerrarCaja       : 'ABRIR CAJA',\n\n            //modal\n            estadoModalAbrirCajaVenta    : false,\n            estadoModalCerrarCajaVenta   : false,\n            estadoModalRegistrarGasto    : false,\n            estadoModalRegistrarIngreso  : false,\n\n            // \n\n            // TOAST\n            estadoToast         : false,\n            mensajeToast        : '',\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\n            colorToastSuccess   : 'rgba(76,208,76,0.7)',\n            colorToast          : '',\n\n            // LOADING\n            loadModalCierreCajaVenta    : true,\n        }\n        this.modalAbrirCajaVenta    = this.modalAbrirCajaVenta.bind(this);\n        this.modalCerrarCajaVenta   = this.modalCerrarCajaVenta.bind(this);\n        this.getEstadoCajaVent      = this.getEstadoCajaVent.bind(this);\n        this.abrirCerrarCajaVenta   = this.abrirCerrarCajaVenta.bind(this);\n        this.getCambioTotalAperturo = this.getCambioTotalAperturo.bind(this);\n        this.getCambioObservacion   = this.getCambioObservacion.bind(this);\n        this.sendAbrirCaja          = this.sendAbrirCaja.bind(this);\n        this.sendRegistrarGasto     = this.sendRegistrarGasto.bind(this);\n        this.modalRegistrarGasto    = this.modalRegistrarGasto.bind(this);\n        this.getCambioGastoIngreso          = this.getCambioGastoIngreso.bind(this);\n        this.getCambioMotivoGastoIngreso    = this.getCambioMotivoGastoIngreso.bind(this);\n        this.sendRegistrarIngreso           = this.sendRegistrarIngreso.bind(this);\n        this.modalRegistrarIngreso          = this.modalRegistrarIngreso.bind(this);\n        this.activarToast                   = this.activarToast.bind(this);\n        this.getTotalCierreCajaVenta        = this.getTotalCierreCajaVenta.bind(this);\n\n    }\n    componentDidMount(){\n        this.getEstadoCajaVent()\n\n    }\n\n    getEstadoCajaVent(){\n        fetch(config.api+`/caja/venta/estado`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            \n            console.log(data)\n            let texto;\n            let contenedor  = document.querySelector(\"#btn_abrirCerrarCaja\");\n            \n            if(data['respuesta'] == true){\n                contenedor.classList.remove(\"btn-primary\");\n                contenedor.classList.add(\"btn-danger\");\n                texto = \"CERRAR CAJA\"\n\n                let cajaVenta   = data['cajaVenta'];\n                this.setState({\n                    idCajaVenta             : cajaVenta['idCajaVenta'],\n                    totalAperturo           : cajaVenta['totalAperturo'],\n                    totalCierre             : cajaVenta['totalCierre'],\n                })\n\n            }else{\n                contenedor.classList.remove(\"btn-danger\");\n                contenedor.classList.add(\"btn-primary\");\n                texto = \"ABRIR CAJA\";\n                console.log(\"abrirrrr caja\")\n\n            }\n            \n            this.setState({\n                cerrarAbrirCajaVenta    : data['respuesta'],\n                usuarioNombre           : data['nombreUsuario'],\n                sucursalNombre          : data['sucursalNombre'],\n                totalApertura           : data['totalApertura'],\n\n                estadoCajaVenta         : true,\n                txt_btn_abriCerrarCaja  : texto,\n\n                loadModalCierreCajaVenta    : false\n            });\n            \n        })\n    }\n\n    getTotalCierreCajaVenta(){\n        fetch(config.api+`/caja/venta/estado/totalcierre`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token'        : csrf_token,\n                    'idCajaVenta'   : this.state.idCajaVenta\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            \n            \n            this.setState({\n                \n                totalCierre               : data['totalCierre'],\n                loadModalCierreCajaVenta  : false\n            });\n            \n        })\n    }\n\n    abrirCerrarCajaVenta(){\n        console.log(this.state.cerrarAbrirCajaVenta)\n        if(this.state.cerrarAbrirCajaVenta){\n            this.modalCerrarCajaVenta();\n        }else{\n            this.modalAbrirCajaVenta()\n        }\n\n    }\n\n    modalAbrirCajaVenta() {\n        let texto;\n        let contenedor = document.querySelector(\"#btn_abrirCerrarCaja\");\n                \n        if(this.state.estadoModalAbrirCajaVenta){\n            contenedor.classList.remove(\"btn-info\");\n            contenedor.classList.add(\"btn-primary\");\n            texto = \"ABRIR CAJA\"\n\n        }else{\n            contenedor.classList.remove(\"btn-primary\");\n            contenedor.classList.add(\"btn-info\");\n            texto = \"CONFIGURANDO CAJA\"\n            \n        }\n\n        this.setState({\n            estadoModalAbrirCajaVenta  : !this.state.estadoModalAbrirCajaVenta,\n            txt_btn_abriCerrarCaja      : texto\n        });\n        \n    }\n\n    modalCerrarCajaVenta() {\n        this.getTotalCierreCajaVenta();\n        let texto;\n        let contenedor = document.querySelector(\"#btn_abrirCerrarCaja\");\n                \n        if(this.state.estadoModalCerrarCajaVenta){\n            contenedor.classList.remove(\"btn-info\");\n            contenedor.classList.add(\"btn-danger\");\n            texto = \"CERRAR CAJA\"\n\n        }else{\n            contenedor.classList.remove(\"btn-danger\");\n            contenedor.classList.add(\"btn-info\");\n            texto = \"VISUALIZANDO CAJA\"\n            \n        }\n\n        this.setState({\n            estadoModalCerrarCajaVenta  : !this.state.estadoModalCerrarCajaVenta,\n            txt_btn_abriCerrarCaja      : texto,\n\n            loadModalCierreCajaVenta    : true\n        });\n        \n    }\n\n    getCambioTotalAperturo(e){\n        const {name , value} = e.target;\n        \n        this.setState({\n            totalAperturo  : value\n        })\n    }\n\n    getCambioObservacion(e){\n        const {name , value} = e.target;\n        \n        this.setState({\n            observacionesApertura  : value\n        })\n    }\n\n    sendAbrirCaja(imprimir){ //SI IMPRIMIR ES 1 IMPRIMIR, SI NO, NO IMPRIMIR\n        this.modalAbrirCajaVenta();\n        \n        cogoToast.loading(\n            <div>\n                <h4>APERTURANDO CAJA</h4>\n            </div>, \n            {\n                position: 'top-right'\n            }\n            \n        )\n        .then(() => {\n            fetch(config.api+`/caja/venta/aperturar`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token'                    : csrf_token,\n                        'observacionesApertura'     : this.state.observacionesApertura,    \n                        'totalApertura'             : this.state.totalApertura,\n                        'totalAperturo'             : this.state.totalAperturo,\n                    }),\n                    headers: {\n                        'Accept'        : 'application/json',\n                        'Content-Type'  : 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(response => response.json())\n            .then(data => {\n                \n                if(data['respuesta']){\n                    cogoToast.success(\n                        <div>\n                            <h4>LA APERTURA DE CAJA FUE EXITOSA</h4>\n                        </div>, \n                        {\n                        position: 'top-right'\n                        }\n                    );\n                    this.setState({\n                        // estadoModalAbrirCajaVenta  : !this.state.estadoModalAbrirCajaVenta,\n                        totalAperturo              : '',\n                        observacionesApertura      : '',\n                    });\n\n                    if(imprimir == 1){\n                        let url = `http://localhost/api/imprimir/aperturarCaja/`+data['idCaja'];\n                        cogoToast.loading(\n                            <div>\n                                <h4>IMPRIMIENDO APERTURA DE CAJA</h4>\n                            </div>, \n                            {\n                                position: 'top-right'\n                            }\n                            \n                        )\n                        .then(() => {\n                            fetch(\n                                url\n                            )\n                            .then(\n                                res => res.json()\n                            )\n                            .then(\n                                data => {\n                                    if(data['respuesta']){\n                                        cogoToast.success(\n                                            <div>\n                                                <h4>COPIA DE APERTURA DE CAJA FINALIZADA</h4>\n                                            </div>, \n                                            {\n                                            position: 'top-right'\n                                            }\n                                        );\n                                    }else{\n                                        cogoToast.error(\n                                            <div>\n                                                <h4>NO SE PUDO CONECTAR CON LA IMPRESORA</h4>\n                                            </div>, \n                                            {\n                                            position: 'top-right'\n                                            }\n                                        );\n                                    }\n                                }\n                            )\n                        });\n                    }\n\n                    this.getEstadoCajaVent();\n\n                }else{\n                    this.modalAbrirCajaVenta()\n                    cogoToast.error(\n                        <div>\n                            <h4>HUBO UN PROBLEMA AL MOMENTO DE APERTURAR CAJA</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n                }\n                \n            })\n        });\n        \n        \n    }\n\n    modalRegistrarGasto(){\n        console.log(this.state.estadoModalRegistrarGasto)\n        this.setState({\n            estadoModalRegistrarGasto  : !this.state.estadoModalRegistrarGasto,\n        })\n    }\n\n    modalRegistrarIngreso(){\n        this.setState({\n            estadoModalRegistrarIngreso  : !this.state.estadoModalRegistrarIngreso,\n        })\n    }\n\n    getCambioGastoIngreso(e){\n        const {name , value} = e.target;\n        \n        this.setState({\n            registrarGastoIngreso  : value\n        })\n    }\n\n    getCambioMotivoGastoIngreso(e){\n        const {name , value} = e.target;\n        \n        this.setState({\n            motivoGastoIngreso  : value\n        })\n    }\n\n\n\n    sendRegistrarGasto(){\n        console.log(\"Datos enviados:\");\n        console.log(this.state.idCajaVenta);\n        console.log(this.state.registrarGastoIngreso);\n        console.log(this.state.motivoGastoIngreso);\n\n\n\n        fetch(config.api+`/gasto/registrar`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token'          : csrf_token,\n                    'idCajaVenta'     : this.state.idCajaVenta,    \n                    'gasto'           : this.state.registrarGastoIngreso,\n                    'motivo'          : this.state.motivoGastoIngreso,\n                }),\n                headers: {\n                    'Accept'        : 'application/json',\n                    'Content-Type'  : 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            \n            console.log(data)\n            if(data['respuesta']){\n                this.activarToast('El gasto fue registrado correctamente', this.state.colorToastSuccess);\n                this.setState({\n                    estadoModalRegistrarGasto  : !this.state.estadoModalRegistrarGasto,\n                    registrarGastoIngreso              : '',\n                    motivoGastoIngreso                : '',\n                });\n\n            }else{\n                this.activarToast('Hubo un problema al momento de registrar el gasto', this.state.colorToastDanger)\n            }\n            \n        })\n    }\n\n    sendRegistrarIngreso(){\n        fetch(config.api+`/ingreso/registrar`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token'          : csrf_token,\n                    'idCajaVenta'     : this.state.idCajaVenta,    \n                    'ingreso'         : this.state.registrarGastoIngreso,\n                    'motivo'          : this.state.motivoGastoIngreso,\n                }),\n                headers: {\n                    'Accept'        : 'application/json',\n                    'Content-Type'  : 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            \n            console.log(data)\n            if(data['respuesta']){\n                this.activarToast('El ingreso fue registrado correctamente', this.state.colorToastSuccess);\n                this.setState({\n                    estadoModalRegistrarIngreso  : !this.state.estadoModalRegistrarIngreso,\n                    registrarGastoIngreso      : '',\n                    motivoGastoIngreso         : '',\n                });\n\n            }else{\n                this.activarToast('Hubo un problema al momento de registrar el ingreso', this.state.colorToastDanger)\n            }\n            \n        })\n    }\n\n    activarToast(message, color) {\n        this.setState({\n            mensajeToast : message,\n            colorToast   : color,\n            estadoToast  : true\n        });\n    }\n\n    render(){\n        return(\n            <header className=\"topbar\">\n                <nav className=\"navbar top-navbar navbar-expand-md navbar-dark\">\n                    <div className=\"navbar-header\">\n                        <a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"#\"><i className=\"ti-menu ti-close\"></i></a>\n                        <a className=\"navbar-brand d-block d-md-none\" href=\"#\">\n                            <b className=\"logo-icon\">\n                                <i className=\"wi wi-sunset\"></i> \n                                <img src={LogoIcon} alt=\"homepage\" className=\"dark-logo\" />\n                                <img src={LogoLightIcon} alt=\"homepage\" className=\"light-logo\" />\n                            </b>\n                            <span className=\"logo-text\">\n                                <img src={LogoText} alt=\"homepage\" className=\"dark-logo\" />\n                                <img src={LogoTextLight} className=\"light-logo\" alt=\"homepage\" />\n                            </span>\n                        </a>\n                        <div className=\"d-none d-md-block text-center\">\n                            <a className=\"sidebartoggler waves-effect waves-light d-flex align-items-center side-start\" href=\"#\" data-sidebartype=\"mini-sidebar\">\n                                <i className=\"mdi mdi-menu\"></i>\n                                <span className=\"navigation-text ml-3\"> Navegador</span>\n                            </a>\n                        </div>\n                        <a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"#\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"ti-more\"></i></a>\n                    </div>\n                    <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav float-left mr-auto\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link navbar-brand d-none d-md-block\" href=\"#\">\n                                    <b className=\"logo-icon\">\n                                        <i className=\"wi wi-sunset\"></i>\n                                        <img src={LogoIcon} alt=\"homepage\" className=\"dark-logo\" />\n                                        <img src={LogoLightIcon} alt=\"homepage\" className=\"light-logo\" />\n                                    </b>\n                                    <span className=\"logo-text\">\n                                            <img src={LogoText} alt=\"homepage\" className=\"dark-logo\" />\n                                            <img src={LogoTextLight} className=\"light-logo\" alt=\"homepage\" />\n                                    </span>\n                                </a>\n                            </li>\n                        </ul>\n                        <ul className=\"navbar-nav float-right\">\n                            <li className=\"nav-item \">\n                                <div className=\"nav-link dropdown-toggle waves-effect waves-dark\" aria-expanded=\"false\">\n                                    <button \n                                        type=\"button\" \n                                        className=\"btn waves-effect waves-light btn-rounded btn-warning\"\n                                        onClick={\n                                            this.modalRegistrarIngreso\n                                        }\n                                        >\n                                            Registrar Ingreso\n                                    </button>\n                                </div>\n                            </li>\n                            <li className=\"nav-item \">\n                                <div className=\"nav-link dropdown-toggle waves-effect waves-dark\" aria-expanded=\"false\">\n                                    <button \n                                        type=\"button\" \n                                        className=\"btn waves-effect waves-light btn-rounded btn-warning\"\n                                        onClick={\n                                            this.modalRegistrarGasto\n                                        }\n                                    >\n                                            Registrar Gasto\n                                    </button>\n                                </div>\n                            </li>\n                            <li className=\"nav-item dropdown mega-dropdown\">\n                                <div className=\"nav-link dropdown-toggle waves-effect waves-dark\" aria-expanded=\"false\">\n                                    {\n                                        this.state.estadoCajaVenta == true\n                                        ?<button \n                                            type=\"button\" \n                                            id=\"btn_abrirCerrarCaja\"\n                                            className=\"btn waves-effect waves-light btn-rounded btn-primary\"\n                                            onClick={this.abrirCerrarCajaVenta}\n                                            >\n                                                {this.state.txt_btn_abriCerrarCaja}\n                                        </button>\n                                        :<button>asd</button>\n                                    }\n                                    \n                                </div>\n                            </li>\n                            <li className=\"nav-item dropdown\">\n                                <a className=\"nav-link dropdown-toggle waves-effect waves-dark pro-pic\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <img src={User1} alt=\"user\" className=\"rounded-circle\" width=\"31\"/>\n                                    <span className=\"ml-2 user-text font-medium\">Endulzate</span><span className=\"fas fa-angle-down ml-2 user-text\"></span></a>\n\n                                <div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\n                                    <div className=\"d-flex no-block align-items-center p-3 mb-2 border-bottom\">\n                                        <div className=\"\"><img src={User1} alt=\"user\" className=\"rounded\" width=\"80\" /></div>\n                                        <div className=\"ml-2\">\n                                            <h4 className=\"mb-0\">Endulzate</h4>\n                                            <a href=\"#\" className=\"btn btn-sm btn-danger text-white mt-2 btn-rounded\">Ver perfil</a>\n                                        </div>\n                                    </div>\n                                    <a className=\"dropdown-item\" href=\"#\"><i className=\"ti-user mr-1 ml-1\"></i> Mi perfil</a>\n\n                                    <BtnCerrarSesion />\n                                    \n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n\n            {/* MODAL DE ABRIR CAJA */}\n            <Modal\n                size=\"lg\"\n                show={this.state.estadoModalAbrirCajaVenta}\n                onHide={() => this.modalAbrirCajaVenta()}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                        {this.state.txt_btn_abriCerrarCaja}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"card card-default\">\n                        <div className=\"modal-body\">\n                            <div className=\"card-body\">\n                                <div className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-6\">\n                                            <label>SUCURSAL</label>\n                                            <h4 className=\"card-title\">{this.state.sucursalNombre} </h4>\n                                        </div>\n                                        <div className=\"col-6\">\n                                            <label>USUARIO CONECTADO</label>\n                                            <h4 className=\"card-title\"> {this.state.usuarioNombre} </h4>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\" >\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <label>DINERO EN LA CAJA</label>\n                                            <h4 className=\"card-title\">{this.state.totalApertura } </h4>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\" >\n                                    <div className=\"row\"> \n                                        <div className=\"col-12\">\n                                            <label>Dinero para abrir caja</label>\n                                            <input \n                                                type        = \"text\" \n                                                className   = \"form-control\" \n                                                onChange    = {this.getCambioTotalAperturo}\n                                                autoFocus\n                                                value       = {this.state.totalAperturo} \n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <label>Comentario (opcional)</label>\n                                            <textarea \n                                                className   = \"form-control\" \n                                                rows        = \"3\" \n                                                placeholder = \"Comentario\"\n                                                onChange    = {this.getCambioObservacion}\n                                                value       = {this.state.observacionesApertura}\n                                            >\n\n                                            </textarea>\n                                        </div>                                        \n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <h4 className=\"card-title\">Si el dinero en la caja no cuadra con el del sistema, ingresar sin preocupaciones, dejando un comentario del asunto o acción realiza</h4>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group boton\">\n                                    <div className=\"row\">\n                                        <div className=\"col-6\">\n                                            <button \n                                                type=\"button\" \n                                                className=\"addexis form-control btn btn-block btn-success btn-lg\" \n                                                id=\"crearProducto\" \n                                                onClick={()=>this.sendAbrirCaja(1)}>\n                                                APERTURAR E IMPRIMIR CAJA</button>        \n                                        </div>\n                                        <div className=\"col-6\">\n                                            <button \n                                                type=\"button\" \n                                                className=\"addexis form-control btn btn-block btn-success btn-lg\" \n                                                id=\"crearProducto\" \n                                                onClick={()=>this.sendAbrirCaja(0)}>\n                                                APERTURAR CAJA</button>\n                                        </div>\n                                    </div>\n                                    \n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                </Modal>\n                \n\n\n                {/* MODAL DE CERRAR CAJA */}\n                <Modal\n                    size=\"lg\"\n                    show={this.state.estadoModalCerrarCajaVenta}\n                    onHide={() => this.modalCerrarCajaVenta()}\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\n                            {this.state.txt_btn_abriCerrarCaja}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {\n                            \n                            <CerrarCajaVentaComponente \n                                idCajaVenta     = {this.state.idCajaVenta}\n                                sucursalNombre  = {this.state.sucursalNombre}\n                                usuarioNombre   = {this.state.usuarioNombre}\n                                totalApertura   = {this.state.totalApertura}\n                                totalAperturo   = {this.state.totalAperturo}\n                                totalCierre     = {this.state.totalCierre}\n\n                                mensajeToast    = {this.state.mensajeToast}\n                                colorToast      = {this.state.colorToast}\n                                estadoToast     = {this.state.estadoToast}\n\n                                modalCerrarCajaVenta     = {this.modalCerrarCajaVenta}\n                                activarToast             = {this.activarToast}\n                                getEstadoCajaVent        = {this.getEstadoCajaVent}\n\n                                loadModalCierreCajaVenta =   {this.state.loadModalCierreCajaVenta}\n                            />\n                            \n                        }\n                        \n                        \n                    </Modal.Body>\n                </Modal>\n                \n                {/* MODAL DE REGISTRAR GASTO O INGRESO*/}\n                <Modal\n                    size=\"lg\"\n                    show={this.state.estadoModalRegistrarGasto}\n                    onHide={() => this.modalRegistrarGasto()}\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\n                            Registrar Gasto\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"card card-default\">\n                            <div className=\"modal-body\">\n                                <div className=\"card-body\">\n                                    <div className=\"form-group\" >\n                                        <div className=\"row\"> \n                                            <div className=\"col-12\">\n                                                <label>Gasto en soles </label>\n                                                <input \n                                                    type        = \"text\" \n                                                    className   = \"form-control\" \n                                                    onChange    = {this.getCambioGastoIngreso}\n                                                    autoFocus\n                                                    value       = {this.state.registrarGastoIngreso} \n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Motivo del gasto</label>\n                                                <textarea \n                                                    className   = \"form-control\" \n                                                    rows        = \"3\" \n                                                    placeholder = \"Motivo del gasto\"\n                                                    onChange    = {this.getCambioMotivoGastoIngreso}\n                                                    value       = {this.state.motivoGastoIngreso}\n                                                >\n\n                                                </textarea>\n                                            </div>                                        \n                                        </div>\n                                    </div>\n                                    <div className=\"form-group boton\">\n                                        <button \n                                            type=\"button\" \n                                            className=\"addexis form-control btn btn-block btn-success btn-lg\" \n                                            onClick={()=>this.sendRegistrarGasto()}>\n                                            Registrar Gasto</button>\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    </Modal>\n                    {/* MODAL DE REGISTRAR INGRESO*/}\n                    <Modal\n                        size=\"lg\"\n                        show={this.state.estadoModalRegistrarIngreso}\n                        onHide={() => this.modalRegistrarIngreso()}\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                        >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\n                                Registrar Ingreso\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"card card-default\">\n                                <div className=\"modal-body\">\n                                    <div className=\"card-body\">\n                                        <div className=\"form-group\" >\n                                            <div className=\"row\"> \n                                                <div className=\"col-12\">\n                                                    <label>Ingreso en soles </label>\n                                                    <input \n                                                        type        = \"text\" \n                                                        className   = \"form-control\" \n                                                        onChange    = {this.getCambioGastoIngreso}\n                                                        autoFocus\n                                                        value       = {this.state.registrarGastoIngreso} \n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <label>Motivo del ingreso de dinero</label>\n                                                    <textarea \n                                                        className   = \"form-control\" \n                                                        rows        = \"3\" \n                                                        placeholder = \"Motivo del gasto\"\n                                                        onChange    = {this.getCambioMotivoGastoIngreso}\n                                                        value       = {this.state.motivoGastoIngreso}\n                                                    >\n\n                                                    </textarea>\n                                                </div>                                        \n                                            </div>\n                                        </div>\n                                        <div className=\"form-group boton\">\n                                            <button \n                                                type=\"button\" \n                                                className=\"addexis form-control btn btn-block btn-success btn-lg\" \n                                                onClick={()=>this.sendRegistrarIngreso()}>\n                                                Registrar Ingreso</button>\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                        </Modal>\n\n                <Toast\n                    style={{\n                        position        : 'fixed',\n                        top             : 20,\n                        right           : 20,\n                        zIndex          :1060,\n                        backgroundColor : this.state.colorToast,\n                        color           :'white'\n                    }}\n                    onClose={() => this.setState({\n                        estadoToast: false\n                    })}\n                    show    ={this.state.estadoToast}\n                    delay   ={2500}\n                    autohide\n                    >\n                    <Toast.Body>\n                    <h3>{this.state.mensajeToast}</h3>\n                    </Toast.Body>\n                </Toast>\n            </header>\n            \n        )\n    }  \n}\n\nexport default Top\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport User1 from '../../Assets/assetsAdminTemplate/assets/images/users/1.jpg'\nimport config from '../../config'\n\nclass Sidebar extends Component{\n\n    constructor(){\n        super();\n        this.state ={\n\n\n\n        }\n        this.fetchLogout               = this.fetchLogout.bind(this);\n\n    }\n    fetchLogout(){\n        fetch(config.api+`/logout`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n            window.location.href = window.location.href;\n\n        })\n    }\n\n    render(){\n        return(\n            <aside className=\"material left-sidebar\">\n                <div className=\"scroll-sidebar\">\n                    <nav className=\"sidebar-nav\">\n                        <ul id=\"sidebarnav\">\n                            <li className=\"sidebar-item\">\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark profile-dd\" href=\"javascript:void(0)\" aria-expanded=\"false\">\n                                    <img src={User1} className=\"rounded-circle ml-2\" width=\"30\" />\n                                    <span className=\"hide-menu\">Endulzate</span>\n                                </a>\n                                <ul aria-expanded=\"false\" className=\"collapse  first-level\">\n                                    <li className=\"sidebar-item\">\n                                        <a href=\"javascript:void(0)\" className=\"sidebar-link\">\n                                            <i className=\"ti-user\"></i>\n                                            <span className=\"hide-menu\"> Mi perfil </span>\n                                        </a>\n                                    </li>\n\n                                    <li className=\"sidebar-item\">\n                                        <a href=\"javascript:void(0)\" className=\"sidebar-link\" onClick={this.fetchLogout}>\n                                            <i className=\"fas fa-power-off\"></i>\n                                            <span className=\"hide-menu\"> Logout </span>\n                                        </a>\n                                    </li>\n                                </ul>\n                            </li>\n\n                            <li className=\"sidebar-item\">\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\n                                    <i className=\"mdi mdi-apps\"></i>\n                                    <span className=\"hide-menu\">ALMACÉN</span>\n                                </a>\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                                <span className=\"hide-menu\" >\n                                                    Almacén\n                                                </span>\n                                        </Link>\n                                    </li>\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-transferencias\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\" >Transferencias</span>\n                                        </Link>\n                                    </li>\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-entrada\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\" >Entradas</span>\n                                        </Link>\n                                    </li>\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-proveedor\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\" >Proveedores</span>\n                                        </Link>\n                                    </li>\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-tiposproductos\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\">Tipos de producto</span>\n                                        </Link>\n                                    </li>\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-marcas\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\" >Marcas</span>\n                                        </Link>\n                                    </li>\n\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-cargar-data\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\" >Carga de Data</span>\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </li>\n\n                            \n\n\n\n\n                            <li className=\"sidebar-item\">\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\n                                    <i className=\"mdi mdi-shopping\"></i>\n                                    <span className=\"hide-menu\">VENTAS</span>\n                                </a>\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\n                                    <li className=\"sidebar-item\">\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/ventas\">\n                                            <i className=\"mdi mdi-calendar-check\"></i>\n                                            <span className=\"hide-menu\">Ventas</span>\n                                        </Link>\n                                    </li>\n                                    <li className=\"sidebar-item\">\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/ventasdetalladas\">\n                                            <i className=\"mdi mdi-calendar-check\"></i>\n                                            <span className=\"hide-menu\">Ventas Detalladas</span>\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </li>\n\n                            <li className=\"sidebar-item\">\n                                <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/seguimientos\">\n                                    <i className=\"mdi mdi-notification-clear-all\"></i>\n                                    <span className=\"hide-menu\" >SEGUIMIENTO DE PRODUCTO</span>\n                                </Link>\n                            </li>\n                            \n                            \n                            <li className=\"sidebar-item\">\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\n                                    <i className=\"mdi mdi-table\"></i>\n                                    <span className=\"hide-menu\">CAJAS</span>\n                                </a>\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\n                                    <li className=\"sidebar-item\">\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/caja\">\n                                            <i className=\"mdi mdi-calendar-check\"></i>\n                                            <span className=\"hide-menu\">Gestionar Caja</span>\n                                        </Link>\n                                    </li>\n\n                                    <li className=\"sidebar-item\">\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/caja-ingresos\">\n                                            <i className=\"mdi mdi-calendar-check\"></i>\n                                            <span className=\"hide-menu\">Gestionar Ingresos</span>\n                                        </Link>\n                                    </li>\n\n                                    <li className=\"sidebar-item\">\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/caja-gastos\">\n                                            <i className=\"mdi mdi-calendar-check\"></i>\n                                            <span className=\"hide-menu\">Gestionar Gastos</span>\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </li>\n                            \n                            <li className=\"sidebar-item\">\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\n                                    <i className=\"mdi mdi-settings\"></i>\n                                    <span className=\"hide-menu\">CONFIGURACIÓN</span>\n                                </a>\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/configuracion-usuarios\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\" >Usuarios</span>\n                                        </Link>\n                                    </li>\n                                    <li className=\"sidebar-item\">\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/configuracion-ofertas\">\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\n                                            <span className=\"hide-menu\" >Ofertas</span>\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </aside>\n        )\n    }\n\n\n}\n\nexport default Sidebar\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Footer = () => (\n\n    <footer className=\"footer text-center\">\n        Todos los derechos reservados para:\n        <a href=\"#\">Endulzate</a>.\n    </footer>\n\n)\n\nexport default Footer\n","\nimport React from 'react'\nimport {Component} from 'react';\n\n\nclass ListProductComponent extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n\n            precio: '',\n            cantidad:'',\n            importe:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange (e){\n        const {name , value} = e.target;\n        this.setState({\n            [name] : value\n\n        })\n        console.log(name);\n\n    }\n\n\n    render(){\n        return(\n\n            <div className=\"form-group\">\n              <div className=\"row\">\n                      <div className=\"col-2\">\n                         <label>Producto de entrada</label><br/>\n                         <input type=\"text\" name=\"productoEntradaChild\" className=\"form-control\" onKeyDown={this.props.handleKeyDown} onFocus={()=>this.props.handleScope(this.props.number)} autoFocus />\n                        </div>\n                        <div className=\"col-2\">\n                            <label>Nombre</label><br/>\n                            <input type=\"text\" name=\"productoEntrada\" className=\"form-control\" value={this.props.name}/>\n                        </div>\n                        <div className=\"col-2 precioCompraContainer\">\n                              <label>Precio de compra</label>\n                              <input type=\"number\" name=\"precioProductoChild\" id=\"precio\" className=\"form-control precioCompra\"\n                                 pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.props.precioProductoChild} data-type=\"currency\" placeholder=\"S/\" onChange={this.props.handleChange} onFocus={()=>this.props.handleScope(this.props.number)}/>\n                        </div>\n                        <div className=\"col-2 cantidadCompraContainer\">\n                              <label>Cantidad</label>\n                              <input type=\"number\" className=\"form-control cantidadProductoEntrada\" name=\"cantidadProductoChild\" id=\"cantidad\" value={this.props.cantidadProductoChild} onChange={this.props.handleChange} onFocus={()=>this.props.handleScope(this.props.number)}/>\n                        </div>\n                        <div className=\"col-1\">\n                            <label>Stock</label>\n                            <input type=\"text\" className=\"form-control cantidadProductoEntrada\" name=\"stock\" value={this.props.stock} />\n                        </div>\n                        <div className=\"col-2 importeCompraContainer\">\n                                <label>Importe</label>\n                                 <input type=\"text\" name=\"importe[]\" id=\"importe\" className=\"form-control \" pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.props.importeChild} data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange}/>\n                         </div>\n                         <div className=\"col-1\">\n                                  <br/>\n                                <button type=\"button\" className=\"btn btn-danger btn-rounded btn-icon remove\" onClick={()=>this.props.quitarOpcion(this.props.number)}><i className=\"mdi mdi-close\"></i></button>\n                         </div>\n\n              </div>\n        </div>\n         ) }}\n\n    export default ListProductComponent\n","import React from 'react'\nimport {Component} from 'react';\nimport ListProductComponent from './componentsExtras/listProductComponent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\nimport format from 'date-fns/format';\nimport es from 'date-fns/locale/es';\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport config from '../../config'\n\nclass EntradaCrear extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n            contador:[],\n            contadorNumero:0,\n            nada:'',\n\n            numerox:0,\n            modo:0,\n            nombreProducto:'',\n            precioProducto:'',\n            scopeNumero:'',\n            cantidad:'',\n            stock:'',\n            importe:'',\n\n            tasks:'',\n            proveedores:[],\n            //code\n            code:'',\n            //modales\n            estadoModalProducto:false,\n            //toasts\n            estadoToastRed:false,\n            estadoToastGreen:false,\n            messageRed:'',\n            messageGreen:'',\n\n            //---ac\n            idProducto:'',\n            //\n            nowday:'',\n\n            //emitir\n            idProveedor:'',\n            idFactura:'',\n            datepick:'',\n\n            enviarCantidad:'',\n            enviarPrecioProducto:'',\n            enviarIdProducto:'',\n\n            precio_array:[],\n            cantidad_array:[],\n            idProducto_array:[],\n            //modal agregar productos\n            idMarca:'',\n            idTipo:'',\n            precioVentaProducto:'',\n            codigoProductoNuevo:'',\n            nombreProductoNuevo:'',\n            tasksM:[],\n            tasksTP:[],\n            tiposproductos_tb:[],\n            marcas_tb:[],\n\n            proveedores_t:[],\n            nuevoTipoProducto:''\n          }\n        this.quitarOpcion = this.quitarOpcion.bind(this);\n        this.fetchDatos = this.fetchDatos.bind(this);\n        this.handleKeyDown=this.handleKeyDown.bind(this);\n        this.handleKeyDown2=this.handleKeyDown2.bind(this);\n        this.scope=this.scope.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n        this.sendAgregarEntrada=this.sendAgregarEntrada.bind(this);\n        this.handleChangeTime=this.handleChangeTime.bind(this);\n        this.quitarScope=this.quitarScope.bind(this);\n\n    }\n\n\n    handleChangeTime (date){\n        this.setState({\n            datepick: format(date, 'yyyy-MM-dd'),\n            nowday: date\n        });\n        console.log(this.state.datepick);\n    };\n\n\n\n//tiposProductos del modal\n      sendAgregarTipoProducto(){\n\n              fetch(config.api+`/almacen/tipo/crear`,\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                      // '_token': csrf_token,\n                      nuevoTipoProducto: this.state.nuevoTipoProducto\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n\n                  }\n              }\n          )\n          .then(res =>res.json())\n          .then(data => {\n                if(data.response==true){\n                  console.log(\"exito\");\n                  this.cambiarToastGreen(\"el tipo de producto\",'true');\n                  this.fetchAgregarTipo();\n                }\n                else{\n                  console.log(\"error\");\n                  this.cambiarToastRed(\"en agregar Tipo producto\",'true');\n                }\n\n          }).catch((error)=> {\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\n            this.cambiarToastRed(\"en agregar Tipo producto\",'true');\n          });  }\n\n    fetchAgregarTipo(){\n              fetch(\n                config.api+'/almacen/tiposproductos/tb_tiposProductos',\n                {\n                  method: 'GET',\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n                  }\n              }\n              )\n                      .then(res => res.json())\n                      .then(data => {\n                          this.setState({tiposproductos_tb: data}, () => {\n                              this.suprimirDatos();\n                          });\n              })\n          }\n\n\n//modall\nsuprimirDatos(operacion){\n        let x = [];\n        let y = [] ;\n        let z = [];\n        let b = [];\n        let q = [];\n        let r = [];\n        \n        if(this.state.marcas_tb.data){\n          this.state.marcas_tb.data.map(task=>{\n              x.push({\n                  nombre: task.nombre,\n                  id: task.id\n              });\n          })\n        }\n        b = [ ...new Map(x.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\n\n        if(this.state.tiposproductos_tb.data){\n            this.state.tiposproductos_tb.data.map(task=>{\n               y.push({\n                  nombre: task.nombre,\n                  id: task.id\n                });\n            })\n            q = [ ...new Map(y.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\n        }\n        \n        if(this.state.proveedores.data){\n          this.state.proveedores.data.map(task=>{\n              z.push(\n                task.id\n                );\n          })\n        }\n\n        if(operacion=='op2'){\n          this.setState({\n              proveedores_t: z\n          },()=>this.operacionScope2())\n        }\n        else{\n        this.setState({\n            tasksM: b,\n            tasksTP: q,\n        },()=>this.operacionScope())\n      }\n    }\n      operacionScope(){\n\n        let x = this.state.tasksM[0];\n        let y = this.state.tasksTP[0];\n\n        if(x && y){\n        let idMarca = x.id;\n        let idTipo = y.id;\n\n        this.setState({\n          idMarca: idMarca,\n          idTipo: idTipo\n        },()=>console.log(this.state.idMarca, this.state.idTipo))\n      }\n\n\n      }\n      operacionScope2(){\n\n        let x = this.state.proveedores_t[0];\n\n        let idProveedor = x;\n        console.log(idProveedor);\n        this.setState({\n          idProveedor: idProveedor,\n        },()=>console.log(this.state.idProveedor))\n\n\n      }\n\n//toasts y modales\n      cambiarToastRed(message,accion) {\n          if(accion=='true'){\n          this.setState({\n              messageRed: message,\n              estadoToastRed: true\n          });}\n          else{\n            this.setState({\n                estadoToastRed: false\n            });\n          }\n\n      }\n      cambiarToastGreen(message,accion) {\n          if(accion=='true'){\n          this.setState({\n              messageGreen: message,\n              estadoToastGreen: true\n          });}\n          else{\n            this.setState({\n                estadoToastGreen: false\n            });}\n          }\n\n      cambiarModalProducto() {\n          this.setState({\n              estadoModalProducto: !this.state.estadoModalProducto\n          });\n      }\n      sendAgregarProducto(name){\n\n          fetch(config.api+`/almacen/producto/crear`,\n          {\n              method: 'POST',\n              body: JSON.stringify({\n                  // '_token': csrf_token,\n                  precioVentaProducto:this.state.precioVentaProducto,\n                  codigoProductoNuevo:this.state.codigoProductoNuevo,\n                  marcaProducto:this.state.idMarca,\n                  tipoProducto:  this.state.idTipo,\n                  nombreProductoNuevo: this.state.nombreProductoNuevo\n              }),\n              headers: {\n                  'Accept' : 'application/json',\n                  'Content-Type': 'application/json',\n                  'usuid'         : localStorage.getItem('usuid')\n\n              }\n            }\n            )\n            .then(res =>res.json())\n            .then(data => {\n                if(data.response==true){\n                  console.log(\"exito\");\n                  this.cambiarToastGreen(\"el producto\",'true');\n                  if(this.state.scopeNumero){\n                    this.generateComponents(\n                      this.state.nombreProductoNuevo,\n                      this.state.scopeNumero,\n                      0,\n                      0,\n                      data.idProducto,\n                    );\n                    this.cambiarModalProducto();\n                  }\n                  else{\n                  this.generateComponents(\n                      this.state.nombreProductoNuevo,\n                      this.state.numerox,\n                      0,\n                      0,\n                      data.idProducto,);\n                  this.cambiarModalProducto();\n                }\n\n                }\n                else{\n                  console.log(\"error\");\n                  this.cambiarToastRed(\"en agregar producto\",'true');\n                }\n\n\n            }).catch((error)=> {\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\n              this.cambiarToastRed(\"en agregar producto\",'true');\n            });  }\n\n\n//-----------------------------------------------------------|\n\n\n\n    generateComponents(nombre,numero,precio,stock,idProducto){\n\n        var a = [...this.state.contador];\n        if(numero==0){\n          console.log(a);\n          a.push({\n              numero: this.state.contadorNumero+1,\n              nombre: '',\n              precio: 0,\n              stock:'',\n              cantidad:'',\n              idProducto:'',\n              importe:''\n          });\n          this.setState({\n            contador: a,\n            nombreProducto: nombre,\n            precioProducto: precio,\n            stock: stock,\n            cantidad: 0,\n            idProducto: idProducto,\n            contadorNumero: this.state.contadorNumero+1,\n            numerox: this.state.numerox+1,\n            modo: this.state.modo+1\n          })\n\n      }\n\n        if(numero!==0){\n          console.log(numero);\n          a.push({\n              numero: this.state.contadorNumero+1,\n              nombre: '',\n              precio: 0,\n              stock:'',\n              cantidad: '',\n              idProducto:'',\n              importe:''\n          });\n          a.forEach(function(obj){\n            if(obj.numero == numero){\n              obj.nombre = nombre;\n              obj.precio = precio;\n              obj.stock= stock;\n              obj.idProducto = idProducto;\n            }\n          })\n          console.log(a);\n          this.setState({\n            contador: a,\n            contadorNumero: this.state.contadorNumero+1\n          })\n\n      }\n    }\n\n    quitarOpcion(numero){\n        console.log(numero);\n\n        var array =[...this.state.contador];\n        var index = this.state.contador.findIndex(i=> i.numero === numero)\n        if(index>-1){\n          array.splice(index,1)\n          var k = array.length;\n          console.log(k);\n          console.log(array)\n          if(k==0){\n            this.setState({\n              numerox: 0,\n              modo:0\n            })\n          }\n          this.setState({\n            contador: array,\n          })\n        }\n    }\n\n    fetchDatos(){\n        fetch(\n          config.api+'/almacen/tb_almacen',\n          {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n        )\n                .then(res => res.json())\n                .then(data => {\n                    this.setState({tasks: data},()=> console.log(this.state.tasks));\n\n            })\n\n        fetch(\n          config.api+'/almacen/proveedores/tb_proveedores',\n          {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n        )\n                 .then(res => res.json())\n                .then(data => {\n                    this.setState({proveedores: data},()=> {\n                      console.log(data);\n                      this.suprimirDatos('op2');\n                    });\n\n            })\n        fetch(\n          config.api+'/almacen/tiposproductos/tb_tiposProductos',\n          {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n        )\n                        .then(res => res.json())\n                        .then(data => {\n                            this.setState({tiposproductos_tb: data});\n                })\n\n        fetch(\n          config.api+'/almacen/marcas/tb_marcas',\n          {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n        )\n                .then(res => res.json())\n                .then(data => {\n                this.setState({marcas_tb: data});\n            })\n    }\n    scope(numero){\n      console.log(numero);\n      this.setState({\n        scopeNumero: numero\n      })\n    }\n    quitarScope(){\n        this.setState({\n          scopeNumero: 0\n        })\n    }\n    comprobarCode(name){\n      fetch(config.api+'/producto/buscar',\n          {\n              method: 'POST',\n              body: JSON.stringify({\n                  // '_token': csrf_token,\n                  codigoProducto: this.state.code\n              }),\n              headers: {\n                  'Accept' : 'application/json',\n                  'Content-Type': 'application/json',\n                  'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n                )\n\n              .then(res => res.json())\n              .then(data => {\n\n                if(data.response == true){\n                  console.log(data);\n                  this.cambiarToastGreen(\"El producto ya existe\",'true');\n                  if(name==\"productoEntradaChild\"){\n                    this.generateComponents(data.producto.nombre,this.state.scopeNumero,0,data.producto.cantidad\n                    ,data.producto.id);\n                  }\n                  else{\n                  this.generateComponents(data.producto.nombre,this.state.numerox,0,data.producto.cantidad\n                  ,data.producto.id);\n                }\n              }\n                else{\n                  if(name==\"productoEntradaChild\"){\n                    this.suprimirDatos();\n                    this.cambiarModalProducto();\n                  }\n                  else{\n                    this.quitarScope();\n                    this.suprimirDatos();\n                    this.cambiarModalProducto();\n                  }\n\n                }\n\n          })\n    }\n    comprobarCodeProducto(){\n      fetch(config.api+'/producto/buscar',\n          {\n              method: 'POST',\n              body: JSON.stringify({\n                  // '_token': csrf_token,\n                  codigoProducto: this.state.code\n              }),\n              headers: {\n                  'Accept' : 'application/json',\n                  'Content-Type': 'application/json',\n                  'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n                )\n\n              .then(res => res.json())\n              .then(data => {\n                if(data.response == true){\n                  console.log(data);\n                  this.cambiarToastRed(\"El producto ya existe\",'true');\n                }\n                else{\n                  console.log(data)\n                  this.cambiarToastGreen(\"El producto no existe\",'true');\n                }\n\n          })\n    }\n    operacionClean(){\n      if(this.state.numerox==0){\n                fetch(config.api+`/almacen/entrada/crear`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token': csrf_token,\n                        proveedor: this.state.idProveedor,\n                        factura: this.state.idFactura,\n                        fecha: this.state.datepick,\n\n                        precio: this.state.enviarPrecioProducto,\n                        cantidad: this.state.enviarCantidad,\n                        producto: this.state.enviarIdProducto,\n\n\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n\n                    }\n                }\n            )\n            .then(res =>res.json())\n            .then(data => {\n                if(data.response==true){\n                  console.log(\"exito\");\n                  this.cambiarToastGreen(\"la entrada\",'true');\n                  this.fetchDatos();\n                  this.props.addContainer();\n                }\n                else{\n                  console.log(\"error\");\n                  this.cambiarToastRed(\"en agregar entrada\",'true');\n                }\n\n            }).catch((error)=> {\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\n              this.cambiarToastRed(\"en agregar entrada\",'true');\n            });  }\n      else{\n              fetch(config.api+`/almacen/entrada/crear`,\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                      // '_token': csrf_token,\n                      proveedor: this.state.idProveedor,\n                      factura: this.state.idFactura,\n                      fecha: this.state.datepick,\n                      precio: this.state.precio_array,\n                      cantidad: this.state.cantidad_array,\n                      producto: this.state.idProducto_array,\n\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n\n                  }\n              }\n          )\n          .then(res =>res.json())\n          .then(data => {\n              if(data.response==true){\n                console.log(\"exito\");\n                this.cambiarToastGreen(\"la entrada\",'true');\n                this.fetchDatos();\n                this.props.addContainer();\n\n              }\n              else{\n                console.log(\"error\");\n                this.cambiarToastRed(\"en agregar entrada\",'true');\n              }\n\n          }).catch((error)=> {\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\n            this.cambiarToastRed(\"en agregar entrada\",'true');\n          });  }\n\n    }\n\n    sendAgregarEntrada(){\n\n      var x= [this.state.precioProducto];\n      var y= [this.state.cantidad];\n      var z= [this.state.idProducto];\n\n      if(this.state.numerox==0){\n        this.setState({\n          enviarPrecioProducto: x,\n          enviarCantidad: y,\n          enviarIdProducto: z,\n        }, ()=>{\n          console.log(this.state.enviarPrecioProducto,this.state.enviarCantidad,this.state.enviarIdProducto);\n          this.operacionClean();\n        })\n      }\n      else{\n        var data= [...this.state.contador];\n        data.map((e)=>{\n          if(e.idProducto!=''){\n            x.push(e.precio);\n            y.push(e.cantidad);\n            z.push(e.idProducto);\n          }\n        })\n        console.log(x,y,z);\n        this.setState({\n          precio_array: x,\n          cantidad_array:y,\n          idProducto_array:z\n        },()=>{\n          this.operacionClean();\n        }\n        )\n      }\n     }\n\n\n    handleKeyDown(e){\n      if(e.key === 'Enter'){\n        console.log('hacer validacion');\n        console.log(e.target.name);\n        var name = e.target.name;\n        this.setState({code: e.target.value},()=>this.comprobarCode(name));\n      }\n    }\n    handleKeyDown2(e){\n      if(e.key === 'Enter'){\n        console.log('hacer validacion');\n        console.log(e.target.name);\n        var name = e.target.name;\n        this.setState({code: e.target.value},()=>this.comprobarCodeProducto());\n      }\n    }\n\n    handleChange (e){\n           const {name , value} = e.target;\n           if(name=='cantidadProducto'){\n             var calculo = (this.state.precioProducto * value);\n               this.setState({\n                 cantidad: value,\n                 importe: calculo\n               })\n\n           }\n           if(name=='precioProducto'){\n            var calculo = (this.state.cantidad * value);\n              this.setState({\n                precioProducto: value,\n                importe: calculo\n                })\n\n          }\n\n           if(name=='cantidadProductoChild'){\n             var p = [...this.state.contador];\n              p.forEach((a)=>{\n                console.log(value);\n                if(a.numero==this.state.scopeNumero){\n                   a.cantidad = value;  a.importe = (a.precio * value);}\n              })\n\n                this.setState({\n                  contador: p\n                },()=>console.log(p))\n\n           }\n            if(name=='precioProductoChild'){\n               var p = [...this.state.contador];\n                p.forEach((a)=>{\n                  console.log(value);\n                  if(a.numero==this.state.scopeNumero){\n                     a.precio = value; a.importe = (a.cantidad * value) ;}\n                })\n\n                  this.setState({\n                    contador: p\n                  },()=>console.log(p))\n\n           }\n           else{\n             this.setState({\n                 [name] : value\n\n             })\n           }\n\n           console.log(name);\n           console.log(value);\n\n       }\n\n    componentDidMount(){\n        this.fetchDatos();\n    }\n\n\n\n\n    render(){\n        return(\n            <div className=\"col-lg-12 grid-margin stretch-card\">\n                    <div className=\"card card-default\">\n                        <div className=\"card-header cabezera\">\n                            <h4> Agregar Entrada </h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"card-body\">\n                                    <input type='hidden' value='1' name= \"cantidadProductos\" id=\"cantidadProductos\"/>\n                                    <input type='hidden' value='0' name= \"agregandoProveedor\" id=\"agregandoProveedor\"/>\n                                    <input type='hidden' value='0' name= \"agregandoProducto\" id=\"agregandoProducto\"/>\n\n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-6\">\n                                                <label>Selecciona al proveedor</label>\n                                                <div>\n                                                    <select className=\"form-control listProductos\" name=\"idProveedor\" id=\"proveedores\" style={{width: '90%'}} onChange={this.handleChange} value={this.state.idProveedor}>\n\n                                                        {\n                                                            this.state.proveedores.data?\n                                                            this.state.proveedores.data.map((data)=>{\n\n                                                               return(\n                                                                <option key={data.id} value={data.id} > {data.nombre} </option>\n                                                               )\n                                                            }\n                                                            )\n                                                            :null\n                                                        }\n\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <label>Numero de factura</label>\n                                                <input type=\"text\" className=\"form-control\" name=\"idFactura\" id=\"factura\" onChange={this.handleChange}/>\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <label>Fecha</label><br/>\n                                                <DatePicker locale=\"es\" selected={this.state.nowday} onChange={this.handleChangeTime} />\n                                             </div>\n\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\" id=\"listProductos\" name=\"this.props.number\" >\n                                        <div className=\"row\">\n                                            <div className=\"col-2\">\n                                                <label>Producto de entrada</label><br/>\n                                                <input type=\"text\" name=\"productoEntrada\" className=\"form-control\" onKeyDown={this.handleKeyDown} />\n                                            </div>\n                                            <div className=\"col-2\">\n                                                <label>Nombre</label><br/>\n                                                <input type=\"text\" name=\"productoEntrada\" className=\"form-control\" value={this.state.nombreProducto}/>\n                                            </div>\n                                            <div className=\"col-2 precioCompraContainer\">\n                                                <label>Precio de compra</label>\n                                                <input type=\"number\" name=\"precioProducto\" id=\"precioProducto\" className=\"form-control precioCompra\"\n                                                    pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.state.precioProducto} data-type=\"currency\" placeholder=\"S/\" onChange={this.handleChange}/>\n                                            </div>\n                                            <div className=\"col-2 cantidadCompraContainer\">\n                                                <label>Cantidad</label>\n                                                <input type=\"number\" className=\"form-control cantidadProductoEntrada\" name=\"cantidadProducto\" value={this.state.cantidad} id=\"cantidadProducto\" onChange={this.handleChange}/>\n                                            </div>\n                                            <div className=\"col-1\">\n                                                <label>Stock</label>\n                                                <input type=\"text\" className=\"form-control cantidadProductoEntrada\" name=\"stock\" value={this.state.stock} />\n                                            </div>\n                                            <div className=\"col-2 importeCompraContainer\">\n                                                <label>Importe</label>\n                                                <input type=\"text\" name=\"importe[]\" id=\"importe\" className=\"form-control \" pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.state.importe} data-type=\"currency\" placeholder=\"S/1,000,000.00\"/ >\n                                            </div>\n                                            <div className=\"col-1\">\n                                                <br/>\n                                                <button type=\"button\" className=\"btn btn-warning btn-rounded btn-icon \" id=\"agregarNuevoProducto\" >\n                                                    <i className=\"mdi mdi-plus\"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                     {\n                                        this.state.contador?\n                                        this.state.contador.map((data)=>{\n                                             return(\n                                              <ListProductComponent key={data.numero} number={data.numero}  name={data.nombre} quitarOpcion={this.quitarOpcion} handleScope={this.scope} handleChange={this.handleChange} handleKeyDown={this.handleKeyDown}\n                                               precioProductoChild={data.precio} cantidadProductoChild={data.cantidad} stock={data.stock}  idProducto={data.idProducto} importeChild={data.importe}/>\n                                             )\n                                           }\n                                        )\n                                        :null\n\n                                     }\n\n\n                                    <div className=\"form-group\">\n                                        <button type=\"button\" id=\"agregarProducto\" className=\"btn btn-primary btn-rounded btn-fw \" onClick={()=>this.generateComponents()}>Agregar producto</button>\n                                    </div>\n\n                                    <div className=\"form-group boton\">\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearEntrada\" onClick={()=>this.sendAgregarEntrada()}>\n                                            Agregar</button>\n                                    </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Modal\n                        show={this.state.estadoModalProducto}\n                        onHide={() => this.cambiarModalProducto()}\n                        >\n                        <Modal.Header closeButton>\n                          <Modal.Title id=\"example-custom-modal-styling-title\">\n                            Agregar Producto\n                          </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                        <div className=\"card card-default\">\n                           <div className=\"card-header cabezera\">\n                               <div className=\"form-group row\">\n                                               <div className=\"col-sm-6\">\n                                                       <div className=\"form-check\">\n                                                       <label className=\"form-check-label\">\n                                                           <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"cerrarProducto\" value=\"1\" defaultChecked=\"\"/>\n                                                           Cerrar automaticamente\n                                                       <i className=\"input-helper\"></i></label>\n                                                       </div>\n                                                   </div>\n                                                   <div className=\"col-sm-6\">\n                                                       <div className=\"form-check\">\n                                                       <label className=\"form-check-label\">\n                                                           <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"abrirProducto\" value=\"0\"/>\n                                                           Mantenerla abierta\n                                                       <i className=\"input-helper\"></i></label>\n                                                       </div>\n                                                   </div>\n                                           </div>\n                                   </div>\n                               <div className=\"modal-body\">\n                                   <div className=\"card-body\">\n                                           <div className=\"form-group\">\n                                               <div className=\"row\">\n                                                   <div className=\"col-12\">\n                                                       <label>Nuevo tipo de producto</label>\n                                                       <div className=\"input-group\">\n                                                           <input type=\"text\" placeholder=\"Si no existe el tipo de producto agregalo\" className=\"form-control\" name=\"nuevoTipoProducto\" id=\"nuevoTipoProducto\" onChange={this.handleChange}  value={this.state.nuevoTipoProducto}/>\n                                                           <div className=\"input-group-append\">\n                                                               <button  id=\"crearTipoProducto\"  className=\"btn form-control btn-sm btn-primary\" type=\"button\" onClick={()=>this.sendAgregarTipoProducto()}><i className=\"mdi mdi-plus\"></i></button>\n                                                           </div>\n                                                       </div>\n\n                                                   </div>\n                                               </div>\n                                           </div>\n                                           <div className=\"form-group\" >\n                                               <div className=\"row\">\n                                                   <div className=\"col-12\">\n                                                       <label>Codigo</label>\n                                                       <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\" value={this.state.codigoProductoNuevo} onChange={this.handleChange} onKeyDown={this.handleKeyDown2}/>\n                                                   </div>\n                                                   <div className=\"col-12\" id=\"alertaCodigo\">\n                                                   </div>\n                                               </div>\n                                           </div>\n                                           <div className=\"form-group\">\n                                               <div className=\"row\">\n                                                   <div className=\"col-6\">\n                                                       <label>Marcas</label>\n                                                       <div className=\"input-group\">\n                                                           <select className=\"form-control\" name=\"idMarca\" id=\"marcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\n                                                               {\n                                                                   this.state.tasksM ?\n                                                                   this.state.tasksM.map(element => {\n                                                                       return (\n                                                                           <option value={element.id}  >{element.nombre}</option>\n                                                                           );\n                                                                   })\n                                                                   :null\n                                                               }\n                                                           </select>\n                                                       </div>\n                                                   </div>\n                                                   <div className=\"col-6\">\n                                                       <label>Tipos de prodcuto</label>\n                                                       <div className=\"input-group\">\n                                                           <select className=\"form-control\" name=\"idTipo\" id=\"tipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo}>\n                                                               {\n                                                                   this.state.tasksTP ?\n                                                                   this.state.tasksTP.map(element=>{\n                                                                   return (\n                                                                   <option value={element.id}>{element.nombre}</option>\n                                                                   );\n                                                               })\n                                                                : null\n                                                               }\n                                                           </select>\n                                                       </div>\n                                                   </div>\n                                               </div>\n                                           </div>\n                                           <div className=\"form-group\">\n                                               <div className=\"row\">\n                                                   <div className=\"col-12\">\n                                                       <label>Nombre del producto</label>\n                                                       <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\" onChange={this.handleChange} value={this.state.nombreProductoNuevo}/>\n                                                   </div>\n                                               </div>\n                                           </div>\n                                           <div className=\"form-group\">\n                                               <div className=\"row\">\n\n                                                 { /* <div className=\"col-6\">\n                                                       <label>Precio de venta</label>\n                                                       <input type=\"text\" name=\"precioVentaProductoSinIGV\" id=\"precioVentaProductoSinIGV\" className=\"form-control\"\n                                                           pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" defaultValue=\"\" data-type=\"currency\" placeholder=\"S/1,000,000.00\"/>\n                                                           </div> */}\n\n                                                   <div className=\"col-6\">\n                                                       <label>Precio con IGV(18%)</label>\n                                                       <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\n                                                           pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange} value={this.state.precioVentaProducto}/>\n                                                   </div>\n                                               </div>\n                                           </div>\n\n\n                                           <div className=\"form-group boton\">\n                                               <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\" onClick={()=>this.sendAgregarProducto()}>\n                                                   Agregar</button>\n                                           </div>\n                                        </div>\n                                   </div>\n                               </div>\n                        </Modal.Body>\n                      </Modal>\n\n\n\n\n                    <Toast\n                          style={{\n                          position: 'fixed',\n                          top: 5,\n                          right: 5,\n                          zIndex:1060,\n                          backgroundColor: 'rgba(76,208,76,0.7)',\n                          color:'white'\n                          }}\n                          onClose={() => this.cambiarToastGreen()}\n                          show={this.state.estadoToastGreen}\n                          delay={3000}\n                          autohide\n                          >\n                            <Toast.Body>\n                              <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\n                            </Toast.Body>\n                      </Toast>\n\n                    <Toast\n                            style={{\n                            position: 'fixed',\n                            top: 5,\n                            right: 5,\n                            zIndex:1061,\n                            backgroundColor: 'rgba(205,55,55,0.7)',\n                            color:'white'\n                              }}\n                            onClose={() => this.cambiarToastRed()}\n                            show={this.state.estadoToastRed}\n                            delay={3000}\n                            autohide\n\n                      >\n                        <Toast.Body>\n                          <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\n                        </Toast.Body>\n                    </Toast>\n\n\n                </div>\n)\n        }}\nexport default EntradaCrear\n","import React from 'react'\nimport {Component} from 'react';\nimport Modal from 'react-bootstrap/Modal'\n\n\nclass CerrarCaja extends Component {\n\n    constructor(){\n        super();\n        this.state ={}\n    }\n\n\n render (){\n   return(\n\n     <Modal\n        size='lg'\n        show={this.props.estadoModalCerrarCaja}\n        onHide={()=> this.props.cambiarModalCerrarCaja()}\n\n       >\n           <Modal.Header closeButton>\n             <Modal.Title id=\"example-custom-modal-styling-title\">\n               Cerrar Caja\n             </Modal.Title>\n           </Modal.Header>\n           <Modal.Body>\n             <div className=\"card card-default\">\n                  <div className=\"modal-body\">\n                      <div className=\"card-body\">\n                              <div className=\"form-group\">\n                                  <div className=\"row\">\n                                      <div className=\"col-12\">\n                                          <label>Codigo de caja</label>\n                                          <div className=\"input-group\">\n                                              <input type=\"text\" className=\"form-control\" name=\"codigoCerrarCaja\" onChange={this.props.handleChange}  value={this.props.codigoCerrarCaja} onKeyDown={this.props.handleKeyDown5}/>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <div className=\"form-group\">\n                                  <div className=\"row\">\n                                      <div className=\"col-4\">\n                                          <label>Nombre de Caja</label>\n                                          <h4 className=\"card-title\"> {this.props.nombreCajaCerrarCaja} </h4>\n                                      </div>\n                                      <div className=\"col-2\">\n                                          <label>Stock</label>\n                                          <h4 className=\"card-title\"> {this.props.stockCajaCerrarCaja} </h4>\n                                      </div>\n                                      <div className=\"col-4\">\n                                          <label>Cantidad de productos dentro</label>\n                                          <h4 className=\"card-title\"> {this.props.cantidadProductosCerrarCaja} </h4>\n                                      </div>\n                                      <div className=\"col-2\">\n                                          <label>Precio</label>\n                                          <h4 className=\"card-title\"> S/{this.props.precioCajaCerrarCaja} </h4>\n                                      </div>\n                                  </div>\n                              </div>\n                              <div className=\"form-group\">\n                                  <div className=\"row\">\n                                      <div className=\"col-6\">\n                                          <label>Nombre del producto</label>\n                                          <h4 className=\"card-title\"> {this.props.nombreProductoCerrarCaja} </h4>\n                                      </div>\n                                      <div className=\"col-4\">\n                                          <label>Stock</label>\n                                          <h4 className=\"card-title\"> {this.props.stockProductoCerrarCaja} </h4>\n                                      </div>\n                                      <div className=\"col-2\">\n                                          <label>Precio</label>\n                                          <h4 className=\"card-title\"> S/{this.props.precioProductoCerrarCaja} </h4>\n                                      </div>\n                                  </div>\n                              </div>\n\n\n                              <div className=\"form-group\">\n                                  <div className=\"row\">\n                                      <div className=\"col-12\">\n                                          <label>Cuantas cajas desea cesar</label>\n                                          <div className=\"input-group\">\n                                              <input type=\"text\" className=\"form-control\" name=\"cantidadCerrarCaja\" onChange={this.props.handleChange}  value={this.props.cantidadCerrarCaja}/>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <div className=\"form-group boton\">\n                                  <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.props.sendCerrarCaja()}>\n                                      Cerrar Caja</button>\n                              </div>\n                         </div>\n                  </div>\n              </div>\n\n           </Modal.Body>\n       </Modal>\n   )\n }}\n\n\nexport default CerrarCaja\n","import React from 'react';\nimport {Component} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport config from '../../config'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\nimport format from 'date-fns/format';\nimport es from 'date-fns/locale/es';\nimport EntradaCrear from  './EntradaCrear';\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport CerrarCaja from './componentsExtras/cerrarCaja'\nregisterLocale('es', es);\n\n\n\nclass Almacen extends Component{\n\n    constructor(){\n        super();\n        this.state ={\n            productos_tb: [],\n            //data editar productos\n            idProducto:'',\n            codigoP:'',\n            nombreM: '',\n            nombreT: '',\n            nombreP: '',\n            precioP: '',\n            idMarca:'',\n            idTipo:'',\n\n            cantidadP: '',\n            tasksM:[],\n            tasksTP:[],\n            tiposproductos_tb:[],\n            marcas_tb:[],\n\n            idProveedor:'',\n            idFactura:'',\n            datepick:'',\n            nowday:'',\n            precio:'',\n            cantidad:'',\n            proveedores_tb:[],\n            nuevoTipoProducto:'',\n\n            precioVentaProducto:'',\n            codigoProductoNuevo:'',\n            nombreProductoNuevo:'',\n\n            rucProveedor:'',\n            RUCdatos:[],\n            telefonoProveedor:'',\n            nombreProveedor:'',\n            direccionProveedor:'',\n            tipoProveedor:'',\n\n            //modales\n            estadoModalProducto:false,\n            estadoModalMarca:false,\n            estadoModalProveedor:false,\n            estadoModalEditarProducto:false,\n            estadoModalCaja:false,\n            estadoModalAbrirCaja:false,\n            estadoModalCerrarCaja:false,\n            //Toast\n            estadoToastRed:false,\n            estadoToastGreen:false,\n            messageRed:'',\n            messageGreen:'',\n            //componente agregar entradas\n            addContainer: false,\n            //buscador y Paginate\n            estadoBoton:[],\n            estadoQuery:'',\n\n            //Caja estados inputs\n            codigoCaja:'',                      codigoProductoCaja:          '',\n            idProductoCaja:'',                  nombreCaja:                  '',\n            cantidadProductosCaja:'',           precioCaja:                  '',\n            codeC:'',                           code:                        '',\n\n            //abrir Cajas\n            codigoAbrirCaja:'',                 nombreCajaAbrirCaja:         '',\n            stockCajaAbrirCaja:'',              cantidadProductosAbrirCaja:  '',\n            precioCajaAbrirCaja:'',             nombreProductoAbrirCaja:     '',\n            stockProductoAbrirCaja:'',          precioProductoAbrirCaja:     '',\n            cantidadAbrirCaja:'',               codeAbrirCaja:               '',\n\n            //Cerrar cajas\n            codigoCerrarCaja:'',                 nombreCajaCerrarCaja:         '',\n            stockCajaCerrarCaja:'',              cantidadProductosCerrarCaja:  '',\n            precioCajaCerrarCaja:'',             nombreProductoCerrarCaja:     '',\n            stockProductoCerrarCaja:'',          precioProductoCerrarCaja:     '',\n            cantidadCerrarCaja:'',               codeCerrarCaja:               ''\n\n\n        };\n\n        this.fetchTasks = this.fetchTasks.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeTime = this.handleChangeTime.bind(this);\n        this.handleChangeRUC = this.handleChangeRUC.bind(this);\n        this.suprimirDatos = this.suprimirDatos.bind(this);\n        this.handleChangeBuscador= this.handleChangeBuscador.bind(this);\n        this.handleKeyDown1=this.handleKeyDown1.bind(this);\n        this.handleKeyDown2=this.handleKeyDown2.bind(this);\n        this.handleKeyDown3=this.handleKeyDown3.bind(this);\n        this.handleKeyDown4=this.handleKeyDown4.bind(this);\n        this.handleKeyDown5=this.handleKeyDown5.bind(this);\n        this.cambiarModalCerrarCaja= this.cambiarModalCerrarCaja.bind(this);\n        this.add=this.add.bind(this);\n        this.sendCerrarCaja=this.sendCerrarCaja.bind(this);\n\n    }\n\n    add() {\n      this.setState({addContainer : !this.state.addContainer})\n    }\n\n    cambiarToastRed(message,accion) {\n        if(accion=='true'){\n        this.setState({\n            messageRed: message,\n            estadoToastRed: true\n        });}\n        else{\n          this.setState({\n              estadoToastRed: false\n          });\n        }\n\n    }\n    cambiarToastGreen(message,accion) {\n        if(accion=='true'){\n        this.setState({\n            messageGreen: message,\n            estadoToastGreen: true\n        });}\n        else{\n          this.setState({\n              estadoToastGreen: false\n          });}\n        }\n\n    cambiarModalProducto() {\n        this.setState({\n            estadoModalProducto: !this.state.estadoModalProducto\n        });\n    }\n    cambiarModalMarca(){\n        this.setState({\n            estadoModalMarca: !this.state.estadoModalMarca\n        })\n    }\n    cambiarModalProveedor(){\n        this.setState({\n            estadoModalProveedor: !this.state.estadoModalProveedor\n        })\n    }\n    cambiarModalEditarProducto(){\n        this.setState({\n            estadoModalEditarProducto: !this.state.estadoModalEditarProducto\n        })\n    }\n    cambiarModalCaja(){\n        this.setState({\n            estadoModalCaja: !this.state.estadoModalCaja\n        })\n    }\n    cambiarModalAbrirCaja(){\n        this.setState({\n            estadoModalAbrirCaja: !this.state.estadoModalAbrirCaja\n        })\n    }\n    cambiarModalCerrarCaja(){\n        this.setState({\n            estadoModalCerrarCaja: !this.state.estadoModalCerrarCaja\n        })\n    }\n    addComponentEntrada() {\n      this.setState({addContainer : !this.state.addContainer})\n    }\n\n\n    cleanInputs(){\n\n        this.setState({\n            idProducto:'',\n            codigoP:'',\n            nombreM: '',\n            nombreT: '',\n            nombreP: '',\n            precioP: '',\n            //idMarca:'',\n            //idTipo:'',\n            cantidadP: '',\n            idProveedor:'',\n            idFactura:'',\n            datepick:'',\n            nowday:'',\n            precio:'',\n            cantidad:'',\n            nuevoTipoProducto:'',\n            precioVentaProducto:'',\n            codigoProductoNuevo:'',\n            nombreProductoNuevo:'',\n            rucProveedor:'',\n            telefonoProveedor:'',\n            nombreProveedor:'',\n            direccionProveedor:'',\n            tipoProveedor:'',\n\n            //cajas agregar\n            codigoCaja:'',                      codigoProductoCaja:          '',\n            idProductoCaja:'',                  nombreCaja:                  '',\n            cantidadProductosCaja:'',           precioCaja:                  '',\n            codeC:'',                           code:                        '',\n\n            //abrir Cajas\n            codigoAbrirCaja:'',                 nombreCajaAbrirCaja:         '',\n            stockCajaAbrirCaja:'',              cantidadProductosAbrirCaja:  '',\n            precioCajaAbrirCaja:'',             nombreProductoAbrirCaja:     '',\n            stockProductoAbrirCaja:'',          precioProductoAbrirCaja:     '',\n            cantidadAbrirCaja:'',               codeAbrirCaja:               '',\n            //Cerrar cajas\n            codigoCerrarCaja:'',                 nombreCajaCerrarCaja:         '',\n            stockCajaCerrarCaja:'',              cantidadProductosCerrarCaja:  '',\n            precioCajaCerrarCaja:'',             nombreProductoCerrarCaja:     '',\n            stockProductoCerrarCaja:'',          precioProductoCerrarCaja:     '',\n            cantidadCerrarCaja:'',               codeCerrarCaja:               ''\n        })\n\n    }\n\n    fechAgregarTipo(){\n        fetch(\n            config.api+'/almacen/tiposproductos/tb_tiposProductos',\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n                .then(res => res.json())\n                .then(data => {\n                    this.setState({tiposproductos_tb: data}, () => {\n                        this.suprimirDatos();\n                    });\n        })\n    }\n\n    fetchRUC(){\n        fetch(config.api+`/consult/ruc/${this.state.rucProveedor}`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n\n        .then(res => res.json())\n        .then(data => {\n            console.log(data);\n            this.setState({RUCdatos: data}, () => {\n                this.datosdeRUC();\n            });\n    })\n}\n\n    datosdeRUC(){\n        if(this.state.RUCdatos){\n            this.setState({\n                telefonoProveedor:this.state.RUCdatos.persona.telefonos[0],\n                nombreProveedor:this.state.RUCdatos.persona.razonSocial,\n                direccionProveedor:this.state.RUCdatos.persona.direccion,\n                tipoProveedor:this.state.RUCdatos.persona.tipo\n            }) \n            console.log(this.state.RUCdatos)\n        }\n    }\n\n    fetchTasks(){\n            fetch(\n                config.api+'/almacen/tb_almacen',\n                {\n                    method: 'GET',\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n                .then(res => res.json())\n                .then(data => {\n                    this.setState({productos_tb: data},()=>this.agregarBotones());\n                    console.log(this.state.productos_tb);\n\n            })\n\n            fetch(\n                config.api+'/almacen/proveedores/tb_proveedores',\n                {\n                    method: 'GET',\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n                        .then(res => res.json())\n                        .then(data => {\n                            this.setState({proveedores_tb: data});\n\n                })\n\n            fetch(\n                config.api+'/almacen/tiposproductos/tb_tiposProductos',\n                {\n                    method: 'GET',\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n                        .then(res => res.json())\n                        .then(data => {\n                            this.setState({tiposproductos_tb: data});\n                })\n\n            fetch(\n                config.api+'/almacen/marcas/tb_marcas',\n                {\n                    method: 'GET',\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n                .then(res => res.json())\n                .then(data => {\n                this.setState({marcas_tb: data});\n            })\n    }\n\n    suprimirDatos(){\n        let x = [];\n        let y = [] ;\n        let b = [];\n        let q= [];\n\n        if(this.state.marcas_tb.data){\n            this.state.marcas_tb.data.map(task=>{\n                x.push({\n                    nombre: task.nombre,\n                    id: task.id\n                    });\n                })\n        }\n\n        b = [ ...new Map(x.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\n\n        if(this.state.tiposproductos_tb.data){\n            this.state.tiposproductos_tb.data.map(task=>{\n                y.push({\n                    nombre: task.nombre,\n                    id: task.id\n                });\n            }) \n        }\n        q = [ ...new Map(y.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\n\n        this.setState({\n            tasksM: b,\n            tasksTP: q\n        },()=>this.operacionScope())\n    }\n\n    operacionScope(){\n\n      let x = this.state.tasksM[0];\n      let y = this.state.tasksTP[0];\n\n      if(x && y){\n      let idMarca = x.id;\n      let idTipo = y.id;\n\n      this.setState({\n        idMarca: idMarca,\n        idTipo: idTipo\n      },()=>console.log(this.state.idMarca, this.state.idTipo))\n      }\n    }\n\n\n\n    editTask(idP,codeP,nameM, nameT,nameP,precioP,idM,idT){\n\n        console.log(codeP,nameM, nameT,nameP,precioP,idM,idT);\n\n        let x = [];\n        let y = [];\n        let b = [];\n        let q = [];\n\n        if(this.state.marcas_tb.data){\n            this.state.marcas_tb.data.map(task=>{\n                x.push({\n                    nombre: task.nombre,\n                    id: task.id\n                 });\n             })\n        }\n        b = [ ...new Map(x.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\n\n        if(this.state.tiposproductos_tb.data){\n            this.state.tiposproductos_tb.data.map(task=>{\n                y.push({\n                   nombre: task.nombre,\n                   id: task.id\n                 });\n             })\n        }\n        q = [ ...new Map(y.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\n\n\n        this.setState({\n            idProducto: idP,\n            codigoP: codeP,\n            nombreM: nameM,\n            nombreT: nameT,\n            nombreP: nameP,\n            precioP: precioP,\n            idMarca: idM,\n            idTipo:idT,\n            tasksM: b,\n            tasksTP: q\n        })\n\n      }\n\n      sendAgregarEntrada(){\n\n            console.log(this.state.idProveedor,\n                this.state.idFactura,\n                this.state.datepick,\n                this.state.precio,\n                 this.state.cantidad,\n                this.state.idProducto)\n            fetch(config.api+`/almacen/entrada/crear`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    proveedor: this.state.idProveedor,\n                    factura: this.state.idFactura,\n                    fecha: this.state.datepick,\n                    precio: this.state.precio,\n                    cantidad: this.state.cantidad,\n                    producto: this.state.idProducto,\n                    cantidadProducto: 1\n\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n\n                }\n            }\n        )\n        .then(res =>res.json())\n        .then(data => {\n            if(data.response==true){\n              console.log(\"exito\");\n              this.cambiarToastGreen(\"Se agrego con exito la entrada\",'true');\n              this.fetchTasks();\n            }\n            else{\n              console.log(\"error\");\n              this.cambiarToastRed(\"Hubo un error al agregar entrada\",'true');\n            }\n\n        }).catch((error)=> {\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\n          this.cambiarToastRed(\"Hubo un error al agregar entrada\",'true');\n        });  }\n\n    sendAgregarProducto(){\n\n        fetch(config.api+`/almacen/producto/crear`,\n        {\n            method: 'POST',\n            body: JSON.stringify({\n                // '_token': csrf_token,\n                precioVentaProducto:this.state.precioVentaProducto,\n                codigoProductoNuevo:this.state.codigoProductoNuevo,\n                marcaProducto:this.state.idMarca,\n                tipoProducto:  this.state.idTipo,\n                nombreProductoNuevo: this.state.nombreProductoNuevo\n            }),\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n\n            }\n          }\n          )\n          .then(res =>res.json())\n          .then(data => {\n              if(data.response==true){\n                console.log(\"exito\");\n                this.cambiarToastGreen(\"Se agrego correctamente el producto\",'true');\n                this.fetchTasks();\n                this.cleanInputs();\n              }\n              else{\n                console.log(\"error\");\n                this.cambiarToastRed(\"Hubo un error al agregar producto\",'true');\n              }\n\n\n          }).catch((error)=> {\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\n            this.cambiarToastRed(\"Hubo un error al agregar producto\",'true');\n          });  }\n\n    sendAgregarTipoProducto(){\n\n            fetch(config.api+`/almacen/tipo/crear`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    nuevoTipoProducto: this.state.nuevoTipoProducto\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n\n                }\n            }\n        )\n        .then(res =>res.json())\n        .then(data => {\n              if(data.response==true){\n                console.log(\"exito\");\n                this.cambiarToastGreen(\"Se agrego correctamente el tipo de producto\",'true');\n                this.fechAgregarTipo();\n              }\n              else{\n                console.log(\"error\");\n                this.cambiarToastRed(\"Hubo un error al agregar Tipo producto\",'true');\n              }\n\n        }).catch((error)=> {\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\n          this.cambiarToastRed(\"Hubo un error al agregar Tipo producto\",'true');\n        });  }\n\n\n    comprobarCodeCaja(){\n          fetch(config.api+'/producto/buscar/caja',\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    //   '_token': csrf_token,\n                      codigoCajaProducto: this.state.codeC\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n                    )\n\n                  .then(res => res.json())\n                  .then(data => {\n                    if(data.response == true && data.existe == true){\n                      console.log(data);\n                      this.cambiarToastGreen(data.mensaje,'true');\n                      this.setState({\n                        cantidadProductosCaja: data.producto.cantidad,\n                        nombreCaja: data.producto.nombre,\n                        idMarca: data.producto.marca_id,\n                        idTipo: data.producto.tipo_id,\n                        precioCaja:data.producto.precio,\n                      })\n                        }\n                    else if(data.response == true && data.existe == false){\n                      console.log(data);\n                      this.cambiarToastGreen(data.mensaje,'true');\n                    }\n                    else{\n                      console.log(data)\n                      this.cambiarToastRed(data.mensaje,'true');\n                    }\n\n                  })\n        }\n\n    sendAgregarCaja(){\n\n              fetch(config.api+`/almacen/caja/crear`,\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    //   '_token': csrf_token,\n                      codigoCaja: this.state.codigoCaja,\n                      idProducto: this.state.idProductoCaja,\n                      tipoProducto: this.state.idTipo,\n                      marcaProducto:  this.state.idMarca,\n                      cantidadProducto: this.state.cantidadProductosCaja,\n                      nombreCaja: this.state.nombreCaja,\n                      precioCaja: this.state.precioCaja\n\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n                  }\n              }\n          )\n          .then(res => res.json())\n          .then(data => {\n              if(data.response==true){\n                console.log(\"exito\");\n                this.cambiarToastGreen(\"Se agrego correctamente la caja\",'true');\n                this.cleanInputs();\n                this.fetchTasks();\n\n              }\n              else{\n                console.log(\"error\");\n                this.cambiarToastRed(\"Hubo un error al agregar la caja\",'true');\n              }\n\n          })\n          .catch((error)=> {\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\n            this.cambiarToastRed(\"Hubo un error al agregar la caja\",'true');\n          });  }\n\n\n    sendAgregarMarca(){\n\n            fetch(config.api+`/almacen/marca/crear`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    nombreMarca: this.state.nombreMarca\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n\n                }\n            }\n        )\n        .then(res => res.json())\n        .then(data => {\n            if(data.response==true){\n              console.log(\"exito\");\n              this.cambiarToastGreen(\"Se agrego correctamente la marca\",'true');\n              this.fetchTasks();\n            }\n            else{\n              console.log(\"error\");\n              this.cambiarToastRed(\"Hubo un error al agregar la marca\",'true');\n            }\n\n        })\n        .catch((error)=> {\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\n          this.cambiarToastRed(\"Hubo un error al agregar la marca\",'true');\n        });  }\n\n    sendAgregarProveedor(){\n            fetch(config.api+'/almacen/proveedor/crear',\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token': csrf_token,\n                        rucProveedor:this.state.rucProveedor,\n                        telefonoProveedor:this.state.telefonoProveedor,\n                        nombreProveedor:this.state.nombreProveedor,\n                        direccionProveedor:this.state.direccionProveedor,\n                        tipoProveedor:this.state.tipoProveedor\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n\n                    }\n                }\n            )\n            .then(res =>res.json())\n            .then(data => {\n                if(data.response==true){\n                  console.log(\"exito\");\n                  this.cambiarToastGreen(\"Se agrego correctamente el proveedor\",'true');\n                }\n                else{\n                  console.log(\"error\");\n                  this.cambiarToastRed(\"Hubo un error al agregar proveedor\",'true');\n                }\n            })\n            .catch((error)=> {\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\n              this.cambiarToastRed(\"Hubo un error al agregar proveedor\",'true');\n            });  }\n\n    sendAbrirCaja(){\n\n            fetch(config.api+`/almacen/caja/abrir`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token': csrf_token,\n                        codigoCaja: this.state.codigoAbrirCaja,\n                        numAbrir: this.state.cantidadAbrirCaja,\n\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(res => res.json())\n            .then(data => {\n                if(data.response==true){\n                  console.log(\"exito\");\n                  this.cambiarToastGreen(\"Se abrio correctamente la caja\",'true');\n                  this.cleanInputs();\n                  this.fetchTasks();\n                }\n                else{\n                  console.log(\"error\");\n                  this.cambiarToastRed(\"Hubo un error al abrir la caja\",'true');\n                }\n\n            })\n            .catch((error)=> {\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\n              this.cambiarToastRed(\"Hubo un error al abrir la caja\",'true');\n            });  }\n\n\n    comprobarCodeAbrirCaja(){\n        fetch(config.api+'/almacen/caja/consulta',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    codigoCaja: this.state.codeAbrirCaja\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                  }\n              })\n\n                .then(res => res.json())\n                .then(data => {\n                  if(data.response == true){\n                    console.log(data);\n                    this.setState({\n                      nombreCajaAbrirCaja:data.CAJA.nombre,\n                      stockCajaAbrirCaja:data.CAJA.stock,\n                      precioCajaAbrirCaja:data.CAJA.precio,\n                      cantidadProductosAbrirCaja:data.CAJA.cantidad,\n                      nombreProductoAbrirCaja:data.PRODUCTO.nombre,\n                      stockProductoAbrirCaja:data.PRODUCTO.stock,\n                      precioProductoAbrirCaja:data.PRODUCTO.precio\n                    },()=>console.log(\"entregado\"))\n                    this.cambiarToastGreen(\"Es una caja\",'true');\n                  }\n                  else{\n                    console.log(data)\n                    this.cambiarToastRed(\"No es una caja\",'true');\n                  }\n\n                })\n      }\n      sendCerrarCaja(){\n\n              fetch(config.api+`/almacen/caja/cerrar`,\n                  {\n                      method: 'POST',\n                      body: JSON.stringify({\n                        //   '_token': csrf_token,\n                          codigoCaja: this.state.codigoCerrarCaja,\n                          numAbrir: this.state.cantidadCerrarCaja,\n\n                      }),\n                      headers: {\n                          'Accept' : 'application/json',\n                          'Content-Type': 'application/json',\n                          'usuid'         : localStorage.getItem('usuid')\n                      }\n                  }\n              )\n              .then(res => res.json())\n              .then(data => {\n                  if(data.response==true){\n                    console.log(\"exito\");\n                    this.cambiarToastGreen(\"Se cerro correctamente la caja\",'true');\n                    this.cleanInputs();\n                    this.fetchTasks();\n                  }\n                  else{\n                    console.log(\"error\");\n                    this.cambiarToastRed(\"Hubo un error al cerrar la caja\",'true');\n                  }\n\n              })\n              .catch((error)=> {\n                console.log('Hubo un problema con la petición Fetch:' + error.message);\n                this.cambiarToastRed(\"Hubo un error al abrir la caja\",'true');\n              });  }\n\n\n      comprobarCodeCerrarCaja(){\n          fetch(config.api+'/almacen/caja/consulta',\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    //   '_token': csrf_token,\n                      codigoCaja: this.state.codeCerrarCaja\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n                    }\n                })\n\n                  .then(res => res.json())\n                  .then(data => {\n                    if(data.response == true){\n                      console.log(data);\n                      this.setState({\n                        nombreCajaCerrarCaja:data.CAJA.nombre,\n                        stockCajaCerrarCaja:data.CAJA.stock,\n                        precioCajaCerrarCaja:data.CAJA.precio,\n                        cantidadProductosCerrarCaja:data.CAJA.cantidad,\n                        nombreProductoCerrarCaja:data.PRODUCTO.nombre,\n                        stockProductoCerrarCaja:data.PRODUCTO.stock,\n                        precioProductoCerrarCaja:data.PRODUCTO.precio\n                      },()=>console.log(\"entregado\"))\n                      this.cambiarToastGreen(\"Es una caja\",'true');\n                    }\n                    else{\n                      console.log(data)\n                      this.cambiarToastRed(\"No es una caja\",'true');\n                    }\n\n                  })\n        }\n\n    sendEditarProducto(){\n\n        fetch(config.api+`/almacen/producto/editar`,\n        {\n            method: 'POST',\n            body: JSON.stringify({\n                // '_token': csrf_token,\n                editarIdProducto: this.state.idProducto,\n                editarCodigoProductoNuevo: this.state.codigoP,\n                editarMarcaProducto: this.state.idMarca,\n                editarTipoProducto: this.state.idTipo,\n                editarNombreProductoNuevo: this.state.nombreP,\n                editarPrecioVentaProducto: this.state.precioP\n\n\n            }),\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n\n            }\n        }\n      )\n        .then(res => res.json())\n        .then(data => {\n              if(data.response==true){\n                console.log(\"exito\");\n                this.cambiarToastGreen(\"Se edito correctamente el producto\",'true');\n                this.fetchTasks();\n              }\n              else{\n                console.log(\"error\");\n                this.cambiarToastRed(\"Hubo un error al editar producto\",'true');\n              }\n\n        }).catch((error)=> {\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\n          this.cambiarToastRed(\"Hubo un error al editar producto\",'true');\n        });  }\n\n    deleteProducto(id){\n        console.log(id);\n            fetch(config.api+`/producto/eliminar`,{\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    id: id\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-type' : 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            })\n            .then(res => res.json())\n            .then(data =>{\n                if(data.response==true){\n                  console.log(\"exito\");\n                  this.cambiarToastGreen(\"Se elimino el producto\",'true');\n                  this.fetchTasks();\n                }\n                else{\n                  console.log(\"error\");\n                  this.cambiarToastRed(\"Error en eliminar el producto\",'true');\n                }\n            })\n            .catch((error)=> {\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\n              this.cambiarToastRed(\"Error en eliminar el producto\",'true');\n            });  }\n\n\n//buscador------------------------------------|\n\n      agregarBotones(){\n          let z = this.state.productos_tb.last_page\n          console.log(z);\n          let x = [];\n          if(z){\n\n          for(let i = 1 ; i <= z ; i++){\n            x.push(i);\n          }\n          this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\n          }\n        }\n\n      cambiarPaginate(number){\n          console.log(number);\n          fetch(\n              config.api+`/almacen/tb_almacen?page=${number}&buscar=${this.state.estadoQuery}`,\n              {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n            .then(res => res.json())\n            .then(data => {\n                this.setState({productos_tb: data},()=>{\n                  console.log(this.state.productos_tb)\n                  this.agregarBotones();\n                });\n\n          })\n\n        }\n\n\n      fetchQuery(query,name){\n            fetch(\n                config.api+`/almacen/tb_almacen?${name}=${query}`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n              .then(res => res.json())\n              .then(data => {\n                this.setState({productos_tb: data,estadoQuery: query}, () => {\n                    this.agregarBotones();\n                    console.log(\"obtenido?\");\n                });\n              })\n        }\n\n      handleChangeBuscador (e){\n          const {name , value} = e.target;\n          console.log(value);\n          this.fetchQuery(value,name);\n          console.log(name);\n\n        }\n\n\n\n// |----------------------------------------|\n\n     handleChange (e){\n            const {name , value} = e.target;\n            this.setState({\n                [name] : value\n\n            })\n            console.log(name);\n            console.log(value);\n            console.log(this.state.idProveedor);\n\n        }\n    handleChangeRUC(e){\n        const {name , value} = e.target;\n\n        if(value.length == 11){\n            this.setState({\n                [name] : value\n\n            }, () => {\n                this.fetchRUC();\n            })\n            console.log(value);\n        }\n\n    }\n\n     handleChangeTime (date){\n         this.setState({\n             datepick: format(date, 'yyyy-MM-dd'),\n             nowday: date\n         });\n         console.log(this.state.datepick);\n     };\n    componentDidMount(){\n        this.fetchTasks();\n        // console.log(csrf_token);\n    }\n\n//comprobar ......\n    handleKeyDown2(e){\n      if(e.key === 'Enter'){\n        console.log('hacer validacion');\n        this.comprobarCodeProducto();\n      }\n    }\n    handleKeyDown1(e){\n      if(e.key === 'Enter'){\n        console.log('hacer validacion');\n        console.log(e.target.name);\n        var name = e.target.name;\n        this.setState({code: e.target.value},()=>this.comprobarCodeProductoCaja());\n      }\n    }\n    handleKeyDown3(e){\n      if(e.key === 'Enter'){\n        console.log('hacer validacion');\n        console.log(e.target.name);\n        this.setState({codeC: e.target.value},()=>this.comprobarCodeCaja());\n      }\n    }\n    handleKeyDown4(e){\n      if(e.key === 'Enter'){\n        console.log('hacer validacion');\n        console.log(e.target.name);\n        this.setState({codeAbrirCaja: e.target.value},()=>this.comprobarCodeAbrirCaja());\n        }\n    }\n    handleKeyDown5(e){\n      if(e.key === 'Enter'){\n        console.log('hacer validacion');\n        this.setState({codeCerrarCaja: e.target.value},()=>this.comprobarCodeCerrarCaja());\n        }\n      }\n    comprobarCodeProducto(){\n        fetch(config.api+'/producto/buscar',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    codigoProducto: this.state.codigoProductoNuevo\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                  }\n                    }\n                  )\n\n                .then(res => res.json())\n                .then(data => {\n                  if(data.response == true){\n                    console.log(data);\n                    this.cambiarToastRed(\"El producto ya existe\",'true');\n                  }\n                  else{\n                    console.log(data)\n                    this.cambiarToastGreen(\"El producto no existe\",'true');\n\n                  }\n\n            })\n      }\n\n    comprobarCodeProductoCaja(){\n        fetch(config.api+'/producto/buscar/caja',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    codigoCajaProducto: this.state.code\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                  }\n              }\n                  )\n\n                .then(res => res.json())\n                .then(data => {\n                  if(data.response == true && data.existe == true){\n                    console.log(data);\n                    this.cambiarToastGreen(\"El producto ya existe\",'true');\n                    this.setState({idProductoCaja: data.producto.id});\n                  }\n                  else if(data.response == true && data.existe == false){\n                    console.log(data);\n                    this.cambiarToastRed(\"El producto no existe.Agregalo\",'true');\n                    this.cambiarModalCaja();\n                    this.cambiarModalProducto();\n                  }\n                  else{\n                    console.log(data)\n                    this.cambiarToastRed(data.mensaje,'true');\n\n                  }\n\n            })\n      }\n\n    render(){\n        return(\n            <div className=\"row\">\n\n            <div className=\"col-lg-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                    <h4 className=\"card-title\">Modulos de agregar</h4>\n                    <div className=\"button-group\">\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-primary\" onClick={() => this.addComponentEntrada()}>Agregar Entrada</button>\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-success\" onClick={()=>{this.suprimirDatos();this.cambiarModalProducto()}}>Agregar Producto</button>\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-danger\" onClick={()=>{this.suprimirDatos();this.cambiarModalCaja()}}>Agregar Caja</button>\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-dark\" onClick={()=>this.cambiarModalAbrirCaja()}>Abrir Caja</button>\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-light\" onClick={()=>this.cambiarModalCerrarCaja()}>Cerrar Caja</button>\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-info\" onClick={()=>this.cambiarModalMarca()}>Agregar Marca</button>\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-warning\" onClick={()=>this.cambiarModalProveedor()}>Agregar Proveedor</button>\n\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n            { this.state.addContainer && <EntradaCrear addContainer={this.add} />}\n\n        <div className=\"col-lg-12 grid-margin stretch-card\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                 <h4 className=\"card-title\">Buscar</h4>\n                  <div className=\"row\">\n                      <div className=\"col-3\">\n                          <label>Buscar Codigo</label>\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"bcodigo\" id=\"buscar_tb_codigo\" onChange={this.handleChangeBuscador}/>\n                      </div>\n                      <div className=\"col-3\">\n                          <label>Buscar Marca</label>\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"bmarca\" id=\"buscar_tb_marca\" onChange={this.handleChangeBuscador} />\n                      </div>\n                      <div className=\"col-3\">\n                          <label>Buscar Tipo</label>\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"btipo\" id=\"buscar_tb_tipo\" onChange={this.handleChangeBuscador}/>\n                      </div>\n                      <div className=\"col-3\">\n                          <label>Buscar Nombre</label>\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"bnombre\" id=\"buscar_tb_nombre\" onChange={this.handleChangeBuscador}/>\n                      </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n<div className=\"col-lg-12 grid-margin stretch-card\">\n    <div className=\"card\">\n        <div className=\"card-body\">\n            <h4 className=\"card-title\">Almacen de productos</h4>\n            <table id=\"tb_almacen\" className=\"table table-striped\" style={{width: '100%'}}>\n                <thead>\n                    <tr>\n                        <th>Codigo</th>\n                        <th>Marca</th>\n                        <th>Tipo</th>\n                        <th>Nombre</th>\n                        <th>Precio</th>\n                        <th>Cantidad</th>\n                        <th>Opciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.productos_tb.data ?\n                        this.state.productos_tb.data.map(task =>{\n                            return (\n                                <tr key={task.codigoProducto}>\n                                    <td>{task.codigoProducto}</td>\n                                    <td>{task.nombreMarca}</td>\n                                    <td>{task.nombreTipo}</td>\n                                    <td>{task.nombreProducto}</td>\n                                    <td>{task.precioProducto}</td>\n                                    <td>{task.cantidadProducto}</td>\n                                    <td>\n                                     <button onClick={()=> this.deleteProducto(task.idProducto)}\n                                        className=\"btn btn-sm btn-danger eliminar\" >\n                                         <i className=\"mdi mdi-delete\"> </i>\n                                     </button>\n                                     <button\n                                        onClick={()=>{ this.editTask(task.idProducto,task.codigoProducto,task.nombreMarca,\n                                        task.nombreTipo,task.nombreProducto,task.precioProducto,task.idMarca,task.idTipo); this.cambiarModalEditarProducto()}}\n                                        className=\"btn btn-sm btn-secondary editar\" data-target=\"#productoEditarModal\">\n                                         <i className=\"mdi mdi-lead-pencil\">  </i>\n                                     </button>\n                                    </td>\n                                </tr>\n                            );\n                        } )   : null\n                    }\n              </tbody>\n            </table>\n              <div className=\"container\">\n                  <div className=\"row justify-content-end\">\n                    <div className=\"col-4\">\n\n                      {\n                        this.state.estadoBoton?\n                        this.state.estadoBoton.map(task =>{\n                            return (\n                                <button key={task}\n                                    className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\n\n                            );\n                         } )   : null\n                       }\n                  </div>\n                </div>\n              </div>\n        </div>\n    </div>\n</div>\n\n     <CerrarCaja  estadoModalCerrarCaja={this.state.estadoModalCerrarCaja} cambiarModalCerrarCaja={this.cambiarModalCerrarCaja}\n\n     codigoCerrarCaja={this.state.codigoCerrarCaja}  nombreCajaCerrarCaja={this.state.nombreCajaCerrarCaja}\n     stockCajaCerrarCaja={this.state.stockCajaCerrarCaja} cantidadProductosCerrarCaja={this.state.cantidadProductosCerrarCaja}\n     precioCajaCerrarCaja={this.state.precioCajaCerrarCaja} nombreProductoCerrarCaja={this.state.nombreProductoCerrarCaja}\n     stockProductoCerrarCaja={this.state.stockProductoCerrarCaja} precioProductoCerrarCaja={this.state.precioProductoCerrarCaja}\n     cantidadCerrarCaja={this.state.cantidadCerrarCaja}\n     sendCerrarCaja={this.sendCerrarCaja}\n     handleChange={this.handleChange}\n     handleKeyDown5={this.handleKeyDown5}\n\n     />\n\n    <Modal\n     show={this.state.estadoModalCaja}\n     onHide={() => this.cambiarModalCaja()}\n\n    >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Agregar Caja\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <div className=\"card card-default\">\n               <div className=\"modal-body\">\n                   <div className=\"card-body\">\n                           <div className=\"form-group\">\n                               <div className=\"row\">\n                                   <div className=\"col-12\">\n                                       <label>Codigo de caja</label>\n                                       <div className=\"input-group\">\n                                           <input type=\"text\" className=\"form-control\" name=\"codigoCaja\" onChange={this.handleChange}  value={this.state.codigoCaja} onKeyDown={this.handleKeyDown3}/>\n                                       </div>\n                                   </div>\n                               </div>\n                           </div>\n                           <div className=\"form-group\">\n                               <div className=\"row\">\n                                   <div className=\"col-12\">\n                                       <label>Codigo de producto</label>\n                                       <div className=\"input-group\">\n                                           <input type=\"text\" className=\"form-control\" name=\"codigoProductoCaja\" onChange={this.handleChange}  value={this.state.codigoProductoCaja} onKeyDown={this.handleKeyDown1}/>\n                                       </div>\n                                   </div>\n                               </div>\n                           </div>\n                           <div className=\"form-group\">\n                               <div className=\"row\">\n                                   <div className=\"col-12\">\n                                       <label>Cantidad de productos en esta caja</label>\n                                       <div className=\"input-group\">\n                                           <input type=\"text\" className=\"form-control\" name=\"cantidadProductosCaja\" onChange={this.handleChange}  value={this.state.cantidadProductosCaja}/>\n                                       </div>\n                                   </div>\n                               </div>\n                           </div>\n                           <div className=\"form-group\">\n                               <div className=\"row\">\n                                   <div className=\"col-12\">\n                                       <label>Nombre de caja</label>\n                                       <div className=\"input-group\">\n                                           <input type=\"text\" className=\"form-control\" name=\"nombreCaja\" onChange={this.handleChange}  value={this.state.nombreCaja}/>\n                                       </div>\n                                   </div>\n                               </div>\n                           </div>\n                           <div className=\"form-group\">\n                               <div className=\"row\">\n                                   <div className=\"col-6\">\n                                       <label>Marcas</label>\n                                       <div className=\"input-group\">\n                                           <select className=\"form-control\" name=\"idMarca\" id=\"marcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\n                                               {\n                                                   this.state.tasksM ?\n                                                   this.state.tasksM.map(element => {\n                                                       return (\n                                                           <option value={element.id}  >{element.nombre}</option>\n                                                           );\n                                                   })\n                                                   :null\n                                               }\n                                           </select>\n                                       </div>\n                                   </div>\n                                   <div className=\"col-6\">\n                                       <label>Tipos de prodcuto</label>\n                                       <div className=\"input-group\">\n                                           <select className=\"form-control\" name=\"idTipo\" id=\"tipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo}>\n                                               {\n                                                   this.state.tasksTP ?\n                                                   this.state.tasksTP.map(element=>{\n                                                     return (\n                                                     <option value={element.id}>{element.nombre}</option>\n                                                     );\n                                               })\n                                                : null\n                                               }\n                                           </select>\n                                       </div>\n                                   </div>\n                               </div>\n                           </div>\n                           <div className=\"form-group\">\n                               <div className=\"row\">\n                                   <div className=\"col-12\">\n                                       <label>Precio de caja con IGV(18%)</label>\n                                       <div className=\"input-group\">\n                                           <input type=\"text\" className=\"form-control\" name=\"precioCaja\" onChange={this.handleChange}  value={this.state.precioCaja}/>\n                                       </div>\n                                   </div>\n                               </div>\n                           </div>\n                           <div className=\"form-group boton\">\n                               <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\" onClick={()=>this.sendAgregarCaja()}>\n                                   Agregar</button>\n                           </div>\n                      </div>\n               </div>\n           </div>\n\n        </Modal.Body>\n      </Modal>\n\n    <Modal\n       size='lg'\n       show={this.state.estadoModalAbrirCaja}\n       onHide={() => this.cambiarModalAbrirCaja()}\n\n      >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n              Abrir Caja\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"card card-default\">\n                 <div className=\"modal-body\">\n                     <div className=\"card-body\">\n                             <div className=\"form-group\">\n                                 <div className=\"row\">\n                                     <div className=\"col-12\">\n                                         <label>Codigo de caja</label>\n                                         <div className=\"input-group\">\n                                             <input type=\"text\" className=\"form-control\" name=\"codigoAbrirCaja\" onChange={this.handleChange}  value={this.state.codigoAbrirCaja} onKeyDown={this.handleKeyDown4}/>\n                                         </div>\n                                     </div>\n                                 </div>\n                             </div>\n                             <div className=\"form-group\">\n                                 <div className=\"row\">\n                                     <div className=\"col-4\">\n                                         <label>Nombre de Caja</label>\n                                         <h4 className=\"card-title\"> {this.state.nombreCajaAbrirCaja} </h4>\n                                     </div>\n                                     <div className=\"col-2\">\n                                         <label>Stock</label>\n                                         <h4 className=\"card-title\"> {this.state.stockCajaAbrirCaja} </h4>\n                                     </div>\n                                     <div className=\"col-4\">\n                                         <label>Cantidad de productos dentro</label>\n                                         <h4 className=\"card-title\"> {this.state.cantidadProductosAbrirCaja} </h4>\n                                     </div>\n                                     <div className=\"col-2\">\n                                         <label>Precio</label>\n                                         <h4 className=\"card-title\"> S/{this.state.precioCajaAbrirCaja} </h4>\n                                     </div>\n                                 </div>\n                             </div>\n                             <div className=\"form-group\">\n                                 <div className=\"row\">\n                                     <div className=\"col-6\">\n                                         <label>Nombre del producto</label>\n                                         <h4 className=\"card-title\"> {this.state.nombreProductoAbrirCaja} </h4>\n                                     </div>\n                                     <div className=\"col-4\">\n                                         <label>Stock</label>\n                                         <h4 className=\"card-title\"> {this.state.stockProductoAbrirCaja} </h4>\n                                     </div>\n                                     <div className=\"col-2\">\n                                         <label>Precio</label>\n                                         <h4 className=\"card-title\"> S/{this.state.precioProductoAbrirCaja} </h4>\n                                     </div>\n                                 </div>\n                             </div>\n\n\n                             <div className=\"form-group\">\n                                 <div className=\"row\">\n                                     <div className=\"col-12\">\n                                         <label>Cuantas cajas desea abrir</label>\n                                         <div className=\"input-group\">\n                                             <input type=\"text\" className=\"form-control\" name=\"cantidadAbrirCaja\" onChange={this.handleChange}  value={this.state.cantidadAbrirCaja}/>\n                                         </div>\n                                     </div>\n                                 </div>\n                             </div>\n                             <div className=\"form-group boton\">\n                                 <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.sendAbrirCaja()}>\n                                     Abrir Caja</button>\n                             </div>\n                        </div>\n                 </div>\n             </div>\n\n          </Modal.Body>\n      </Modal>\n\n    <Modal\n        show={this.state.estadoModalProducto}\n        onHide={() => this.cambiarModalProducto()}\n        >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Agregar Producto\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n         <div className=\"card card-default\">\n            <div className=\"card-header cabezera\">\n                <div className=\"form-group row\">\n                                <div className=\"col-sm-6\">\n                                        <div className=\"form-check\">\n                                        <label className=\"form-check-label\">\n                                            <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"cerrarProducto\" value=\"1\" defaultChecked=\"\"/>\n                                            Cerrar automaticamente\n                                        <i className=\"input-helper\"></i></label>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-sm-6\">\n                                        <div className=\"form-check\">\n                                        <label className=\"form-check-label\">\n                                            <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"abrirProducto\" value=\"0\"/>\n                                            Mantenerla abierta\n                                        <i className=\"input-helper\"></i></label>\n                                        </div>\n                                    </div>\n                            </div>\n                    </div>\n                <div className=\"modal-body\">\n                    <div className=\"card-body\">\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Nuevo tipo de producto</label>\n                                        <div className=\"input-group\">\n                                            <input type=\"text\"      placeholder=\"Si no existe el tipo de producto agregalo\" className=\"form-control\" name=\"nuevoTipoProducto\" id=\"nuevoTipoProducto\" onChange={this.handleChange}  value={this.state.nuevoTipoProducto}/>\n                                            <div className=\"input-group-    append\">\n                                                <button  id=\"crearTipoProducto\"  className=\"btn form-control btn-sm btn-primary\" type=\"button\" onClick={()=>this.sendAgregarTipoProducto()}><i className=\"mdi mdi-plus\"></i></button>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\" >\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Codigo</label>\n                                        <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\" value={this.state.codigoProductoNuevo} onKeyDown={this.handleKeyDown2} onChange={this.handleChange}/>\n                                    </div>\n                                    <div className=\"col-12\" id=\"alertaCodigo\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        <label>Marcas</label>\n                                        <div className=\"input-group\">\n                                            <select className=\"form-control\" name=\"idMarca\" id=\"marcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\n                                                {\n                                                    this.state.tasksM ?\n                                                    this.state.tasksM.map(element => {\n                                                        return (\n                                                            <option value={element.id}  >{element.nombre}</option>\n                                                            );\n                                                    })\n                                                    :null\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <label>Tipos de prodcuto</label>\n                                        <div className=\"input-group\">\n                                            <select className=\"form-control\" name=\"idTipo\" id=\"tipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo}>\n                                                {\n                                                    this.state.tasksTP ?\n                                                    this.state.tasksTP.map(element=>{\n                                                    return (\n                                                    <option value={element.id}>{element.nombre}</option>\n                                                    );\n                                                })\n                                                 : null\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Nombre del producto</label>\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\" onChange={this.handleChange} value={this.state.nombreProductoNuevo}/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        <label>Precio con IGV(18%)</label>\n                                        <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\n                                            pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange} value={this.state.precioVentaProducto}/>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"form-group boton\">\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\" onClick={()=>this.sendAgregarProducto()}>\n                                    Agregar</button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n\n        </Modal.Body>\n      </Modal>\n\n      <Modal\n\n        show={this.state.estadoModalMarca}\n        onHide={() => this.cambiarModalMarca()}\n        >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Agregar Marca\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n             <div className=\"card card-default\">\n                <div className=\"card-header cabezera\">\n                    <div className=\"form-group row\">\n                          <div className=\"col-sm-6\">\n                            <div className=\"form-check\">\n                              <label className=\"form-check-label\">\n                                <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"cerrarMarca\" value=\"1\" defaultChecked=\"\"/>\n                                Cerrar automaticamente\n                              <i className=\"input-helper\"></i></label>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-6\">\n                            <div className=\"form-check\">\n                              <label className=\"form-check-label\">\n                                <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"abrirMarca\" value=\"0\"/>\n                                Mantenerla abierta\n                              <i className=\"input-helper\"></i></label>\n                            </div>\n                          </div>\n                        </div>\n                </div>\n                <div className=\"modal-body\">\n                    <div className=\"card-body\">\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Nombre de la marca</label>\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreMarca\" id=\"nombreMarca\" onChange={this.handleChange}/>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"form-group boton\">\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearMarca\" onClick={()=>this.sendAgregarMarca()}>\n                                    Agregar</button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n\n        </Modal.Body>\n      </Modal>\n\n      <Modal\n\n        show={this.state.estadoModalProveedor}\n        onHide={() => this.cambiarModalProveedor()}\n        >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n             Agregar proveedor\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <div className=\"card card-default\">\n                <div className=\"card-header cabezera\">\n                    <div className=\"form-group row\">\n                        <div className=\"col-sm-6\">\n                        <div className=\"form-check\">\n                            <label className=\"form-check-label\">\n                            <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"cerrarProveedor\" value=\"1\" defaultChecked=\"\"/>\n                            Cerrar automaticamente\n                            <i className=\"input-helper\"></i></label>\n                        </div>\n                        </div>\n                        <div className=\"col-sm-6\">\n                        <div className=\"form-check\">\n                            <label className=\"form-check-label\">\n                            <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"abrirProveedor\" value=\"0\"/>\n                            Mantenerla abierta\n                            <i className=\"input-helper\"></i></label>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <div className=\"card-body\">\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        <label>RUC del proveedor</label>\n                                        <input type=\"number\" className=\"form-control\" name=\"rucProveedor\" onChange={this.handleChangeRUC}/>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <label>Telefono</label>\n                                        <input type=\"number\" className=\"form-control\" name=\"telefonoProveedor\" id=\"telefonoProveedor\" value={this.state.telefonoProveedor} onChange={this.handleChange}/>\n                                    </div>\n\n                                </div><br/>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Nombre del proveedor</label>\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreProveedor\" id=\"nombreProveedor\" value={this.state.nombreProveedor} onChange={this.handleChange}/>\n                                    </div>\n\n                                </div><br/>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Dirección</label>\n                                        <input type=\"text\" className=\"form-control\" name=\"direccionProveedor\" id=\"direccionProveedor\" value={this.state.direccionProveedor} onChange={this.handleChange}/>\n                                    </div>\n                                </div><br/>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Tipo</label>\n                                        <input type=\"text\" className=\"form-control\" name=\"tipoProveedor\" id=\"tipoProveedor\" value={this.state.tipoProveedor} onChange={this.handleChange}/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group boton\">\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProveedor\" onClick={()=>this.sendAgregarProveedor()}>\n                                    Agregar</button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n\n        </Modal.Body>\n      </Modal>\n\n     <Modal\n\n        show={this.state.estadoModalEditarProducto}\n        onHide={() => this.cambiarModalEditarProducto()}\n        >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n             Editar Producto\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <div className=\"card card-default\">\n                <div className=\"modal-body\">\n                    <div className=\"card-body\">\n                            <div className=\"form-group\" >\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Codigo</label>\n                                        <input type=\"hidden\" name=\"editarIdProducto\" id=\"editarIdProducto\" value={this.state.idProducto}/>\n                                        <input type=\"text\" className=\"form-control\" name=\"codigoP\" id=\"editarCodigoProductoNuevo\" value={this.state.codigoP} onChange={this.handleChange}/>\n                                    </div>\n                                    <div className=\"col-12\" id=\"editarAlertaCodigo\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        <label>Marcas</label>\n                                        <div className=\"input-group\">\n                                            <select className=\"form-control\" name=\"idMarca\" id=\"editarMarcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\n                                                {\n                                                    this.state.tasksM ?\n\n                                                    this.state.tasksM.map(element => {\n                                                        return (\n                                                            <option value={element.id}  >{element.nombre}</option>\n                                                            );\n                                                    })\n                                                    :null\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <label>Tipos de prodcuto</label>\n                                        <div className=\"input-group\">\n                                            <select className=\"form-control\" name=\"idTipo\" id=\"editarTipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo} >\n\n                                           {\n                                                    this.state.tasksTP ?\n                                                    this.state.tasksTP.map(element=>{\n                                                    return (\n                                                    <option value={element.id}>{element.nombre}</option>\n                                                    );\n                                                })\n                                                 : null\n\n\n                                                }\n\n\n\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Nombre del producto</label>\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreP\" id=\"editarNombreProductoNuevo\" value={this.state.nombreP} onChange={this.handleChange} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>Precio con IGV(18%)</label>\n                                        <input type=\"text\" name=\"precioP\" id=\"editarPrecioVentaProducto\" className=\"form-control\"\n                                            pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.state.precioP} data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group boton\">\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarProducto\" onClick={()=>{\n                                    this.sendEditarProducto()\n                                }}>\n                                    Editar</button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n\n        </Modal.Body>\n      </Modal>\n\n      <Toast\n            style={{\n            position: 'fixed',\n            top: 5,\n            right: 5,\n            zIndex:1060,\n            backgroundColor: 'rgba(76,208,76,0.7)',\n            color:'white'\n            }}\n            onClose={() => this.cambiarToastGreen('','false')}\n            show={this.state.estadoToastGreen}\n            delay={3000}\n            autohide\n            >\n              <Toast.Body>\n                <h4>{this.state.messageGreen}</h4>\n              </Toast.Body>\n        </Toast>\n\n      <Toast\n              style={{\n              position: 'fixed',\n              top: 5,\n              right: 5,\n              zIndex:1061,\n              backgroundColor: 'rgba(205,55,55,0.7)',\n              color:'white'\n                }}\n              onClose={() => this.cambiarToastRed('','false')}\n              show={this.state.estadoToastRed}\n              delay={3000}\n              autohide\n\n        >\n          <Toast.Body>\n            <h4>{this.state.messageRed}</h4>\n          </Toast.Body>\n      </Toast>\n\n            </div>\n    )\n}}\nexport default Almacen\n","import React from 'react'\nimport {Component} from 'react';\nimport EntradaCrear from  './EntradaCrear';\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport config from '../../config'\n\nclass Entrada extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n            entrada_tb :[],\n            addContainer: false,\n\n            //modales\n            estadoModalEntrada:false,\n            //toasts\n            estadoToastRed:false,\n            estadoToastGreen:false,\n            messageRed:'',\n            messageGreen:'',\n            //botones\n            estadoBoton:[],\n            //query\n            estadoQuery:''\n        }\n        this.fechaEntradaDataTabla=this.fetchEntradaDataTabla.bind(this);\n        this.add = this.add.bind(this);\n        this.handleChangeBuscador = this.handleChangeBuscador.bind(this);\n    }\n\n    componentDidMount(){\n      this.fetchEntradaDataTabla();\n    }\n\n    add() {\n      this.setState({addContainer : !this.state.addContainer})\n    }\n\n//envios posts\n\n    sendAgregarEntrada(){\n\n            fetch(config.api+`/almacen/entrada/crear`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    nombreEntrada: this.state.nombreEntrada\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(res => res.json())\n        .then(data => {\n            if(data.response==true){\n              console.log(\"exito\");\n              this.cambiarToastGreen(\"la entrada\");\n            }\n            else{\n              console.log(\"error\");\n              this.cambiarToastRed(\"en agregar Entrada\");\n            }\n\n        })\n        .catch((error)=> {\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\n          this.cambiarToastRed(\"en agregar Entrada\");\n        });  }\n\n\n  eliminarEntrada(id,codigo,cantidad){\n            fetch(config.api+`/almacen/entrada/eliminar`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                    codigo: codigo,\n                    id: id,\n                    cantidad: cantidad\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(res => res.json())\n        .then(data => {\n            if(data.response==true){\n              console.log(\"eliminado\");\n              this.cambiarToastGreen(\"Se elimino la entrada\");\n              this.fetchEntradaDataTabla();\n            }\n            else{\n              console.log(\"error\");\n              this.cambiarToastRed(\"Error al eliminar Entrada\");\n            }\n\n        })\n        .catch((error)=> {\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\n          this.cambiarToastRed(\"Error en eliminar entrada\");\n        });  }\n\n\n\n//modales y toasts\n\n    cambiarToastRed(message) {\n        this.setState({\n            messageRed: message,\n            estadoToastRed: !this.state.estadoToastRed\n        });\n    }\n    cambiarToastGreen(message) {\n        this.setState({\n            messageGreen: message,\n            estadoToastGreen: !this.state.estadoToastGreen\n        });\n    }\n    cambiarModalEntrada(){\n       console.log(\"holaaaaaa\");\n        this.setState({\n            estadoModalEntrada: !this.state.estadoModalEntrada\n        })\n    }\n\n\n// Paginate y buscadores\n\n    agregarBotones(){\n      let z = this.state.entrada_tb.last_page\n      console.log(z);\n      let x = [];\n      if(z){\n\n      for(let i = 1 ; i <= z ; i++){\n        x.push(i);\n      }\n      this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\n      }\n    }\n\n    cambiarPaginate(number){\n      console.log(number);\n      fetch(\n        config.api+`/almacen/entrada/tb_entradas?page=${number}&buscar=${this.state.estadoQuery}`,\n        {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n      )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({entrada_tb: data},()=>{\n              console.log(this.state.entrada_tb)\n              this.agregarBotones();\n            });\n\n      })\n\n    }\n\n    fetchQuery(query){\n        fetch(\n          config.api+`/almacen/entrada/tb_entradas?buscar=${query}`,\n          {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n        )\n          .then(res => res.json())\n          .then(data => {\n            this.setState({entrada_tb: data,estadoQuery: query}, () => {\n                this.agregarBotones();\n                console.log(\"obtenido?\");\n            });\n          })\n    }\n\n    handleChangeBuscador (e){\n      const {name , value} = e.target;\n      console.log(value);\n      this.fetchQuery(value);\n      console.log(name);\n\n    }\n//|-------------------------------------------|\n    handleChange (e){\n      const {name , value} = e.target;\n      this.setState({\n          [name] : value\n\n      })\n      console.log(name);\n      console.log(value);\n    }\n\n    fetchEntradaDataTabla(){\n      fetch(\n        config.api+'/almacen/entrada/tb_entradas',\n        {\n          method: 'GET',\n          headers: {\n              'Accept' : 'application/json',\n              'Content-Type': 'application/json',\n              'usuid'         : localStorage.getItem('usuid')\n          }\n      }\n      )\n          .then(res => res.json())\n          .then(data => {\n              this.setState({entrada_tb: data},()=>{\n                console.log(this.state.entrada_tb)\n                this.agregarBotones();\n              });\n\n      })\n    }\n\n\n\n\n    render(){\n        return(\n\n            <div className=\"row\">\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h4 className=\"card-title\">Modulos de agregar</h4>\n                          <button type=\"button\" className=\"btn waves-effect waves-light btn-primary\" onClick={() => this.add()}>Agregar Entrada</button>\n                      </div>\n                  </div>\n              </div>\n               { this.state.addContainer && <EntradaCrear addContainer={this.add} />}\n\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n\n                          <table id=\"tb_entradas\" className=\"table table-striped\" style={{width:'100%'}}>\n                              <thead>\n                                  <tr>\n                                      <th><h4 className=\"card-title\">Registro de entradas</h4></th>\n                                      <th><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\n                                  </tr>\n                                  <tr>\n                                      <th>Numero Factura</th>\n                                      <th>Fecha</th>\n                                      <th>Codigo producto</th>\n                                      <th>Nombre producto</th>\n                                      <th>Cantidad</th>\n                                      <th>Precio</th>\n                                      <th>Opciones</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                     {\n                                      this.state.entrada_tb.data ?\n                                      this.state.entrada_tb.data.map(task =>{\n                                          return (\n                                              <tr key={task.id}>\n                                                  <td>{task.factura}</td>\n                                                  <td>{task.fecha}</td>\n                                                  <td>{task.codigo}</td>\n                                                  <td>{task.nombre}</td>\n                                                  <td>{task.cantidad}</td>\n                                                  <td>{task.precio}</td>\n                                                  <th>\n                                                  <button className=\"btn btn-sm btn-primary ver\" type=\"button\" onClick={()=>this.eliminarEntrada(task.entradaId,task.codigo,task.cantidad)}><i className=\"mdi mdi-delete\"></i></button>\n                                                  </th>\n                                              </tr>\n                                          );\n                                      } )   : null\n                                  }\n                              </tbody>\n                              </table>\n                              <div className=\"container\">\n                                  <div className=\"row justify-content-end\">\n                                    <div className=\"col-4\">\n\n                                      {\n                                        this.state.estadoBoton?\n                                        this.state.estadoBoton.map(task =>{\n                                            return (\n                                                <button key={task}\n                                                    className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\n\n                                            );\n                                         } )   : null\n                                       }\n                                  </div>\n                                </div>\n                              </div>\n\n\n                      </div>\n                  </div>\n              </div>\n\n              <Modal\n                  size=\"lg\"\n                  show={this.state.estadoModalEntrada}\n                  onHide={() => this.cambiarModalEntrada()}\n                  >\n                  <Modal.Header closeButton>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                      Detalles de la entrada\n                    </Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                              <div className=\"card card-default\">\n                                      <div className=\"modal-body\">\n                                          <div className=\"card-body\" id=\"entradaDetalladaModalBody\">\n                                          <label>Proveedor:</label><br/>\n                                            <span id=\"proveedorEntradaDetalle\"></span><br/>\n                                          <label>Numero entrada:</label><br/>\n                                            <span id=\"numeroEntradaDetalle\"></span><br/>\n                                          <label>Fecha de emisón:</label><br/>\n                                            <span id=\"fechaEntradaDetalle\"></span><br/><br/>\n                                          <table className=\"table table-bordered\" id=\"tablaDetallesEntradaModal\">\n                                            <thead>\n                                              <tr>\n                                                <th>\n                                                  #\n                                                </th>\n                                                <th>\n                                                  Producto\n                                                </th>\n                                                <th>\n                                                  Precio\n                                                </th>\n                                                <th>\n                                                  Cantidad\n                                                </th>\n                                                <th> Importe </th>\n                                              </tr>\n                                            </thead>\n                                          <tbody>\n\n                                          </tbody>\n                                        </table>\n                                          </div>\n                                      </div>\n                                  </div>\n\n                  </Modal.Body>\n                </Modal>\n\n\n\n\n              <Toast\n                    style={{\n                    position: 'fixed',\n                    top: 5,\n                    right: 5,\n                    zIndex:1060,\n                    backgroundColor: 'rgba(76,208,76,0.7)',\n                    color:'white'\n                    }}\n                    onClose={() => this.cambiarToastGreen()}\n                    show={this.state.estadoToastGreen}\n                    delay={3000}\n                    autohide\n                    >\n                      <Toast.Body>\n                        <h5>{this.state.messageGreen}</h5>\n                      </Toast.Body>\n                </Toast>\n\n              <Toast\n                      style={{\n                      position: 'fixed',\n                      top: 5,\n                      right: 5,\n                      zIndex:1061,\n                      backgroundColor: 'rgba(205,55,55,0.7)',\n                      color:'white'\n                        }}\n                      onClose={() => this.cambiarToastRed()}\n                      show={this.state.estadoToastRed}\n                      delay={3000}\n                      autohide\n\n                >\n                  <Toast.Body>\n                    <h5>{this.state.messageRed}</h5>\n                  </Toast.Body>\n              </Toast>\n\n\n            </div>\n\n)\n}}\nexport default Entrada\n","import React from 'react'\nimport {Component} from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport config from '../../config'\n\nclass Marca   extends Component {\n  \n    constructor(){\n      super();\n      this.state ={\n\n        csrf_token : \"\",\n        marca_tb :[],\n        nombreMarca:'',\n        editarNombreMarca:'',\n        editarIdMarca:'',\n        //modales\n        estadoModalMarca:false,\n        estadoModalEditarMarca:false,\n        //Toast\n        estadoToastRed:false,\n        estadoToastGreen:false,\n        messageRed:'',\n        messageGreen:'',\n        //botones\n        estadoBoton:[],\n        //query\n        estadoQuery:''\n      }\n      this.agregarBotones = this.agregarBotones.bind(this);\n      this.fetchDataTable = this.fetchDataTable.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleChangeBuscador = this.handleChangeBuscador.bind(this);\n  }\n\n\n      cambiarToastRed(message) {\n          this.setState({\n              messageRed: message,\n              estadoToastRed: !this.state.estadoToastRed\n          });\n      }\n      cambiarToastGreen(message) {\n          this.setState({\n              messageGreen: message,\n              estadoToastGreen: !this.state.estadoToastGreen\n          });\n      }\n\n      cambiarModalMarca(){\n          this.setState({\n              estadoModalMarca: !this.state.estadoModalMarca\n          })\n      }\n      cambiarModalEditarMarca(id,nombre){\n          this.setState({\n              estadoModalEditarMarca: !this.state.estadoModalEditarMarca,\n              editarNombreMarca: nombre,\n              editarIdMarca: id\n          })\n      }\n      sendAgregarMarca(){\n\n              fetch(config.api+`/almacen/marca/crear`,\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                      '_token': this.state.csrf_token,\n                      nombreMarca: this.state.nombreMarca\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n                  }\n              }\n          )\n          .then(res => res.json())\n          .then(data => {\n              if(data.response==true){\n                console.log(\"exito\");\n                this.cambiarToastGreen(\"la marca\");\n                this.fetchDataTable();\n              }\n              else{\n                console.log(\"error\");\n                this.cambiarToastRed(\"en agregar Marca\");\n              }\n\n          })\n          .catch((error)=> {\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\n            this.cambiarToastRed(\"en agregar Marca\");\n          });  }\n\n      sendEditarMarca(){\n\n                  fetch(config.api+`/almacen/marcas/editar`,\n                  {\n                      method: 'POST',\n                      body: JSON.stringify({\n                          '_token': this.state.csrf_token,\n                          editarNombreMarca: this.state.editarNombreMarca,\n                          editarIdMarca: this.state.editarIdMarca\n                      }),\n                      headers: {\n                          'Accept' : 'application/json',\n                          'Content-Type': 'application/json',\n                          'usuid'         : localStorage.getItem('usuid')\n                      }\n                  }\n              )\n              .then(res => res.json())\n              .then(data => {\n                  if(data.response==true){\n                    console.log(\"exito\");\n                    this.cambiarToastGreen(\"la marca\");\n                    this.fetchDataTable();\n                  }\n                  else{\n                    console.log(\"error\");\n                    this.cambiarToastRed(\"en editar Marca\");\n                  }\n\n              })\n              .catch((error)=> {\n                console.log('Hubo un problema con la petición Fetch:' + error.message);\n                this.cambiarToastRed(\"en editar Marca\");\n              });  }\n\n      deleteMarca(id){\n            console.log(id);\n                fetch(config.api+`/almacen/marcas/eliminar`,{\n                    method: 'POST',\n                    body: JSON.stringify({\n                        '_token': this.state.csrf_token,\n                        id: id\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-type' : 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                })\n                .then(res => res.json())\n                .then(data =>{\n                    if(data.response==true){\n                      console.log(\"exito\");\n                      this.cambiarToastGreen(\"en eliminar Marca\");\n                      this.fetchDataTable();\n                    }\n                    else{\n                      console.log(\"error\");\n                      this.cambiarToastRed(\"en eliminar Marca\");\n                    }\n                })\n                .catch((error)=> {\n                  console.log('Hubo un problema con la petición Fetch:' + error.message);\n                  this.cambiarToastRed(\"en eliminar Marca\");\n                });\n\n      }\n\n    agregarBotones(){\n      let z = this.state.marca_tb.last_page\n      console.log(z);\n      let x = [];\n      if(z){\n\n      for(let i = 1 ; i <= z ; i++){\n        x.push(i);\n      }\n      this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\n      }\n    }\n\n    cambiarPaginate(number){\n      console.log(number);\n      fetch(\n        config.api+`/almacen/marcas/tb_marcas?page=${number}&bnombre=${this.state.estadoQuery}`,\n        {\n          method: 'GET',\n          headers: {\n              'Accept' : 'application/json',\n              'Content-Type': 'application/json',\n              'usuid'         : localStorage.getItem('usuid')\n          }\n      }\n      )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({marca_tb: data},()=>{\n              console.log(this.state.marca_tb)\n              this.agregarBotones();\n            });\n\n      })\n\n    }\n\n\n    fetchDataTable(){\n      fetch(\n        config.api+'/almacen/marcas/tb_marcas',\n        {\n          method: 'GET',\n          headers: {\n              'Accept' : 'application/json',\n              'Content-Type': 'application/json',\n              'usuid'         : localStorage.getItem('usuid')\n          }\n      }\n      )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({marca_tb: data},()=>{\n              console.log(this.state.marca_tb)\n              this.agregarBotones();\n            });\n\n      })\n    }\n    fetchQuery(query){\n        fetch(\n          config.api+`/almacen/marcas/tb_marcas?bnombre=${query}`,\n          {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n        )\n          .then(res => res.json())\n          .then(data => {\n            this.setState({marca_tb: data,estadoQuery: query}, () => {\n                this.agregarBotones();\n                console.log(\"obtenido?\");\n            });\n          })\n    }\n\n    handleChange (e){\n      const {name , value} = e.target;\n      this.setState({\n          [name] : value\n\n      })\n      console.log(name);\n      console.log(value);\n    }\n    handleChangeBuscador (e){\n      const {name , value} = e.target;\n      console.log(value);\n      this.fetchQuery(value);\n      console.log(name);\n\n    }\n\n    componentDidMount(){\n      this.fetchDataTable();\n    }\n\n\n\n\n\n\n  render(){\n    return(\n\n\n            <div className=\"row\">\n\n                <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h4 className=\"card-title\">Modulos de agregar</h4>\n                          <button type=\"button\" className=\"btn waves-effect waves-light btn-info\" onClick={()=>this.cambiarModalMarca()}>Agregar Marca</button>\n                      </div>\n                  </div>\n              </div>\n\n\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h4 className=\"card-title\">Marcas</h4>\n                          <table id=\"tb_marcas\" className=\"table table-striped\" style={{width:'100%'}}>\n                              <thead>\n                                  <tr>\n                                    <th style={{textAlign:'right'}}><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\n                                  </tr>\n                                  <tr>\n                                      <th>Nombre de la marca</th>\n                                      <th>Opciones</th>\n                                  </tr>\n                              </thead>\n                              <tbody>\n                                  {\n                                          this.state.marca_tb.data ?\n                                          this.state.marca_tb.data.map(task =>{\n                                              return (\n                                                  <tr key={task.id}>\n                                                      <td>{task.nombre}</td>\n                                                      <td><button\n                                                      className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarModalEditarMarca(task.id,task.nombre)}><i className=\"mdi mdi-lead-pencil\"></i></button>\n                                                      <button className=\"btn btn-sm btn-danger eliminar\" type=\"button\" onClick={()=>this.deleteMarca(task.id)}><i className=\"mdi mdi-delete\"></i></button>\n                                                      </td>\n\n                                                  </tr>\n                                              );\n                                           } )   : null\n                                          }\n                              </tbody>\n\n                          </table>\n                          <div className=\"container\">\n                              <div className=\"row justify-content-end\">\n                                <div className=\"col-4\">\n\n                                  {\n                                    this.state.estadoBoton?\n                                    this.state.estadoBoton.map(task =>{\n                                        return (\n                                            <button key={task}\n                                                className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\n\n                                        );\n                                     } )   : null\n                                   }\n                              </div>\n                            </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n\n            <Modal\n\n                show={this.state.estadoModalMarca}\n                onHide={() => this.cambiarModalMarca()}\n                >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"example-custom-modal-styling-title\">\n                    Agregar Marca\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                     <div className=\"card card-default\">\n                        <div className=\"card-header cabezera\">\n                            <div className=\"form-group row\">\n                                  <div className=\"col-sm-6\">\n                                    <div className=\"form-check\">\n                                      <label className=\"form-check-label\">\n                                        <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"cerrarMarca\" value=\"1\" defaultChecked=\"\"/>\n                                        Cerrar automaticamente\n                                      <i className=\"input-helper\"></i></label>\n                                    </div>\n                                  </div>\n                                  <div className=\"col-sm-6\">\n                                    <div className=\"form-check\">\n                                      <label className=\"form-check-label\">\n                                        <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"abrirMarca\" value=\"0\"/>\n                                        Mantenerla abierta\n                                      <i className=\"input-helper\"></i></label>\n                                    </div>\n                                  </div>\n                              </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"card-body\">\n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Nombre de la marca</label>\n                                                <input type=\"text\" className=\"form-control\" name=\"nombreMarca\" id=\"nombreMarca\" onChange={this.handleChange}/>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"form-group boton\">\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearMarca\" onClick={()=>this.sendAgregarMarca()}>\n                                            Agregar</button>\n                                    </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </Modal.Body>\n              </Modal>\n\n            <Modal\n\n                show={this.state.estadoModalEditarMarca}\n                onHide={() => this.cambiarModalEditarMarca()}\n                >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"example-custom-modal-styling-title\">\n                    Editar Marca\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                      <div className=\"card card-default\">\n                          <div className=\"modal-body\">\n                              <div className=\"card-body\">\n                                      <div className=\"form-group\">\n                                          <div className=\"row\">\n                                              <div className=\"col-12\">\n                                                  <label>Nombre de la marca</label>\n                                                  <input type=\"text\" className=\"form-control\" name=\"editarNombreMarca\" id=\"editarNombreMarca\"  value={this.state.editarNombreMarca} onChange={this.handleChange}/>\n                                                  <input type=\"hidden\" name=\"editarIdMarca\" id=\"editarIdMarca\" />\n                                              </div>\n                                          </div>\n                                      </div>\n                                      <div className=\"form-group boton\">\n                                          <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarMarca\" onClick={()=>this.sendEditarMarca()}>\n                                              Editar</button>\n                                      </div>\n                              </div>\n                          </div>\n                      </div>\n                </Modal.Body>\n              </Modal>\n\n              <Toast\n                    style={{\n                    position: 'fixed',\n                    top: 5,\n                    right: 5,\n                    zIndex:1060,\n                    backgroundColor: 'rgba(76,208,76,0.7)',\n                    color:'white'\n                    }}\n                    onClose={() => this.cambiarToastGreen()}\n                    show={this.state.estadoToastGreen}\n                    delay={3000}\n                    autohide\n                    >\n                      <Toast.Body>\n                        <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\n                      </Toast.Body>\n                </Toast>\n\n              <Toast\n                      style={{\n                      position: 'fixed',\n                      top: 5,\n                      right: 5,\n                      zIndex:1061,\n                      backgroundColor: 'rgba(205,55,55,0.7)',\n                      color:'white'\n                        }}\n                      onClose={() => this.cambiarToastRed()}\n                      show={this.state.estadoToastRed}\n                      delay={3000}\n                      autohide\n\n                >\n                  <Toast.Body>\n                    <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\n                  </Toast.Body>\n              </Toast>\n\n\n            </div>\n\n)}}\n\nexport default Marca\n","import React from 'react'\nimport {Component} from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport config from '../../config'\n\nclass Proveedores extends Component{\n\n    constructor(){\n        super();\n        this.state ={\n            //editar proveedor\n            proveedores_tb:[],\n            editarRucProveedor:'',\n            csrf_token:'',\n            editarTelefonoProveedor:'',\n            editarNombreProveedor:'',\n            editarDireccionProveedor:'',\n            editarIdProveedor:'',\n\n            //agregar proveedor\n            RUCdatos:[],\n            aRuc:'',\n            aTipo:'',\n            aTelefono:'',\n            aNombreProveedor:'',\n            aDireccion:'',\n\n            //modales\n            estadoModalProveedor:false,\n            estadoModalEditarProveedor: false,\n            //toasts\n            estadoToastRed:false,\n            estadoToastGreen:false,\n            messageRed:'',\n            messageGreen:'',\n            //botones\n            estadoBoton:[],\n            //query\n            estadoQuery:''\n        }\n\n        this.handleChangeRUC = this.handleChangeRUC.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeBuscador= this.handleChangeBuscador.bind(this);\n\n    }\n\n    //modales y toasts\n\n        cambiarToastRed(message) {\n            this.setState({\n                messageRed: message,\n                estadoToastRed: !this.state.estadoToastRed\n            });\n        }\n        cambiarToastGreen(message) {\n            this.setState({\n                messageGreen: message,\n                estadoToastGreen: !this.state.estadoToastGreen\n            });\n        }\n        cambiarModalProveedor(){\n            this.setState({\n                estadoModalProveedor: !this.state.estadoModalProveedor\n            })\n        }\n        cambiarModalEditarProveedor(){\n            this.setState({\n                estadoModalEditarProveedor: !this.state.estadoModalEditarProveedor\n            })\n        }\n\n\n    // Paginate y buscadores\n\n        agregarBotones(){\n          let z = this.state.proveedores_tb.last_page\n          console.log(z);\n          let x = [];\n          if(z){\n\n          for(let i = 1 ; i <= z ; i++){\n            x.push(i);\n          }\n          this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\n          }\n        }\n\n        cambiarPaginate(number){\n          console.log(number);\n          fetch(\n              config.api+`/almacen/proveedores/tb_proveedores?page=${number}&buscar=${this.state.estadoQuery}`,\n              {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n            )\n            .then(res => res.json())\n            .then(data => {\n                this.setState({proveedores_tb: data},()=>{\n                  console.log(this.state.proveedores_tb)\n                  this.agregarBotones();\n                });\n\n          })\n\n        }\n\n\n        fetchQuery(query){\n            fetch(\n                config.api+`/almacen/proveedores/tb_proveedores?buscar=${query}`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n              .then(res => res.json())\n              .then(data => {\n                this.setState({proveedores_tb: data,estadoQuery: query}, () => {\n                    this.agregarBotones();\n                    console.log(\"obtenido?\");\n                });\n              })\n        }\n\n        handleChangeBuscador (e){\n          const {name , value} = e.target;\n          console.log(value);\n          this.fetchQuery(value);\n          console.log(name);\n\n        }\n\n//------------|\n\n    fetchDataTable(){\n        fetch(\n            config.api+'/almacen/proveedores/tb_proveedores',\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n          .then(res => res.json())\n          .then(data => {\n              this.setState({proveedores_tb: data},()=>{\n                console.log(this.state.proveedores_tb)\n                this.agregarBotones();\n              });\n\n      })\n    }\n    fetchRUC(){\n        fetch(config.api+`/consult/ruc/${this.state.aRuc}`,\n        {\n            method: 'POST',\n            body: JSON.stringify({\n                '_token': this.state.csrf_token,\n            }),\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n        ).then(res => res.json())\n            .then(data => {\n            this.setState({RUCdatos: data}, () => {\n                this.datosdeRUC();\n                });\n              })\n        }\n\n    datosdeRUC(){\n\n        if(this.state.RUCdatos){\n            this.setState({\n                    aTelefono:this.state.RUCdatos.persona.telefonos[0],\n                    aNombreProveedor:this.state.RUCdatos.persona.razonSocial,\n                    aDireccion:this.state.RUCdatos.persona.direccion,\n                    aTipo:this.state.RUCdatos.persona.tipo\n            },console.log(this.state.RUCdatos))\n        }\n    }\n\n\n    sendAgregarProveedor(){\n            fetch(config.api+'/almacen/proveedor/crear',\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        '_token': this.state.csrf_token,\n                        rucProveedor:this.state.aRuc,\n                        telefonoProveedor:this.state.aTelefono,\n                        nombreProveedor:this.state.aNombreProveedor,\n                        direccionProveedor:this.state.aDireccion,\n                        tipoProveedor:this.state.aTipo\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n\n                    }\n                }\n            )\n            .then(res =>res.json())\n            .then(data => {\n                if(data.response==true){\n                  console.log(\"correcto creado Proveedor:\");\n                  this.cambiarToastGreen(\"el Proveedor\");\n                  this.fetchDataTable();\n\n                }\n                else{\n                  console.log(\"error\");\n                  this.cambiarToastRed(\"en agregar Proveedor\");\n                }\n            })\n            .catch((error)=> {\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\n              this.cambiarToastRed(\"en agregar Proveedor\");\n            });\n     }\n     sendEditarProveedor(){\n             fetch(config.api+'/almacen/proveedores/editar',\n                 {\n                     method: 'POST',\n                     body: JSON.stringify({\n                         '_token': this.state.csrf_token,\n                         editarRucProveedor:this.state.editarRucProveedor,\n                         editarTelefonoProveedor:this.state.editarTelefonoProveedor,\n                         editarNombreProveedor:this.state.editarNombreProveedor,\n                         editarDireccionProveedor:this.state.editarDireccionProveedor,\n                         editarIdProveedor:this.state.editarIdProveedor\n                     }),\n                     headers: {\n                         'Accept' : 'application/json',\n                         'Content-Type': 'application/json',\n                         'usuid'         : localStorage.getItem('usuid')\n\n                     }\n                 }\n             )\n             .then(res =>res.json())\n             .then(data => {\n\n               if(data.response==true){\n                 console.log(\"correcto editado Proveedor:\");\n                 this.cambiarToastGreen(\"el proveedor\");\n                 this.fetchDataTable();\n\n               }\n               else{\n                 console.log(\"error\");\n                 this.cambiarToastRed(\"en editar Proveedor\");\n               }\n           })\n           .catch((error)=> {\n             console.log('Hubo un problema con la petición Fetch:' + error.message);\n             this.cambiarToastRed(\"en editar Proveedor\");\n           });\n      }\n\n\n    editTask(ruc,nombreProveedor,telf,direccion,id){\n      let telefono;\n      if(telf == null){\n        telefono = '';\n      }\n        this.setState({\n            editarRucProveedor: ruc,\n            editarNombreProveedor: nombreProveedor,\n            editarTelefonoProveedor: telefono,\n            editarDireccionProveedor: direccion,\n            editarIdProveedor: id\n        })\n    }\n\n\n    handleChangeRUC(e){\n        const {name , value} = e.target;\n\n        if(value.length == 11){\n            this.setState({\n                [name] : value\n\n            }, () => {\n                this.fetchRUC();\n            })\n            console.log(value);\n        }\n\n    }\n\n\n\n    handleChange (e){\n        const {name , value} = e.target;\n        this.setState({\n            [name] : value\n\n        })\n        console.log(name);\n        console.log(value);\n\n    }\n\n    componentDidMount(){\n        this.fetchDataTable();\n    }\n\n\n\n\nrender(){\n    return(\n\n\n            <div className=\"row\">\n\n               <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h4 className=\"card-title\">Modulos de agregar</h4>\n                          <button type=\"button\" onClick={()=>this.cambiarModalProveedor()} className=\"btn waves-effect waves-light btn-warning\">Agregar Proveedor</button>\n                      </div>\n                  </div>\n              </div>\n\n\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <table id=\"tb_proveedores\" className=\"table table-striped\" style={{width:'100%'}}>\n                              <thead>\n                                  <tr>\n                                      <th><h4 className=\"card-title\">Registro de proveedores</h4></th>\n                                      <th><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\n                                  </tr>\n                                  <tr>\n                                      <th>RUC proveedor</th>\n                                      <th>Proveedor</th>\n                                      <th>Telefóno</th>\n                                      <th>Dirección</th>\n                                      <th>Tipo</th>\n                                      <th>Opciones</th>\n                                  </tr>\n                              </thead>\n                              <tbody>\n                                  {\n                                      this.state.proveedores_tb.data ?\n                                      this.state.proveedores_tb.data.map(task =>{\n                                          return (\n                                              <tr key={task.id}>\n                                                  <td>{task.ruc}</td>\n                                                  <td>{task.nombre}</td>\n                                                  <td>{task.numero}</td>\n                                                  <td>{task.direccion}</td>\n                                                  <td>{task.tipo}</td>\n                                                  <td><button onClick={()=>{this.editTask(task.ruc,task.nombre,task.numero,task.direccion,task.id);\n                                                    this.cambiarModalEditarProveedor()}}\n                                                  className=\"btn btn-sm btn-secondary editar\" type=\"button\"><i className=\"mdi mdi-lead-pencil\"></i></button></td>\n                                              </tr>\n                                          );\n                                      } )   : null\n                                  }\n\n                              </tbody>\n                          </table>\n                            <div className=\"container\">\n                                <div className=\"row justify-content-end\">\n                                  <div className=\"col-4\">\n\n                                    {\n                                      this.state.estadoBoton?\n                                      this.state.estadoBoton.map(task =>{\n                                          return (\n                                              <button key={task}\n                                                  className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\n\n                                          );\n                                       } )   : null\n                                     }\n                                </div>\n                              </div>\n                            </div>\n\n                      </div>\n                  </div>\n              </div>\n\n           <Modal\n                  show={this.state.estadoModalProveedor}\n                  onHide={() => this.cambiarModalProveedor()}\n            >\n              <Modal.Header closeButton>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                      Agregar Proveedor\n                    </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <div className=\"card card-default\">\n                      <div className=\"card-header cabezera\">\n                          <div className=\"form-group row\">\n                              <div className=\"col-sm-6\">\n                              <div className=\"form-check\">\n                                  <label className=\"form-check-label\">\n                                  <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"cerrarProveedor\" value=\"1\" defaultChecked=\"\"/>\n                                  Cerrar automaticamente\n                                  <i className=\"input-helper\"></i></label>\n                              </div>\n                              </div>\n                              <div className=\"col-sm-6\">\n                              <div className=\"form-check\">\n                                  <label className=\"form-check-label\">\n                                  <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"abrirProveedor\" value=\"0\"/>\n                                  Mantenerla abierta\n                                  <i className=\"input-helper\"></i></label>\n                              </div>\n                              </div>\n                          </div>\n                      </div>\n                      <div className=\"modal-body\">\n                          <div className=\"card-body\">\n                                  <div className=\"form-group\">\n                                      <div className=\"row\">\n                                          <div className=\"col-6\">\n                                              <label>RUC del proveedor</label>\n                                              <input type=\"number\" className=\"form-control\" name=\"aRuc\" id=\"rucProveedor\" onChange={this.handleChangeRUC}/>\n                                          </div>\n                                          <div className=\"col-6\">\n                                              <label>Telefono</label>\n                                              <input type=\"number\" className=\"form-control\" name=\"aTelefono\" id=\"telefonoProveedor\" value={this.state.aTelefono} onChange={this.handleChange}/>\n                                          </div>\n\n                                      </div><br/>\n                                      <div className=\"row\">\n                                          <div className=\"col-12\">\n                                              <label>Nombre del proveedor</label>\n                                              <input type=\"text\" className=\"form-control\" name=\"aNombreProveedor\" id=\"nombreProveedor\" value={this.state.aNombreProveedor} onChange={this.handleChange}/>\n                                          </div>\n\n                                      </div><br/>\n                                      <div className=\"row\">\n                                          <div className=\"col-12\">\n                                              <label>Dirección</label>\n                                              <input type=\"text\" className=\"form-control\" name=\"aDireccion\" id=\"direccionProveedor\" value={this.state.aDireccion} onChange={this.handleChange}/>\n                                          </div>\n                                      </div><br/>\n                                      <div className=\"row\">\n                                          <div className=\"col-12\">\n                                              <label>Tipo</label>\n                                              <input type=\"text\" className=\"form-control\" name=\"aTipo\" id=\"tipoProveedor\" value={this.state.aTipo} onChange={this.handleChange}/>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <div className=\"form-group boton\">\n                                      <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProveedor\" onClick={()=>this.sendAgregarProveedor()}>\n                                          Agregar</button>\n                                  </div>\n                          </div>\n                      </div>\n                  </div>\n\n              </Modal.Body>\n           </Modal>\n\n           <Modal\n                  show={this.state.estadoModalEditarProveedor}\n                  onHide={() => this.cambiarModalEditarProveedor()}\n            >\n              <Modal.Header closeButton>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                      Editar Proveedor\n                    </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                    <div className=\"card card-default\">\n                        <div className=\"card-header cabezera\">\n                          </div>\n                            <div className=\"modal-body\">\n                              <div className=\"card-body\">\n                                    <div className=\"form-group\" >\n                                        <div className=\"row\">\n                                            <div className=\"col-6\">\n                                                <label>RUC:</label>\n                                                <input type=\"hidden\" name=\"editarIdProveedor\" id=\"editarIdProveedor\" />\n                                                <input type=\"text\" className=\"form-control\" name=\"editarRucProveedor\" id=\"editarRucProveedor\" value={this.state.editarRucProveedor} onChange={this.handleChange}/>\n                                            </div>\n                                            <div className=\"col-6\">\n                                                <label>Telefóno:</label>\n                                                <input type=\"text\" className=\"form-control\" name=\"editarTelefonoProveedor\" id=\"editarTelefonoProveedor\" value={this.state.editarTelefonoProveedor} onChange={this.handleChange}/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Nombre del proveedor:</label>\n                                                <textarea className=\"form-control\" name=\"editarNombreProveedor\" id=\"editarNombreProveedor\" value={this.state.editarNombreProveedor} onChange={this.handleChange}></textarea>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Dirección:</label>\n                                                <textarea className=\"form-control\" name=\"editarDireccionProveedor\" id=\"editarDireccionProveedor\" value={this.state.editarDireccionProveedor} onChange={this.handleChange} ></textarea>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group boton\">\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarProveedor\" onClick={()=>this.sendEditarProveedor()}>\n                                            Editar</button>\n                                    </div>\n                            </div>\n                        </div>\n                    </div>\n\n              </Modal.Body>\n           </Modal>\n\n           <Toast\n                 style={{\n                 position: 'fixed',\n                 top: 5,\n                 right: 5,\n                 zIndex:1060,\n                 backgroundColor: 'rgba(76,208,76,0.7)',\n                 color:'white'\n                 }}\n                 onClose={() => this.cambiarToastGreen()}\n                 show={this.state.estadoToastGreen}\n                 delay={3000}\n                 autohide\n                 >\n                   <Toast.Body>\n                     <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\n                   </Toast.Body>\n             </Toast>\n\n           <Toast\n                   style={{\n                   position: 'fixed',\n                   top: 5,\n                   right: 5,\n                   zIndex:1061,\n                   backgroundColor: 'rgba(205,55,55,0.7)',\n                   color:'white'\n                     }}\n                   onClose={() => this.cambiarToastRed()}\n                   show={this.state.estadoToastRed}\n                   delay={3000}\n                   autohide\n\n             >\n               <Toast.Body>\n                 <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\n               </Toast.Body>\n           </Toast>\n\n  </div>\n\n    )\n}}\n\nexport default Proveedores\n","import React from 'react'\nimport {Component} from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport config from '../../config'\n\nclass Tipoproducto extends Component{\n\n    constructor(){\n        super();\n        this.state ={\n          tiposProductos_tb:[],\n          nombreTipoProducto: '',\n          editarNombreTipoProducto:'',\n          editarIdTipoProducto:'',\n          csrf_token:'',\n\n          //modales\n          estadoModalTipoProducto:false,\n          estadoModalEditarTipoProducto:false,\n          //Toast\n          estadoToastRed:false,\n          estadoToastGreen:false,\n          messageRed:'',\n          messageGreen:'',\n          //botones\n          estadoBoton:[],\n          //query\n          estadoQuery:''\n\n\n        }\n       this.handleChange = this.handleChange.bind(this);\n       this.agregarBotones = this.agregarBotones.bind(this);\n       this.handleChangeBuscador = this.handleChangeBuscador.bind(this);\n    }\n\n\n\n    //modales y toasts\n\n        cambiarToastRed(message) {\n            this.setState({\n                messageRed: message,\n                estadoToastRed: !this.state.estadoToastRed\n            });\n        }\n        cambiarToastGreen(message) {\n            this.setState({\n                messageGreen: message,\n                estadoToastGreen: !this.state.estadoToastGreen\n            });\n        }\n        cambiarModalTipoProducto(){\n            this.setState({\n                estadoModalTipoProducto: !this.state.estadoModalTipoProducto\n            })\n        }\n        cambiarModalEditarTipoProducto(nombre,id){\n            this.setState({\n                estadoModalEditarTipoProducto: !this.state.estadoModalEditarTipoProducto,\n                editarNombreTipoProducto: nombre,\n                editarIdTipoProducto: id\n            })\n        }\n\n\n\n    // Paginate y buscadores\n\n        agregarBotones(){\n          let z = this.state.tiposProductos_tb.last_page\n          console.log(z);\n          let x = [];\n          if(z){\n\n          for(let i = 1 ; i <= z ; i++){\n            x.push(i);\n          }\n          this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\n          }\n        }\n\n        cambiarPaginate(number){\n          console.log(number);\n          fetch(\n            config.api+`/almacen/tiposproductos/tb_tiposProductos?page=${number}&bnombre=${this.state.estadoQuery}`,\n            {\n              method: 'GET',\n              headers: {\n                  'Accept' : 'application/json',\n                  'Content-Type': 'application/json',\n                  'usuid'         : localStorage.getItem('usuid')\n              }\n          }\n          )\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tiposProductos_tb: data},()=>{\n                  console.log(this.state.tiposProductos_tb)\n                  this.agregarBotones();\n                });\n\n          })\n\n        }\n\n\n        fetchQuery(query){\n            fetch(\n              config.api+`/almacen/tiposproductos/tb_tiposProductos?bnombre=${query}`,\n              {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n            )\n              .then(res => res.json())\n              .then(data => {\n                this.setState({tiposProductos_tb: data,estadoQuery: query}, () => {\n                    this.agregarBotones();\n                    console.log(\"obtenido?\");\n                });\n              })\n        }\n\n        handleChangeBuscador (e){\n          const {name , value} = e.target;\n          console.log(value);\n          this.fetchQuery(value);\n          console.log(name);\n\n        }\n\n//-------------------------------------------------------|\n\n    fetchDataTable(){\n      fetch(\n        config.api+'/almacen/tiposproductos/tb_tiposProductos',\n        {\n          method: 'GET',\n          headers: {\n              'Accept' : 'application/json',\n              'Content-Type': 'application/json',\n              'usuid'         : localStorage.getItem('usuid')\n          }\n      }\n      )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({tiposProductos_tb: data},()=>{\n              console.log(this.state.tiposProductos_tb)\n              this.agregarBotones();\n            });\n        })\n     }\n     sendAgregarTipoProducto(){\n\n             fetch(config.api+`/almacen/tipo/crear`,\n             {\n                 method: 'POST',\n                 body: JSON.stringify({\n                     '_token': this.state.csrf_token,\n                     nuevoTipoProducto: this.state.nombreTipoProducto\n                 }),\n                 headers: {\n                     'Accept' : 'application/json',\n                     'Content-Type': 'application/json',\n                     'usuid'         : localStorage.getItem('usuid')\n                 }\n             }\n         )\n         .then(res => res.json())\n         .then(data => {\n             if(data.response==true){\n               console.log(\"exito\");\n               this.cambiarToastGreen(\"el tipo de producto\");\n               this.fetchDataTable();\n             }\n             else{\n               console.log(\"error\");\n               this.cambiarToastRed(\"en agregar tipo de producto\");\n             }\n\n         })\n         .catch((error)=> {\n           console.log('Hubo un problema con la petición Fetch:' + error.message);\n           this.cambiarToastRed(\"en agregar tipo de producto\");\n         });  }\n\n     sendEditarTipoProducto(){\n\n                 fetch(config.api+`/almacen/tiposproductos/editar`,\n                 {\n                     method: 'POST',\n                     body: JSON.stringify({\n                         '_token': this.state.csrf_token,\n                         editarNombreTipoProducto: this.state.editarNombreTipoProducto,\n                         editarIdTipoProducto: this.state.editarIdTipoProducto\n                     }),\n                     headers: {\n                         'Accept' : 'application/json',\n                         'Content-Type': 'application/json',\n                         'usuid'         : localStorage.getItem('usuid')\n                     }\n                 }\n             )\n             .then(res => res.json())\n             .then(data => {\n                 if(data.response==true){\n                   console.log(\"exito\");\n                   this.cambiarToastGreen(\"el tipo de producto\");\n                   this.fetchDataTable();\n                 }\n                 else{\n                   console.log(\"error\");\n                   this.cambiarToastRed(\"en editar tipo de producto\");\n                 }\n\n             })\n             .catch((error)=> {\n               console.log('Hubo un problema con la petición Fetch:' + error.message);\n               this.cambiarToastRed(\"en editar el tipo de producto\");\n             });  }\n\n     deleteTipoProducto(id){\n          fetch(config.api+`/almacen/tiposproductos/eliminar`,{\n                     method: 'POST',\n                     body: JSON.stringify({\n                         '_token': this.state.csrf_token,\n                         id: id\n                     }),\n                     headers: {\n                         'Accept' : 'application/json',\n                         'Content-type' : 'application/json',\n                         'usuid'         : localStorage.getItem('usuid')\n                     }\n                 })\n                 .then(res => res.json())\n                 .then(data =>{\n                     if(data.response==true){\n                       console.log(\"exito\");\n                       this.cambiarToastGreen(\"en eliminar tipo de producto\");\n                       this.fetchDataTable();\n                     }\n                     else{\n                       console.log(\"error\");\n                       this.cambiarToastRed(\"en eliminar tipo de producto\");\n                     }\n                 })\n                 .catch((error)=> {\n                   console.log('Hubo un problema con la petición Fetch:' + error.message);\n                   this.cambiarToastRed(\"en eliminar tipo de producto\");\n                 });\n\n       }\n\n\n\n    handleChange (e){\n      const {name , value} = e.target;\n      this.setState({\n          [name] : value\n\n      })\n      console.log(name);\n      console.log(value);\n    }\n\n\n    componentDidMount(){\n      this.fetchDataTable();\n    }\n\n    render(){\n        return(\n\n\n                    <div className=\"row\">\n\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\n                          <div className=\"card\">\n                              <div className=\"card-body\">\n                                  <h4 className=\"card-title\">Modulos de agregar</h4>\n                                  <button type=\"button\" className=\"btn waves-effect waves-light btn-success\" onClick={()=>this.cambiarModalTipoProducto()}>Agregar Tipo de Producto</button>\n                              </div>\n                          </div>\n                      </div>\n\n\n                      <div className=\"col-lg-12 grid-margin stretch-card\">\n                          <div className=\"card\">\n                              <div className=\"card-body\">\n                                  <h4 className=\"card-title\">Tipos de productos</h4>\n                                  <table id=\"tb_tiposProductos\" className=\"table table-striped\" style={{width:'100%'}}>\n                                      <thead>\n                                          <tr>\n                                            <th style={{textAlign:'right'}}><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\n                                          </tr>\n                                          <tr>\n                                              <th>Tipo de producto</th>\n                                              <th>Opciones</th>\n                                          </tr>\n                                      </thead>\n                                      <tbody>\n                                          {\n                                          this.state.tiposProductos_tb.data ?\n                                          this.state.tiposProductos_tb.data.map(task =>{\n                                              return (\n                                                  <tr key={task.id}>\n                                                      <td>{task.nombre}</td>\n                                                      <td><button onClick={()=>this.cambiarModalEditarTipoProducto(task.nombre,task.id)}\n                                                      className=\"btn btn-sm btn-secondary editar\" type=\"button\"><i className=\"mdi mdi-lead-pencil\"></i></button>\n                                                      <button className=\"btn btn-sm btn-danger eliminar\" type=\"button\" onClick={()=>this.deleteTipoProducto(task.id)}><i className=\"mdi mdi-delete\"></i></button>\n                                                      </td>\n\n                                                  </tr>\n                                              );\n                                           } )   : null\n                                          }\n                                      </tbody>\n                                  </table>\n                                  <div className=\"container\">\n                                      <div className=\"row justify-content-end\">\n                                        <div className=\"col-4\">\n\n                                          {\n                                            this.state.estadoBoton?\n                                            this.state.estadoBoton.map(task =>{\n                                                return (\n                                                    <button key={task}\n                                                        className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\n\n                                                );\n                                             } )   : null\n                                           }\n                                      </div>\n                                    </div>\n                                </div>\n                              </div>\n                          </div>\n                      </div>\n\n                      <Modal\n\n                          show={this.state.estadoModalTipoProducto}\n                          onHide={() => this.cambiarModalTipoProducto()}\n                          >\n                          <Modal.Header closeButton>\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\n                                <h4> Agregar tipo de producto </h4>\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                                <div className=\"card card-default\">\n                                    <div className=\"modal-body\">\n                                        <div className=\"card-body\">\n                                                <div className=\"form-group\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12\">\n                                                            <label>Nombre del tipo de producto</label>\n                                                            <input type=\"text\" className=\"form-control\" name=\"nombreTipoProducto\" id=\"nuevoTipoProducto\"  value={this.state.nombreTipoProducto} onChange={this.handleChange}/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group boton\">\n                                                    <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearTipoProducto\" onClick={()=>this.sendAgregarTipoProducto()}>\n                                                        CREAR</button>\n                                                </div>  \n                                        </div>\n                                    </div>\n                                </div>\n                          </Modal.Body>\n                        </Modal>\n\n                      <Modal\n                          show={this.state.estadoModalEditarTipoProducto}\n                          onHide={() => this.cambiarModalEditarTipoProducto()}\n                          >\n                          <Modal.Header closeButton>\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\n                              <h4> Editar tipo de producto </h4>\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                              <div className=\"card card-default\">\n                                  <div className=\"modal-body\">\n                                      <div className=\"card-body\">\n                                              <div className=\"form-group\">\n                                                  <div className=\"row\">\n                                                      <div className=\"col-12\">\n                                                          <label>Nombre del tipo de producto</label>\n                                                          <input type=\"text\" className=\"form-control\" name=\"editarNombreTipoProducto\" id=\"editarNombreTipoProducto\" value={this.state.editarNombreTipoProducto} onChange={this.handleChange}/>\n                                                          <input type=\"hidden\" name=\"editarIdTipoProducto\" id=\"editarIdTipoProducto\" />\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <div className=\"form-group boton\">\n                                                  <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarTipoProducto\" onClick={()=>this.sendEditarTipoProducto()}>\n                                                      Editar</button>\n                                              </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </Modal.Body>\n                        </Modal>\n\n                        <Toast\n                              style={{\n                              position: 'fixed',\n                              top: 5,\n                              right: 5,\n                              zIndex:1060,\n                              backgroundColor: 'rgba(76,208,76,0.7)',\n                              color:'white'\n                              }}\n                              onClose={() => this.cambiarToastGreen()}\n                              show={this.state.estadoToastGreen}\n                              delay={3000}\n                              autohide\n                              >\n                                <Toast.Body>\n                                  <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\n                                </Toast.Body>\n                          </Toast>\n\n                        <Toast\n                                style={{\n                                position: 'fixed',\n                                top: 5,\n                                right: 5,\n                                zIndex:1061,\n                                backgroundColor: 'rgba(205,55,55,0.7)',\n                                color:'white'\n                                  }}\n                                onClose={() => this.cambiarToastRed()}\n                                show={this.state.estadoToastRed}\n                                delay={3000}\n                                autohide\n\n                          >\n                            <Toast.Body>\n                              <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\n                            </Toast.Body>\n                        </Toast>\n\n          </div>\n\n        )}}\n\nexport default Tipoproducto\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Queso = () => (\n  \n    <div className=\"container-fluid page-body-wrapper\" >\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <ul className=\"nav\">\n          <li className=\"nav-item nav-profile\">\n            <Link className=\"nav-link\" to='/queso'>\n              <div className=\"nav-profile-image\">\n                <img src=\"/home\" alt=\"profile\"/>\n                <span className=\"login-status online\"></span>             \n              </div>\n              <div className=\"nav-profile-text d-flex flex-column\">\n                <span className=\"font-weight-bold mb-2\">user</span>\n                <span className=\"text-secondary text-small\">Vendedor</span>\n              </div>\n              <i className=\"mdi mdi-bookmark-check text-success nav-profile-badge\"></i>\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#ui-basic\" aria-expanded=\"false\" aria-controls=\"ui-basic\">\n              <span className=\"menu-title\">Almacén</span>\n              <i className=\"menu-arrow\"></i>\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\n            </a>\n            <div className=\"collapse\" id=\"ui-basic\">\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen\">Almacen</Link></li>\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/entrada\">Entradas</Link></li>\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/proveedor\">Proveedores</Link></li>\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/tiposproductos\">Tipos producto</Link></li>\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/marcas\">Marcas</Link></li>  \n              </ul>\n            </div>\n          </li>\n          <li className=\"nav-item\">\n           <Link className=\"nav-link\" to=\"/ventas\">\n              <span className=\"menu-title\">Ventas</span>\n              <i className=\"mdi mdi-shopping menu-icon\"></i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#ui-configuracion\" aria-expanded=\"false\" aria-controls=\"ui-basic\">\n              <span className=\"menu-title\">Configuración</span>\n              <i className=\"menu-arrow\"></i>\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\n            </a>\n            <div className=\"collapse\" id=\"ui-configuracion\">\n              <ul className=\"nav flex-column sub-menu\"> \n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/configuracion/descuentos\">Descuentos</Link></li>\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/configuracion/usuarios\">Usuarios</Link></li>\n              </ul>\n            </div>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">\n              <span className=\"menu-title\">Estadisticas</span>\n              <i className=\"mdi mdi-shopping menu-icon\"></i>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">\n              <span className=\"menu-title\">Perfil</span>\n              <i className=\"mdi mdi-shopping menu-icon\"></i>\n            </a>\n          </li>\n        </ul>\n      </nav>\n        <div className=\"main-panel\" style={{float:'left'}}>\n        <div className=\"content-wrapper\">\n            <div className=\"row\">\n              Hola prros gaaaaa :v\n            </div>\n        </div>\n      </div>\n    </div>\n)\n\nexport default Queso\n","import React, { Component } from 'react'\n\nexport default function(lastPage)\n{\n    let z = lastPage;\n    let x = [];\n    if(z){\n        for(let i = 1 ; i <= z ; i++){\n            x.push(i);\n        }\n        return x;\n    }    \n\n} \n","import React from 'react'\nimport {Component} from 'react';\nimport agregarBotones from '../../../extras/agregarBotones'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport cogoToast from 'cogo-toast';\nimport config from '../../../../config'\n\nclass TB_Descuentos extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            tb_descuentos   : [],\n            estadoBoton     : [],\n\n            idDescuento     : '',\n\n        }\n        this.fetchDescuentos        = this.fetchDescuentos.bind(this);\n        this.fetchEliminarDescuento = this.fetchEliminarDescuento.bind(this);\n    }\n\n    componentDidMount(){\n        this.fetchDescuentos(1, '', '');\n    }\n\n    fetchDescuentos(number, cliente, numeroComprobante){\n        let url = config.api+`/configuracion/descuentos/tb_descuentos?page=${number}`;\n        fetch(\n            url,\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(\n            res => res.json()\n        )\n        .then(\n            data => {\n                this.setState({\n                    tb_descuentos    : data['tb_descuentos'].data,\n                    numeroPagina : number\n                },()=>{\n                    \n                    this.setState({\n                        estadoBoton : agregarBotones(data['tb_descuentos'].last_page)\n                    })\n                });\n            }\n        )\n    }\n\n\n    confirmarEliminarTransferencia(idDescuentos){\n        confirmAlert({\n            title: 'ELIMINAR OFERTA',\n            message: 'Una vez eliminado no hay forma de recuperarlo',\n            buttons: [\n              {\n                label: 'ELIMINAR',\n                onClick: this.fetchEliminarDescuento\n              },\n              {\n                label: 'CANCELAR',\n                onClick: console.log(\"\")\n              }\n            ]\n        });\n\n        this.setState({\n            idDescuento : idDescuentos\n        })\n    }\n\n    fetchEliminarDescuento(){\n        \n        let url = config.api+`/configuraciones/descuentos/eliminar`;\n        cogoToast.loading(\n            <div>\n                <h4>ELIMINANDO OFERTA</h4>\n            </div>, \n            {\n                position: 'top-right'\n            }\n            \n        )\n        .then(() => {\n            fetch(url,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token'        : csrf_token,\n                        'idDescuento'   : this.state.idDescuento\n                        \n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(response => response.json())\n            .then(data => {\n    \n                if(data['respuesta'] == true){\n\n                    cogoToast.success(\n                        <div>\n                            <h4>{data['mensaje']}</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n\n                    this.fetchDescuentos(1, '', '');\n    \n                }else{\n                    cogoToast.error(\n                        <div>\n                            <h4>{data['mensaje']}</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n                }\n                \n            })\n            \n        });\n        \n    }\n\n    render(){\n        return(\n            <div className=\"col-lg-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h6 className=\"card-title\">GESTION DE OFERTAS:</h6>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\n                                        <thead>\n                                            <tr>\n                                                <th>Codigo del Producto</th>\n                                                <th>Nombre del Producto</th>\n                                                <th>Cantidad</th>\n                                                <th>Porcentaje</th>\n                                                <th>Precio del Producto</th>\n                                                <th>Nuevo precio del producto</th>\n                                                <th>Opciones</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                this.state.tb_descuentos\n                                                ?this.state.tb_descuentos.map((data, posicion)=>{\n                                                    return(\n                                                        <tr key= { data.idDescuentos           }>\n                                                            <td> { data.codigoProductos        }</td>\n                                                            <td> { data.nombreProductos        }</td>\n                                                            <td> { data.cantidadDescuentos     }</td>\n                                                            <td> { data.porcentajeDescuentos   }</td>\n                                                            <td> { data.precioProductos        }</td>\n                                                            <td> { data.nuevoPrecioDescuentos  }</td>\n                                                            <td>\n                                                                <button \n                                                                    className   = \"btn btn-sm btn-danger \" \n                                                                    type        = \"button\" \n                                                                    onClick     = {() => this.confirmarEliminarTransferencia(data.idDescuentos)}\n                                                                >\n                                                                    <i className=\"mdi mdi-delete\"></i>\n                                                                </button>\n                                                            </td>\n                                                        </tr>\n                                                    ) \n                                                })\n                                                :null\n                                            }\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <br></br>\n                                <div className=\"container\">\n                                    <div className=\"row justify-content-end\">\n                                        <div className=\"col-4\">\n                                            {\n                                                this.state.estadoBoton\n                                                ?this.state.estadoBoton.map(task =>{\n                                                    return (\n                                                        <button \n                                                            key         = {task}\n                                                            className   = \"btn btn-sm btn-secondary\" \n                                                            type        = \"button\" \n                                                            onClick     = {()=>this.fetchDescuentos(task, \"\", \"\")}>{task}</button>\n\n                                                    );\n                                                })   \n                                                : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>   \n                </div>    \n            </div>\n            \n         ) \n    }\n}\n\nexport default TB_Descuentos","import React, { Component } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport { Link } from 'react-router-dom'\nimport TB_Descuentos from './tabla/tb_descuentos'\nimport config from '../../../config'\n\nclass Descuento extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n            //modal\n            estadoModalAgregarOferta    : false,\n            // DATOS DEL MODAL\n            idProductoEscaneado         : 0,\n            codigoProductoEscaneado     : '',\n            nombreProductoEscaneado     : '',\n            stockProductoEscaneado      : 0,\n            precioProductoEscaneado     : 0,\n            cantidadOferta              : '',\n            nuevoPrecioOferta           : '',\n\n            // TOAST\n            estadoToast     : false,\n            mensajeToast    : '',\n            colorToast      : 'rgba(76,208,76,0.7)',\n\n\n        }\n        this.getCambioCodigo            = this.getCambioCodigo.bind(this);\n        this.fetchCodigoProducto        = this.fetchCodigoProducto.bind(this);\n        this.getCambioCantidadOferta    = this.getCambioCantidadOferta.bind(this);\n        this.getCambioNuevoPrecio       = this.getCambioNuevoPrecio.bind(this);\n        this.fetchAgregarOferta         = this.fetchAgregarOferta.bind(this);\n    }\n\n    modalAgregarOferta() {\n        this.setState({\n            estadoModalAgregarOferta: !this.state.estadoModalAgregarOferta\n        });\n    }\n\n    activarToast(message, color) {\n        this.setState({\n            mensajeToast : message,\n            colorToast   : color,\n            estadoToast  : true\n        });\n    }\n\n    getCambioCodigo(e)\n    {\n        const {name , value} = e.target;\n        this.setState({\n            codigoProductoEscaneado : value\n        })\n        if (e.key === 'Enter') {\n            console.log(value);\n            this.fetchCodigoProducto(value);\n        }\n\n    }\n\n    fetchCodigoProducto(codigo){ \n        fetch(config.api+`/producto/buscar`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token'        : csrf_token,\n                    codigoProducto  : codigo\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"datos:\")\n            console.log(data)\n            if(data['response'] == true){\n               \n                var producto = data['producto'];\n                this.setState({\n                    idProductoEscaneado     : producto['id'],\n                    nombreProductoEscaneado : producto['nombre'],\n                    stockProductoEscaneado  : producto['cantidad'],\n                    precioProductoEscaneado : producto['precio'],\n                })\n\n\n            }else{\n                this.activarToast(\"Producto no encontrado\", \"rgba(205,55,55,0.7)\");\n            }\n            \n        })\n    }\n\n    getCambioCantidadOferta(e)\n    {\n        const {name , value} = e.target;\n        this.setState({\n            cantidadOferta : value\n        })\n    }\n    \n    getCambioNuevoPrecio(e)\n    {\n        const {name , value} = e.target;\n        this.setState({\n            nuevoPrecioOferta : value\n        })\n    }\n\n    fetchAgregarOferta()\n    {\n        fetch(config.api+`/configuraciones/descuentos/crear`,\n        {\n            method: 'POST',\n            body: JSON.stringify({\n                // '_token'            : csrf_token,\n                'idProducto'        : this.state.idProductoEscaneado,\n                'precioProducto'    : this.state.precioProductoEscaneado,\n                'nuevoPrecio'       : this.state.nuevoPrecioOferta,\n                'cantidad'          : this.state.cantidadOferta,\n            }),\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            console.log(data['response'])\n            if(data['response'] == true){\n                this.activarToast(\"Oferta creada satisfactoriamente\", \"rgba(76,208,76,0.7)\");\n                this.modalAgregarOferta();\n            }else{\n                this.activarToast(\"Ocurrio un error al momento de agregar la oferta\", \"rgba(205,55,55,0.7)\");\n            }\n            \n        })\n    }\n    \n\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col-lg-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Acciones</h4>\n                            <button type=\"button\"\n                                onClick={()=>this.modalAgregarOferta()}\n                                className=\"btn btn-primary btn-rounded btn-fw\">Crear una oferta</button>\n                        </div>\n                    </div>\n                </div>\n\n                <TB_Descuentos \n\n                />\n            \n            {/* MODAL DE AGREGAR OFERTA */}\n            <Modal\n                size=\"lg\"\n                show={this.state.estadoModalAgregarOferta}\n                onHide={() => this.modalAgregarOferta()}\n                >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                    Agregar Oferta\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"card card-default\">\n                        <div className=\"modal-body\">\n                            <div className=\"card-body\">\n                                <div className=\"form-group\" >\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <label>Codigo</label>\n                                            <input \n                                                type        = \"text\" \n                                                className   = \"form-control\" \n                                                name        = \"codigoProductoEscaneado\" \n                                                id          = \"codigoProductoEscaneado\"\n                                                onChange    = {this.getCambioCodigo}\n                                                onKeyDown   = {this.getCambioCodigo}\n                                                autoFocus\n                                                value       = {this.state.codigoProductoEscaneado} \n                                            />\n                                        </div>\n                                        <div className=\"col-12\" id=\"alertaCodigo\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-8\">\n                                            <label>Nombre del producto</label>\n                                            <h4 className=\"card-title\"> {this.state.nombreProductoEscaneado} </h4>\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <label>Stock</label>\n                                            <h4 className=\"card-title\"> {this.state.stockProductoEscaneado} </h4>\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <label>Precio</label>\n                                            <h4 className=\"card-title\"> S/{this.state.precioProductoEscaneado} </h4>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-6\">\n                                            <label>Cantidad</label>\n                                            <input \n                                                type        = \"text\" \n                                                name        = \"cantidadOferta\" \n                                                id          = \"cantidadOferta\" \n                                                className   = \"form-control\"\n                                                onChange    = {this.getCambioCantidadOferta} \n                                                value       = {this.state.cantidadOferta}/>\n                                        </div>\n                                        <div className=\"col-6\">\n                                            <label>Nuevo precio</label>\n                                            <input \n                                                type        = \"text\" \n                                                name        = \"nuevoPrecioOferta\" \n                                                id          = \"nuevoPrecioOferta\" \n                                                className   = \"form-control\"\n                                                onChange    = {this.getCambioNuevoPrecio} \n                                                value       = {this.state.nuevoPrecioOferta}/>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group boton\">\n                                    <button \n                                        type=\"button\" \n                                        className=\"addexis form-control btn btn-block btn-success btn-lg\" \n                                        id=\"crearProducto\" \n                                        onClick={()=>this.fetchAgregarOferta()}>\n                                        Agregar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                </Modal>\n\n                <Toast\n                    style={{\n                        position        : 'fixed',\n                        top             : 20,\n                        right           : 20,\n                        zIndex          :1060,\n                        backgroundColor : this.state.colorToast,\n                        color           :'white'\n                    }}\n                    onClose={() => this.setState({\n                        estadoToast: false\n                    })}\n                    show    ={this.state.estadoToast}\n                    delay   ={2500}\n                    autohide\n                    >\n                    <Toast.Body>\n                    <h3>{this.state.mensajeToast}</h3>\n                    </Toast.Body>\n                </Toast>\n\n            </div>\n        )\n        \n    }\n}\n\nexport default Descuento\n","import React from 'react';\nimport {Component} from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\nimport config from '../../config'\n\n  class Usuario extends Component {\n\n      constructor(){\n          super();\n          this.state ={\n\n            usuario_tb:[],\n            sucursales:[],\n            sucursalesPArray:[],\n            editarNombreUsuario:'',\n            editarIdUsuario:'',\n\n            //modales\n            estadoModalAgregarUsuario:false,\n            estadoModalEditarUsuario:false,\n            //Toast\n            estadoToastRed:false,\n            estadoToastGreen:false,\n            messageRed:'',\n            messageGreen:'',\n            //botones\n            estadoBoton:[],\n            //query\n            estadoQuery:'',\n            //Crear usuario\n            crearNombre:'',\n            crearPassword:'',\n            crearUsername:'',\n            crearSucursales:[],\n            crearSucursalPredeterminada:'',\n            //Editar usuario\n            editarId:'',\n            editarNombre:'',\n            editarUsername:'',\n            editarPassword:'',\n            editarSucursales:[],\n            editarSucursalPredeterminada:'',\n\n            //DNIdata\n            dniData:'',\n            dniUsuario:''\n\n          }\n          this.fetchDataTable = this.fetchDataTable.bind(this);\n          this.handleChange = this.handleChange.bind(this);\n          this.handleChangeDni = this.handleChangeDni.bind(this);\n          this.addSucursal = this.addSucursal.bind(this);\n          this.predeterminarSucursal = this.predeterminarSucursal.bind(this);\n\n      }\n\n      cleanInputs(op){\n\n        if (op == \"crear\"){\n          this.setState({\n            crearNombre:'',\n            crearPassword:'',\n            crearUsername:'',\n            crearSucursales:[],\n            crearSucursalPredeterminada:''\n          })\n        }\n        else if(op == \"editar\"){\n        //Editar usuario\n        this.setState({\n          editarId:'',\n          editarNombre:'',\n          editarUsername:'',\n          editarPassword:'',\n          editarSucursalPredeterminada:''\n        })\n\n        }\n\n        else {\n          this.setState({\n                usuario_tb:[],\n                sucursales:[],\n                editarNombreUsuario:'',\n                editarIdUsuario:''\n\n            })\n          }\n        }\n\n      cambiarToastRed(message) {\n          this.setState({\n              messageRed: message,\n              estadoToastRed: !this.state.estadoToastRed\n          });\n      }\n      cambiarToastGreen(message) {\n          this.setState({\n              messageGreen: message,\n              estadoToastGreen: !this.state.estadoToastGreen\n          });\n      }\n\n      cambiarModalAgregarUsuario(){\n          this.setState({\n              estadoModalAgregarUsuario: !this.state.estadoModalAgregarUsuario,\n              crearSucursales:[],\n          })\n      }\n\n      cambiarModalEditarUsuario(operacion,id,nombre,username,sucursales,predeterminada){\n\n        if(operacion == \"editar\"){\n          var x = [];\n          console.log(sucursales);\n          let c = ()=>{\n              sucursales.map(task=>{\n                 var a = task.pivot.sucursal_id\n                 x.push(a.toString());\n                 console.log(task);\n                  })\n              return x;\n          }\n\n          this.setState({\n              estadoModalEditarUsuario: !this.state.estadoModalEditarUsuario,\n              editarId: id,\n              editarNombre: nombre,\n              editarUsername: username,\n              editarSucursales: c(),\n              editarSucursalPredeterminada: predeterminada\n\n          },()=>{\n                console.log(this.state.editarSucursales)\n                this.setState({\n                  crearSucursales: this.state.editarSucursales\n                })\n                }\n            )\n\n        }\n       else{\n         this.setState({\n             estadoModalEditarUsuario: !this.state.estadoModalEditarUsuario,\n             editarSucursales:[]\n\n         })\n       }\n      }\n      sendCrearUsuario(){\n\n              fetch(config.api+`/configuraciones/usuarios/crear`,\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                      // '_token': csrf_token,\n                      nombre: this.state.crearNombre,\n                      username: this.state.crearUsername,\n                      password: this.state.crearPassword,\n                      sucursales: this.state.crearSucursales,\n                      predeterminado: this.state.crearSucursalPredeterminada\n\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n                  }\n              }\n          )\n          .then(res => res.json())\n          .then(data => {\n              if(data.response==true){\n                console.log(\"exito\");\n                this.cambiarToastGreen(\"Se creo exitosamente el usuario\");\n                this.cleanInputs(\"crear\");\n                this.fetchDataTable();\n              }\n              else{\n                console.log(\"error\");\n                this.cambiarToastRed(\"Error en crear usuario\");\n              }\n\n          })\n          .catch((error)=> {\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\n            this.cambiarToastRed(\"Error en crear usuario\");\n          });  }\n\n      sendEditarUsuario(){\n\n                  fetch(config.api+`/configuraciones/usuarios/editar`,\n                  {\n                      method: 'POST',\n                      body: JSON.stringify({\n                          // '_token': csrf_token,\n                          id: this.state.editarId,\n                          nombre: this.state.editarNombre,\n                          username: this.state.editarUsername,\n                          password: this.state.editarPassword,\n                          sucursales: this.state.crearSucursales,\n                          predeterminado: this.state.editarSucursalPredeterminada\n\n                      }),\n                      headers: {\n                          'Accept' : 'application/json',\n                          'Content-Type': 'application/json',\n                          'usuid'         : localStorage.getItem('usuid')\n                      }\n                  }\n              )\n              .then(res => res.json())\n              .then(data => {\n                  if(data.response==true){\n                    console.log(\"exito\");\n                    this.cambiarToastGreen(\"se edito el usuario\");\n                    this.cleanInputs(\"editar\");\n                    this.fetchDataTable();\n                  }\n                  else{\n                    console.log(\"error\");\n                    this.cambiarToastRed(\"Error en editar usuario\");\n                  }\n\n              })\n              .catch((error)=> {\n                console.log('Hubo un problema con la petición Fetch:' + error.message);\n                this.cambiarToastRed(\"Error en editar usuario\");\n              });  }\n\n      deleteUsuario(id){\n            console.log(id);\n                fetch(config.api+`/almacen/marcas/eliminar`,{\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token': csrf_token,\n                        id: id\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-type' : 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                })\n                .then(res => res.json())\n                .then(data =>{\n                    if(data.response==true){\n                      console.log(\"exito\");\n                      this.cambiarToastGreen(\"en eliminar Marca\");\n                      this.fetchDataTable();\n                    }\n                    else{\n                      console.log(\"error\");\n                      this.cambiarToastRed(\"en eliminar Marca\");\n                    }\n                })\n                .catch((error)=> {\n                  console.log('Hubo un problema con la petición Fetch:' + error.message);\n                  this.cambiarToastRed(\"en eliminar Marca\");\n                });\n\n      }\n\n\n    addSucursal(e){\n\n      const {checked , value} = e.target;\n\n          if(checked==true){\n            var x = [...this.state.crearSucursales];\n            x.push(value);\n            this.setState({\n              crearSucursales: x,\n              editarSucursales: x\n            },()=>{\n                if((this.state.editarSucursales).length == 1){\n                  this.setState({\n                    editarSucursalPredeterminada: this.state.editarSucursales[0],\n                    crearSucursalPredeterminada: this.state.editarSucursales[0]\n                  })\n                }\n            }\n          )\n\n          }\n          else{\n            console.log(\"deslogeado\");\n            var x = [...this.state.crearSucursales];\n            var index = x.findIndex(i=> i === value);\n            if(index>-1){\n              x.splice(index,1);\n              this.setState({\n                crearSucursales: x,\n                editarSucursales: x\n              },()=>{\n                  if((this.state.editarSucursales).length == 1){\n                    this.setState({\n                      editarSucursalPredeterminada: this.state.editarSucursales[0],\n                      crearSucursalPredeterminada: this.state.editarSucursales[0]\n                    })\n                  }\n                })\n\n          }\n        }\n}\n    handleChangeDni(e){\n      const {name , value} = e.target;\n\n      if(value.length == 8){\n          this.setState({\n              [name] : value\n\n          }, () => {\n              this.fetchDNI();\n          })\n          console.log(value);\n      }\n      console.log(name);\n      console.log(value);\n    }\n\n    fetchDNI(){\n\n        fetch(config.api+`/consult/dni/${this.state.dniUsuario}`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n\n        .then(res => res.json())\n        .then(data => {\n            console.log(data);\n            this.setState({dniData: data},\n              ()=>this.dniOpe()\n\n            );\n    })\n\n}\n    dniOpe(){\n      let a = this.state.dniData;\n      let y = a.persona.nombres +' '+ a.persona.apellidoMaterno +' '+ a.persona.apellidoPaterno\n\n      this.setState({\n        crearNombre: y\n      })\n    }\n\n\n    fetchDataTable(){\n      fetch(\n        config.api+'/configuracion/usuarios/tb_usuarios',\n        {\n          method: 'GET',\n          headers: {\n              'Accept' : 'application/json',\n              'Content-Type': 'application/json',\n              'usuid'         : localStorage.getItem('usuid')\n          }\n      }\n      )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({usuario_tb: data},()=>{\n              console.log(this.state.usuario_tb)\n            });\n      })\n      fetch(\n        config.api+'/configuracion/usuarios/tb_sucursales',\n        {\n          method: 'GET',\n          headers: {\n              'Accept' : 'application/json',\n              'Content-Type': 'application/json',\n              'usuid'         : localStorage.getItem('usuid')\n          }\n      }\n      )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n              sucursales: data,\n              sucursalesPArray: data\n            },()=>{\n              console.log(this.state.sucursales)\n              //this.predeterminarSucursal();\n            });\n      })\n    }\n  predeterminarSucursal(){\n    let x = []\n\n    // let c = ()=>{\n    //     this.state.sucursales \n    //     ? this.state.sucursales.map(task=>{\n    //        x.push(task.id);\n    //     }) :null\n    //     return x;\n    // }\n\n    // this.setState({\n    //   sucursalesPArray: c()\n    // },()=>console.log(this.state.sucursalesPArray))\n\n  }\n\n\n    handleChange (e){\n      const {name , value} = e.target;\n      this.setState({\n          [name] : value\n\n      })\n      console.log(name);\n      console.log(value);\n    }\n    handleChangeBuscador (e){\n      const {name , value} = e.target;\n      console.log(value);\n      this.fetchQuery(value);\n      console.log(name);\n\n    }\n\n    componentDidMount(){\n      this.fetchDataTable();\n    }\n\n\n\n   render (){\n     return(\n       <div className=\"row\">\n\n          <div className=\"col-lg-12 grid-margin stretch-card\">\n             <div className=\"card\">\n                 <div className=\"card-body\">\n                     <h4 className=\"card-title\">Acciones</h4>\n                     <button type=\"button\"\n                         onClick={()=>this.cambiarModalAgregarUsuario()}\n                         className=\"btn waves-effect waves-light btn-info\">Agregar Usuario</button>\n                 </div>\n             </div>\n         </div>\n\n         <div className=\"col-lg-12 grid-margin stretch-card\">\n             <div className=\"card\">\n                 <div className=\"card-body\">\n                     <h4 className=\"card-title\">Usuarios</h4>\n                     <table id=\"tb_usuarios\" className=\"table table-striped\" style={{width:'100%'}}>\n                         <thead>\n                             <tr>\n                                 <th>Codigo</th>\n                                 <th>Nombre</th>\n                                 <th>Username</th>\n                                 <th>Sucursales</th>\n                                 <th>Opciones</th>\n                             </tr>\n                         </thead>\n                         <tbody>\n                              {\n                                 this.state.usuario_tb ?\n                                 this.state.usuario_tb.map(task =>{\n                                     return (\n                                         <tr key={task.id}>\n                                             <td>{task.id}</td>\n                                             <td>{task.name}</td>\n                                             <td>{task.username}</td>\n                                             <td>{task.sucursales.map(s =>{\n                                                return(<div>{s.nombre}</div>)\n                                             })}</td>\n                                             <td><button\n                                             className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarModalEditarUsuario(\"editar\",task.id,task.name,task.username,task.sucursales,task.predeterminado)}><i className=\"mdi mdi-lead-pencil\"></i></button>\n                                             <button className=\"btn btn-sm btn-danger eliminar\" type=\"button\" onClick={()=>this.deleteUsuario(task.id)}><i className=\"mdi mdi-delete\"></i></button>\n                                             </td>\n\n                                         </tr>\n                                     );\n                                  } )   : null\n                                 }\n                         </tbody>\n                           <div className=\"container\">\n                               <div className=\"row justify-content-end\">\n                                 <div className=\"col-4\">\n\n                                   {\n                                     this.state.estadoBoton?\n                                     this.state.estadoBoton.map(task =>{\n                                         return (\n                                             <button key={task}\n                                                 className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\n\n                                         );\n                                      } )   : null\n                                    }\n                                </div>\n                              </div>\n                           </div>\n                     </table>\n                 </div>\n             </div>\n         </div>\n\n\n         <Modal\n\n             show={this.state.estadoModalAgregarUsuario}\n             onHide={() => this.cambiarModalAgregarUsuario()}\n             >\n             <Modal.Header closeButton>\n               <Modal.Title id=\"example-custom-modal-styling-title\">\n                 Agregar Usuario\n               </Modal.Title>\n             </Modal.Header>\n             <Modal.Body>\n                   <div className=\"card card-default\">\n                       <div className=\"modal-body\">\n                           <div className=\"card-body\">\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputUsername1\">Dni</label>\n                                       <input type=\"text\" className=\"form-control\" name=\"dniUsuario\" onChange={this.handleChangeDni}/>\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputUsername1\">NOMBRES COMPLETOS</label>\n                                       <input type=\"text\" className=\"form-control\" name=\"crearNombre\" onChange={this.handleChange} value={this.state.crearNombre} placeholder=\"NOMBRE Y APELLIDOS\"/>\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputEmail1\">USERNAME</label>\n                                       <input type=\"email\" className=\"form-control\" name=\"crearUsername\" onChange={this.handleChange} value={this.state.crearUsername} placeholder=\"Username\"/>\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputPassword1\">CONTRASEÑA</label>\n                                       <input type=\"password\" className=\"form-control\" name=\"crearPassword\" onChange={this.handleChange} value={this.state.crearPassword} placeholder=\"**********\"/>\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputPassword1\">Sucursales</label>\n                                       {\n                                         this.state.sucursales?\n                                         this.state.sucursales.map(s =>{\n                                         return(\n                                            <div><input type=\"checkbox\" name=\"sucursalCrear\" value={s.id} onClick={this.addSucursal}/> {s.nombre}</div>\n                                         )\n                                       }) : null\n\n                                     }\n\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label>Seleccionar sucursal predeterminada</label>\n                                       <select className=\"form-control listProductos\" name=\"crearSucursalPredeterminada\" onChange={this.handleChange} value={this.state.crearSucursalPredeterminada}>\n\n                                           {\n                                               this.state.sucursalesPArray ?\n                                               this.state.sucursalesPArray.map((data)=>{\n                                                 if ((this.state.editarSucursales.findIndex(a=>a==data.id)) > -1){\n                                                   return(\n                                                    <option key={data.id} value={data.id} > {data.nombre} </option>\n                                                   )\n                                                 }\n\n                                               }\n                                               )\n                                               :null\n                                           }\n\n                                       </select>\n                                   </div>\n                                   <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.sendCrearUsuario()}>Crear</button>\n                           </div>\n                       </div>\n                   </div>\n\n             </Modal.Body>\n           </Modal>\n\n           <Modal\n\n               show={this.state.estadoModalEditarUsuario}\n               onHide={() => this.cambiarModalEditarUsuario()}\n               >\n               <Modal.Header closeButton>\n                 <Modal.Title id=\"example-custom-modal-styling-title\">\n                   Editar Usuario\n                 </Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                   <div className=\"card card-default\">\n                       <div className=\"modal-body\">\n                           <div className=\"card-body\">\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputUsername1\">NOMBRES COMPLETOS</label>\n                                       <input type=\"text\" className=\"form-control\" name=\"editarNombre\"   value={this.state.editarNombre} onChange={this.handleChange}  placeholder=\"NOMBRE Y APELLIDOS\"/>\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputEmail1\">USERNAME</label>\n                                       <input type=\"email\" className=\"form-control\" name=\"editarUsername\"  value={this.state.editarUsername} onChange={this.handleChange} placeholder=\"Email\"/>\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputPassword1\">CONTRASEÑA</label>\n                                       <input type=\"password\" className=\"form-control\" name=\"editarPassword\"  value={this.state.editarPassword} onChange={this.handleChange} placeholder=\"**********\"/>\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label htmlFor=\"exampleInputPassword1\">Sucursales</label>\n                                       {\n                                         this.state.sucursales?\n                                         this.state.sucursales.map(s =>{\n                                         return(\n                                           <div>\n                                            {\n                                              ((this.state.editarSucursales.findIndex(a=>a==s.id)) > -1) ?\n                                            <div><input type=\"checkbox\" name=\"sucursalEditar\" value={s.id} defaultChecked onClick={this.addSucursal}/> {s.nombre}</div>\n\n                                            :\n                                            <div><input type=\"checkbox\" name=\"sucursalEditar\" value={s.id} onClick={this.addSucursal}/> {s.nombre}</div>\n\n                                            }\n                                          </div>\n\n                                         )\n                                       }) : null\n\n                                     }\n\n                                   </div>\n                                   <div className=\"form-group\">\n                                       <label>Seleccionar sucursal predeterminada</label>\n                                       <select className=\"form-control listProductos\" name=\"editarSucursalPredeterminada\" onChange={this.handleChange} value={this.state.editarSucursalPredeterminada}>\n\n                                           {\n                                               this.state.sucursalesPArray ?\n                                               this.state.sucursalesPArray.map((data,index)=>{\n                                                 if ((this.state.editarSucursales.findIndex(a=>a==data.id)) > -1){\n                                                   return(\n                                                    <option key={data.id} value={data.id} > {data.nombre} </option>\n                                                      )\n                                                 }\n\n                                               }\n                                               )\n                                               :null\n                                           }\n\n                                       </select>\n                                   </div>\n                                   <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.sendEditarUsuario()}>Editar</button>\n                           </div>\n                       </div>\n                   </div>\n\n               </Modal.Body>\n             </Modal>\n\n         <Toast\n               style={{\n               position: 'fixed',\n               top: 5,\n               right: 5,\n               zIndex:1060,\n               backgroundColor: 'rgba(76,208,76,0.7)',\n               color:'white'\n               }}\n               onClose={() => this.cambiarToastGreen()}\n               show={this.state.estadoToastGreen}\n               delay={3000}\n               autohide\n               >\n                 <Toast.Body>\n                   <h4>{this.state.messageGreen}</h4>\n                 </Toast.Body>\n           </Toast>\n\n         <Toast\n                 style={{\n                 position: 'fixed',\n                 top: 5,\n                 right: 5,\n                 zIndex:1061,\n                 backgroundColor: 'rgba(205,55,55,0.7)',\n                 color:'white'\n                   }}\n                 onClose={() => this.cambiarToastRed()}\n                 show={this.state.estadoToastRed}\n                 delay={3000}\n                 autohide\n\n           >\n             <Toast.Body>\n               <h4>{this.state.messageRed}</h4>\n             </Toast.Body>\n         </Toast>\n\n\n         </div>\n\n       )\n\n     }\n  }\n\n\nexport default Usuario\n","import React from 'react'\nimport {Component} from 'react';\n\n  class Botones extends Component {\n\n      constructor(){\n          super();\n          this.state ={\n          }\n        }\n\nrender(){\n    return(\n        <div className=\"col-2\">\n\n            {/*<button className=\"btn waves-effect waves-light btn-warning\" onClick={()=>this.props.generateGraficos()} >Mostrar Grafico</button>*/}\n            <button className=\"btn waves-effect waves-light btn-success\" onClick={()=>this.props.generateExcel()} >Generar excel</button>\n\n        </div>\n    )\n  }\n}\n\nexport default Botones\n","import React from 'react'\nimport {Component} from 'react';\n\n  class Tabla extends Component {\n\n      constructor(){\n          super();\n          this.state ={\n          }\n        }\n\nrender(){\n    return(\n          <div className=\"col-lg-12 grid-margin stretch-card\">\n              <div className=\"card\">\n                  <div className=\"card-body\">\n                      <h4 className=\"card-title\">Detalles (seguimiento en el Tiempo)</h4>\n                      <table id=\"tb_usuarios\" className=\"table table-striped\" style={{width:'100%'}}>\n                          <thead>\n                              <tr>\n                                  <th>SUCURSAL</th>\n                                  <th>FECHA</th>\n                                  <th>ACCION</th>\n                                  <th>NUMERO</th>\n                                  <th>CANTIDAD</th>\n                                  <th>STOCK</th>\n                              </tr>\n                          </thead>\n                          <tbody>\n                               {\n                                  this.props.reporte.movimientos ?\n                                  this.props.reporte.movimientos.map((task ,index) =>{\n                                      if (task.operacion == 1 ){\n                                      return (\n\n                                                <tr className=\"table-success\" key={index}>\n                                                    <td>{task.sucursal}</td>\n                                                    <td>{task.fecha}</td>\n                                                    <td>{task.accion}</td>\n                                                    <td>{task.registro}</td>\n                                                    <td>+{task.cantidad}</td>\n                                                    <td>{task.stock}</td>\n                                                </tr>\n\n                                      )}\n                                      else {\n                                        return(\n                                            <tr className=\"table-danger\" key={index}>\n                                                <td>{task.sucursal}</td>\n                                                <td>{task.fecha}</td>\n                                                <td>{task.accion}</td>\n                                                <td>{task.registro}</td>\n                                                <td>-{task.cantidad}</td>\n                                                <td>{task.stock}</td>\n                                            </tr>\n                                      )}\n                                   } )   : null\n                                  }\n                          </tbody>\n                      </table>\n                  </div>\n              </div>\n          </div>\n    )\n  }\n}\n\nexport default Tabla\n","import React from 'react'\nimport {Component} from 'react';\n//import { VictoryBar, VictoryChart, VictoryAxis } from 'victory';\n\n  class Graficos extends Component {\n\n      constructor(){\n          super();\n          this.state ={\n\n            data:[\n                {quarter: 1, earnings: 130},\n                {quarter: 2, earnings: 160},\n                {quarter: 3, earnings: 140},\n                {quarter: 4, earnings: 190}\n                ]\n          }\n        }\n\n\n\n\n  render(){\n      return(\n\n        <div className=\"col-lg-12 grid-margin stretch-card\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                   <div class=\"row justify-content-md-center\">\n                    <div className= \"col-6\" >\n                            {/*  <VictoryChart\n                                  // domainPadding will add space to each side of VictoryBar to\n                                  // prevent it from overlapping the axis\n                                  domainPadding={20}\n                                >\n                                  <VictoryAxis\n                                    // tickValues specifies both the number of ticks and where\n                                    // they are placed on the axis\n                                    tickValues={[1, 2, 3, 4]}\n                                    tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\n                                  />\n                                  <VictoryAxis\n                                    dependentAxis\n                                    // tickFormat specifies how ticks should be displayed\n                                    tickFormat={(x) => (`$${x / 10}k`)}\n                                  />\n                                  <VictoryBar\n                                    data={this.state.data}\n                                    x=\"quarter\"\n                                    y=\"earnings\"\n                                  />\n                                </VictoryChart> */}\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      )\n    }\n}\n\nexport default Graficos\n","import React from 'react';\nimport {Component} from 'react';\nimport Botones from './Botones'\nimport Tabla from './Tabla'\nimport Graficos from './Graficos'\nimport cogoToast from 'cogo-toast';\nimport config from '../../../config'\n\n  class Reportes extends Component {\n\n      constructor(){\n          super();\n          this.state ={\n\n            reporte:[],\n\n            codigoProducto:'',\n            sucursalProducto:'',\n\n            codigoProductoSpan:'',\n            stockActual:'',\n            nombreProducto:'',\n            entradaTotal:'',\n            transferenciaEnviadas:'',\n            transferenciaRecibidas:'',\n            totalVendido:'',\n\n            //estados componentes\n\n            addBotones:false,\n            addTabla:false,\n            addGraficos:false\n\n          }\n          this.fetchDataTable = this.fetchDataTable.bind(this);\n          this.handleChange = this.handleChange.bind(this);\n          this.generateGraficos = this.generateGraficos.bind(this);\n          this.generateExcel = this.generateExcel.bind(this);\n      }\n\n      cleanInputs(op){\n\n        }\n      crearRegistros(){\n\n        var reporte = this.state.reporte;\n\n        this.setState({\n          codigoProductoSpan:this.state.codigoProducto,\n          stockActual:reporte.stockActual,\n          nombreProducto:reporte.nombre,\n          entradaTotal:reporte.entradasTotales,\n          transferenciaEnviadas:reporte.transferEnviadas,\n          transferenciaRecibidas:reporte.transferRecibidas,\n          totalVendido:reporte.ventasTotales,\n          sucursalProducto:1\n        })\n\n      }\n      limpiarRegistros(){\n\n        this.setState({\n          codigoProductoSpan:'',\n          stockActual:'',\n          nombreProducto:'',\n          entradaTotal:'',\n          transferenciaEnviadas:'',\n          transferenciaRecibidas:'',\n          totalVendido:'',\n          sucursalProducto:''\n        })\n\n      }\n\n      sendCodigoProducto(){\n\n        cogoToast.loading(\n            <div>\n                <h4>Buscando registros del producto</h4>\n            </div>,\n            {\n                position: 'top-right'\n            }\n\n        )\n        .then(() => {\n                fetch(config.api+`/movimientos/reporte`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token': csrf_token,\n                        codigo: this.state.codigoProducto,\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(res => res.json())\n            .then(data => {\n                if(data.response==true){\n                  console.log(data);\n                  this.setState({\n                    reporte: data,\n                    addBotones:true,\n                    addTabla:true\n                  },()=>this.crearRegistros())\n                  console.log(\"exito\");\n\n                  cogoToast.success(\n                      <div>\n                          <h4>Registros encontrados</h4>\n                      </div>,\n                      {\n                        position: 'top-right'\n                      }\n                  );\n                }\n                else{\n                  this.setState({\n                    addBotones:false,\n                    addTabla:false\n                  },()=>this.limpiarRegistros())\n                  cogoToast.error(\n                      <div>\n                          <h4>Registros no encontrados</h4>\n                      </div>,\n                      {\n                        position: 'top-right'\n                      }\n                  );\n\n                }\n\n            })\n            .catch((error)=> {\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\n                cogoToast.error(\n                    <div>\n                        <h4>Hubo un error al buscar producto</h4>\n                    </div>,\n                    {\n                      position: 'top-right'\n                    }\n                  );\n            });\n\n      })\n    }\n\n\n    fetchDataTable(){\n\n      fetch(\n        config.api+'/configuracion/usuarios/tb_sucursales',\n        {\n          method: 'GET',\n          headers: {\n              'Accept' : 'application/json',\n              'Content-Type': 'application/json',\n              'usuid'         : localStorage.getItem('usuid')\n          }\n      }\n      )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({sucursales: data},()=>{\n              console.log(this.state.sucursales)\n              });\n            })\n    }\n\n    generateExcel(){\n\n      cogoToast.loading(\n          <div>\n              <h4>Generando Excel</h4>\n          </div>,\n          {\n              position: 'top-right'\n          }\n        ).then(()=>{\n\n              fetch(config.api+`/movimientos/reporte`,\n              {\n                  method: 'POST',\n                  body: JSON.stringify({\n                      // '_token': csrf_token,\n                      codigo: this.state.codigoProducto,\n                      descargar: true,\n                  }),\n                  headers: {\n                      'Accept' : 'application/json',\n                      'Content-Type': 'application/json',\n                      'usuid'         : localStorage.getItem('usuid')\n                  }\n                }\n\n              ).then(response=>response.blob())\n              .then(data=>{\n                let link = document.createElement('a');\n                link.href = window.URL.createObjectURL(data);\n                link.download = `${this.state.nombreProducto}-${this.state.codigoProducto}.xlsx`;\n                link.click();\n                  cogoToast.success(\n                      <div>\n                          <h4>Excel generado</h4>\n                      </div>,\n                      {\n                        position: 'top-right'\n                      }\n                  );\n                })\n                .catch((error)=> {\n                  console.log('Hubo un problema con la petición Fetch:' + error.message);\n                  cogoToast.error(\n                      <div>\n                          <h4>HUBO UN PROBLEMA AL CANCELAR LA VENTA</h4>\n                      </div>,\n                      {\n                        position: 'top-right'\n                      }\n                  );\n                });\n\n        })\n\n\n      }\n\n    generateGraficos(){\n      console.log(\"graficos\")\n      this.setState({\n        addTabla: false\n      },()=>this.setState({\n        addGraficos:true\n      }))\n    }\n\n    handleChange (e){\n      const {name , value} = e.target;\n      this.setState({\n          [name] : value\n\n      })\n      console.log(name);\n      console.log(value);\n    }\n\n    componentDidMount(){\n      this.fetchDataTable();\n    }\n\n\n\n   render (){\n     return(\n       <div className=\"row\">\n\n          <div className=\"col-lg-12 grid-margin stretch-card\">\n             <div className=\"card\">\n                 <div className=\"card-body\">\n                         <div className=\"row\">\n                             <div className=\"col-3\">\n                                 <label> Buscar producto </label>\n                                 <input type=\"text\" className=\"form-control\" name=\"codigoProducto\" onChange={this.handleChange} value={this.state.codigoProducto} />\n                             </div>\n                             <div className=\"col-3\">\n                                 <label>Seleccionar sucursal</label>\n                                 <select className=\"form-control listProductos\" name=\"sucursalProducto\" onChange={this.handleChange} value={this.state.sucursalProducto}>\n\n                                     {\n                                         this.state.sucursales ?\n                                         this.state.sucursales.map((data)=>{\n\n                                            return(\n                                             <option key={data.id} value={data.id} > {data.nombre} </option>\n                                            )\n                                         }\n                                         )\n                                         :null\n                                     }\n\n                                 </select>\n                             </div>\n                             <div className=\"col-2\">\n                                 <br/>\n                                 <button type=\"button\"\n                                     onClick={()=>this.sendCodigoProducto()}\n                                     className=\"btn waves-effect waves-light btn-info\">BUSCAR</button>\n                             </div>\n                             <div className=\"col-2\">\n                                 <label>Stock actual</label>\n                                 <h4 className=\"card-title\"name=\"stockActual\">{this.state.stockActual}</h4>\n                             </div>\n                             { this.state.addBotones && <Botones generateExcel={this.generateExcel} generateGraficos={this.generateGraficos} />}\n\n                       </div>\n                       <div className=\"row\" >\n                           <div className=\"col-3\">\n                               <label>Nombre del producto </label>\n                               <h4 className=\"card-title\" name=\"nombreProducto\">{this.state.nombreProducto} </h4>\n                           </div>\n                           <div className=\"col-2\">\n                               <label>Codigo</label>\n                               <h4 className=\"card-title\" name=\"codigoProductoSpan\">{this.state.codigoProductoSpan}</h4>\n                           </div>\n                           <div className=\"col-2\">\n                               <label>Entradas totales</label>\n                               <h4 className=\"card-title\" name=\"entradaTotal\">{this.state.entradaTotal}</h4>\n                           </div>\n                           <div className=\"col-2\">\n                               <label>Trasnferencias Enviadas</label>\n                               <h4 className=\"card-title\" name=\"transferenciaTotal\">{this.state.transferenciaEnviadas}</h4>\n                           </div>\n                           <div className=\"col-2\">\n                               <label>Trasnferencias Recibidas</label>\n                               <h4 className=\"card-title\"name=\"transferenciaTotal\">{this.state.transferenciaRecibidas}</h4>\n                           </div>\n                           <div className=\"col-1\">\n                               <label>Total vendidos</label>\n                               <h4 className=\"card-title\" name=\"totalVendido\">{this.state.totalVendido}</h4>\n                           </div>\n                     </div>\n\n                 </div>\n             </div>\n         </div>\n\n         {this.state.addGraficos && <Graficos reporte={this.state.reporte} />}\n         {this.state.addTabla && <Tabla reporte={this.state.reporte} />}\n\n         </div>\n\n       )\n\n     }\n  }\n\n\nexport default Reportes\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {Component} from 'react';\n\nclass VentaBoleta extends Component {\n    constructor(){\n        super();\n        this.state ={\n        }\n\n}\n\nrender(){\n    return(\n        <div className=\"col-lg-12 grid-margin stretch-card\">\n        <div className=\"card card-default\">\n            <div className=\"card-body\">\n             <h6 className=\"card-title\">BOLETA ELECTRÓNICA:</h6>\n            <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_emitirBoleta\">\n                <div className=\"form-group\">\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <label><i className=\"mdi mdi-barcode\"></i>   Serie:</label>\n                            <input type=\"hidden\" name=\"tipoComprobante\" id=\"tipoComprobante\" value=\"{{ $tiposcomprobante->id }}\" className=\"form-control\" readonly=\"readonly\" />\n                            <input type=\"text\" name=\"serieVenta\" id=\"serieVenta\" value=\"{{ $tiposcomprobante->serie }}\" className=\"form-control\" readonly=\"readonly\"/>\n                        </div>\n                        <div className=\"col-3\">\n                            <label> <i className=\"mdi mdi-file-document-box\"></i>    Nº Boleta:</label>\n                            <input type=\"number\" className=\"form-control\" name=\"facturaVenta\" id=\"facturaVenta\" value=\"{{ $tiposcomprobante->correlativo }}\"/>\n                        </div>\n                        <div className=\"col-3\">\n                            <label> <i className=\"mdi mdi-calendar-text\"></i>    Fecha de emisión:</label>\n                            <input type=\"text\" className=\"form-control\" value =\"{{ $fechaActual }}\" name=\"dateFactura\" id=\"dateFactura\"/>\n                        </div>\n                        <div className=\"col-3\">\n                            <label> <i className=\"mdi mdi-cash-multiple\"></i>  Moneda:</label>\n                            <div className=\"input-group\">\n                                <select className=\"form-control\" name=\"tipoMoneda\" id=\"tipoMoneda\" style={{width: '100%'}}>\n                                    {/* @foreach($tiposMoneda as $tipoMoneda)\n                                        <option value=\"{{ $tipoMoneda->id }}\" > tipoMoneda->nombre  </option>\n                                    @endforeach */}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h6 className=\"card-title\">CLIENTE:</h6>\n                <div className=\"form-group\" >\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Tipo de Documento: *</label>\n                            <div className=\"input-group\">\n                                <select className=\"form-control\" name=\"tipoDocumento\" id=\"tipoDocumento\" style={{width: '100%'}}>\n                                    <option value=\"1\" > DNI </option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-3\">\n                            <label>N° de Documento: *</label>\n                            <input type=\"number\" className=\"form-control\" name=\"numeroDocumento\" id=\"numeroDocumento\"/>\n                        </div>\n                        <div className=\"col-6\">\n                            <label>Nombre del cliente: *</label>\n                            <input type=\"text\" className=\"form-control\" name=\"nombreCliente\" id=\"nombreCliente\"/>\n                        </div>\n                    </div>\n                </div>\n                <h6 className=\"card-title\">DETALLE DOCUMENTO:</h6>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <table className=\"table table-bordered\" id=\"tbl_products\">\n                            <thead>\n                                <tr>\n                                    <th width=\"25%;\">Producto</th>\n                                    <th>Cantidad</th>\n                                    <th width=\"2%;\">Disponible</th>\n                                    <th width=\"25%;\">Precio</th>\n                                    <th>Descuento</th>\n                                    <th>SubTotal</th>\n                                    <th>Total</th>\n                                    <th>Opciones</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <select className=\"form-control productos \" name=\"nombreProducto[]\" id=\"nombreProducto\" style={{width: '100%'}}>\n                                            {/* @foreach($productos as $producto) */}\n                                                {/* <option value=\"{{ $producto->id }}\" \n                                                precio=\"{{ $producto->precio }}\"  disponible=\"{{ $producto->cantidad }}\"> $producto->nombre </option> */}\n                                            {/* @endforeach */}\n                                        </select>\n                                    </td>\n                                    <td className=\"cantidad\">\n                                        <input type=\"text\" className=\"form-control c_quantity\" name=\"cantidad[]\"  value=\"0\"/>\n                                    </td>\n                                    <td className=\"disponible\">\n                                        <span>0</span>\n                                        <input type=\"hidden\" className=\"form-control disponible\" name=\"disponible[]\" value=\"0\" readonly=\"\"/>\n                                    </td>\n                                    <td className=\"precio\">\n                                        <span>0</span>\n                                        <input type=\"hidden\" className=\"form-control precio\" name=\"precio[]\" value=\"0\" readonly=\"\" style={{width: '100%'}}/>\n                                    </td>\n                                    <td>\n                                        <span>0</span>\n                                        <input type=\"hidden\" className=\"form-control descuento\" name=\"descuento[]\" value=\"0\" readonly=\"\"/>\n                                    </td>\n                                    <td className=\"subtotal\">\n                                        <span>0</span>\n                                        <input type=\"hidden\" className=\"form-control subtotal\" name=\"subtotal[]\" value=\"0\" readonly=\"\" style={{width: '100%'}}/>\n                                    </td>\n                                    <td className=\"total\">\n                                        <span>0</span>\n                                        <input type=\"hidden\" className=\"form-control total\" name=\"total[]\" value=\"0\" readonly=\"\" style={{width: '100%'}}/>\n                                    </td>\n                                    <td>\n                                        \n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    \n                    <div className=\"col-12\">\n                        <br/>\n                        \n                        <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProduct\">\n                            <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO AL DETALLE\n                        </button>\n                        <br/>\n                    </div>\n                </div><br/>\n                <div className=\"col-md-12\" style={{marginTop: '15px'}}>\n                    <div className=\"row\">\n                        <div className=\"col-sm-7\">\n                            <div className=\"content-group\">\n                                <h6>Observación:</h6>\n                                <textarea className=\"form-control\" name=\"observacionVenta\" id=\"exampleTextarea1\" rows=\"8\" placeholder=\"Escribe aquí una observación\">SN</textarea>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-5\">\n                            <div className=\"content-group\">\n                                <h6>Resumen:</h6>\n                                <div className=\"table-responsive no-border\">\n                                    <table className=\"table\">\n                                        <tbody>\n                                            <tr>\n                                                <th>Descuento:</th>\n                                                <td className=\"text-right\">\n                                                    S/. <span id=\"descuentoVentaTexto\">0</span>\n                                                    <input type=\"hidden\" name=\"descuentoVenta\" id=\"descuentoVenta\" value=\"0\"/>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <th>Subtotal:</th>\n                                                <td className=\"text-right\">\n                                                    S/. <span id=\"subTotalVentaTexto\">0</span>\n                                                    <input type=\"hidden\" name=\"subTotalVenta\" id=\"subTotalVenta\" value=\"0\"/>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <th>IGV: <span className=\"text-regular\">(18%)</span></th>\n                                                <td className=\"text-right\">\n                                                    S/. <span id=\"igvVentaTexto\">0</span>\n                                                    <input type=\"hidden\" name=\"igvVenta\" id=\"igvVenta\" value=\"0\"/>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <th>Total:</th>\n                                                <td className=\"text-right text-primary\"><h5 className=\"text-semibold\">\n                                                    S/. <span id=\"totalVentaTexto\">0</span></h5>\n                                                    <input type=\"hidden\" name=\"totalVenta\" id=\"totalVenta\" value=\"2\"/>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group boton\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <button type=\"button\" className=\" addexis form-control btn btn-block btn-primary btn-lg\" id=\"emitirBoleta\">\n                                EMITIR BOLETA ELECTRÓNICA</button>\n                        </div>\n                        <div className=\"col-6\">\n                            <button type=\"button\" className=\" addexis form-control btn btn-block btn-success btn-lg\" id=\"guardarBoleta\">\n                                GUARDAR BOLETA ELECTRÓNICA</button>\n                        </div>\n                    </div>\n                    \n                </div>\n            </form>\n        </div>\n        </div>\n        </div>\n\n)}}\n\nexport default VentaBoleta","import React from 'react'\nimport {Component} from 'react';\nimport Modal from 'react-bootstrap/Modal'\n\nclass VentaFactura extends Component {\n    constructor(){\n        super();\n        this.state ={\n            data:'hola',\n            estadoa:false,\n            estadob:false\n            \n            \n        }\n        this.cambiarb= this.cambiarb.bind(this);\n        this.cambiara= this.cambiara.bind(this);\n        this.cambio= this.cambio.bind(this);   \n}\n    cambiara() {\n        this.setState({\n        estadoa: !this.state.estadoa\n        });\n    }\n    cambiarb(){\n        this.setState({\n            estadob: !this.state.estadob\n        })\n    }   \n\n    cambio() {\n        this.setState({\n        estadoa: !this.state.estadoa,\n        estadob: !this.state.estadob\n        }); \n    }\n \n\nfechtDataFactura(){\n    console.log(\"holaaaa\");\n}\n\nrender(){\n    return(\n     <div className=\"col-lg-12 grid-margin stretch-card\">\n        <div className=\"card card-default\">\n            <div className=\"card-body\">\n            <h6 className=\"card-title\">FACTURA ELECTRÓNICA:</h6>\n            <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_editar_producto\">\n                <div className=\"form-group\">\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <label><i className=\"mdi mdi-barcode\"></i>   Serie:</label>\n                            <input type=\"hidden\" name=\"tipoComprobante\" id=\"tipoComprobante\" value=\"{{ $tiposcomprobante->id }}\" className=\"form-control\" readonly=\"readonly\" />\n                            <input type=\"text\" name=\"serieVenta\" id=\"serieVenta\" value={this.props.dataFactura.serie} className=\"form-control\" readonly=\"readonly\"/>\n                        </div>\n                        <div className=\"col-3\">\n                            <label> <i className=\"mdi mdi-file-document-box\"></i>    Nº Factura:</label>\n                            <input type=\"number\" className=\"form-control\" name=\"facturaVenta\" id=\"facturaVenta\" value={this.props.correlativo} readOnly=\"readonly\" />\n                        </div>\n                        <div className=\"col-3\">\n                            <label> <i className=\"mdi mdi-calendar-text\"></i>    Fecha de emisión:</label>\n                            <input type=\"text\" className=\"form-control\" value ={this.props.fecha} name=\"dateFactura\" id=\"dateFactura\"/>\n                        </div>\n                        <div className=\"col-3\">\n                            <label> <i className=\"mdi mdi-cash-multiple\"></i>  Moneda:</label>\n                            <input type=\"text\" className=\"form-control\" value =\"Soles\" name=\"dateFactura\" id=\"dateFactura\" readOnly=\"readonly\" />\n                        </div>\n                    </div>\n                </div>\n                <h6 className=\"card-title\">CLIENTE:</h6>\n                <div className=\"form-group\" >\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Tipo de Documento: *</label>\n                            <div className=\"input-group\">\n                                <select className=\"form-control\" name=\"tipoDocumento\" id=\"tipoDocumento\" style={{width: '100%'}}>\n                                    <option value=\"3\" > RUC </option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-3\">\n                            <label>N° de Documento:*</label>\n                            <input type=\"number\" className=\"form-control\" name=\"numeroDocumento\" id=\"numeroDocumento\"/>\n                        </div>\n                        <div className=\"col-6\">\n                            <label>Razón Social: *</label>\n                            <input type=\"text\" className=\"form-control\" name=\"razonSocial\" id=\"razonSocial\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\" >\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <label><i className=\"mdi mdi-home\"></i>    Dirección: *</label>\n                            <input type=\"text\" className=\"form-control\" name=\"direccion\" id=\"direccion\"/>\n                        </div>\n                    </div>\n                </div>\n                <h6 className=\"card-title\">DETALLE DOCUMENTO:</h6>\n                <div className=\"row\">\n                <div className=\"col-12\">\n                    <table className=\"table table-bordered dataTables_length\" id=\"tb_products\">\n                        <thead>\n                            <tr>\n                                \n                                <th width=\"25%;\">Producto</th>\n                                <th>Cantidad</th>\n                                <th>Disponible</th>\n                                <th width=\"15%;\">Precio</th>\n                                <th>Descuento</th>\n                                <th>SubTotal</th>\n                                <th>Total</th>\n                                <th>Opciones</th>\n                            </tr>\n                        </thead>\n                    </table>\n                </div>\n                \n                <div className=\"col-12\">\n                    <br/>\n                    \n                    <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProduct\" onClick={() => this.cambiara()} >\n                        <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO AL DETALLE\n                    </button>\n                    <br/>\n                </div>\n            </div><br/>\n            <div className=\"col-md-12\" style={{\"margin-top\": '15px'}}>\n                <div className=\"row\">\n                    <div className=\"col-sm-7\">\n                        <div className=\"content-group\">\n                            <h6>Observación:</h6>\n                            <textarea className=\"form-control\" name=\"observacionVenta\" id=\"exampleTextarea1\"  rows=\"8\" placeholder=\"Escribe aquí una observación\">SN</textarea>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-5\">\n                        <div className=\"content-group\">\n                            <h6>Resumen:</h6>\n                            <div className=\"table-responsive no-border\">\n                                <table className=\"table\">\n                                    <tbody>\n                                        <tr>\n                                            <th>Descuento:</th>\n                                            <td className=\"text-right\">\n                                                S/. <span id=\"descuentoVentaTexto\">0</span>\n                                                <input type=\"hidden\" name=\"descuentoVenta\" id=\"descuentoVenta\" value=\"0\"/>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <th>Subtotal:</th>\n                                            <td className=\"text-right\">\n                                                S/. <span id=\"subTotalVentaTexto\">0</span>\n                                                <input type=\"hidden\" name=\"subTotalVenta\" id=\"subTotalVenta\" value=\"0\"/>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <th>IGV: <span className=\"text-regular\">(18%)</span></th>\n                                            <td className=\"text-right\">\n                                                S/. <span id=\"igvVentaTexto\">0</span>\n                                                <input type=\"hidden\" name=\"igvVenta\" id=\"igvVenta\" value=\"0\"/>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <th>Total:</th>\n                                            <td className=\"text-right text-primary\"><h5 className=\"text-semibold\">\n                                                S/. <span id=\"totalVentaTexto\">0</span></h5>\n                                                <input type=\"hidden\" name=\"totalVenta\" id=\"totalVenta\" value=\"2\"/>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-group boton\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <button type=\"button\" className=\" addexis form-control btn btn-block btn-primary btn-lg\" id=\"emitirFactura\">\n                            EMITIR FACTURA ELECTRÓNICA</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button type=\"button\" className=\" addexis form-control btn btn-block btn-success btn-lg\" id=\"guardarFactura\">\n                            GUARDAR FACTURA ELECTRÓNICA</button>\n                    </div>\n                </div>\n                \n            </div>\n        </form>\n\n        <div id=\"agregarProductoDetalleModal\" className=\"modal fade bd-agregarProductoDetalleModal-lg\" role=\"dialog\">\n            <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                    <div className=\"card card-default\">\n                        <div className=\"card-header cabezera\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4> Buscar producto especifico </h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            \n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <h4 className=\"card-title\">Buscar</h4>\n                                        <div className=\"row\">\n                                            <div className=\"col-3\">\n                                                <label>Buscar Codigo</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_codigo\" id=\"buscar_tb_codigo\"/>\n                                            </div>\n                                            <div className=\"col-2\">\n                                                <label>Buscar Marca</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_marca\" id=\"buscar_tb_marca\"/>\n                                            </div>\n                                            <div className=\"col-2\">\n                                                <label>Buscar Tipo</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_tipo\" id=\"buscar_tb_tipo\"/>\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <label>Buscar Nombre</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_nombre\"/>\n                                            </div>\n                                            <div className=\"col-2\">\n                                                <label>Buscar Precio</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_precio\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> \n                                <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProductoTemporal\"  >\n                                    <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO TEMPORAL\n                                </button>\n\n\n                            <div className=\"card-body\" id=\"agregarProductoDetalleModalBody\">\n                                <table className=\"table table-bordered dataTables_length\" id=\"tb_buscarProducto\" style={{width:'100%'}}>\n                                    <thead>\n                                        <tr>\n                                            <th>Codigo</th>\n                                            <th>Marca</th>\n                                            <th>Tipo</th>\n                                            <th>Disponibles</th>\n                                            <th>Nombre</th>\n                                            <th>Precio</th>\n                                            <th>Seleccionar</th>\n                                        </tr>\n                                    </thead>\n                                </table>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n        \n      <Modal\n            size=\"lg\"\n            show={this.state.estadoa}\n            onHide={() => this.cambiara()}            \n        >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n             Buscar producto especifico\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <div className=\"card card-default\">\n                        <div className=\"card-header cabezera\">\n                            <h4> Buscar producto especifico </h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            \n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <h4 className=\"card-title\">Buscar</h4>\n                                        <div className=\"row\">\n                                            <div className=\"col-3\">\n                                                <label>Buscar Codigo</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_codigo\" id=\"buscar_tb_codigo\"/>\n                                            </div>\n                                            <div className=\"col-2\">\n                                                <label>Buscar Marca</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_marca\" id=\"buscar_tb_marca\"/>\n                                            </div>\n                                            <div className=\"col-2\">\n                                                <label>Buscar Tipo</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_tipo\" id=\"buscar_tb_tipo\"/>\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <label>Buscar Nombre</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_nombre\"/>\n                                            </div>\n                                            <div className=\"col-2\">\n                                                <label>Buscar Precio</label>\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_precio\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> \n                                <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProductoTemporal\" onClick={() => this.cambio()} >\n                                    <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO TEMPORAL\n                                </button>\n\n\n                            <div className=\"card-body\" id=\"agregarProductoDetalleModalBody\">\n                                <table className=\"table table-bordered dataTables_length\" id=\"tb_buscarProducto\" style={{width:'100%'}}>\n                                    <thead>\n                                        <tr>\n                                            <th>Codigo</th>\n                                            <th>Marca</th>\n                                            <th>Tipo</th>\n                                            <th>Disponibles</th>\n                                            <th>Nombre</th>\n                                            <th>Precio</th>\n                                            <th>Seleccionar</th>\n                                        </tr>\n                                    </thead>\n                                </table>  \n                            </div>\n                        </div>\n                    </div>\n\n        </Modal.Body>\n      </Modal>\n\n      <Modal\n            show={this.state.estadob}\n            onHide={() => this.cambiarb()}\n        >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Custom Modal Styling\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n                <div className=\"card card-default\">\n                        <div className=\"card-header cabezera\">\n                            <h4> Agregar Producto </h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"card-body\">\n                                <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_producto\">\n                                    @csrf\n                                    <div className=\"form-group\" >\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Codigo (OPCIONAL)</label>\n                                                <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\"/>\n                                            </div>\n                                            <div className=\"col-12\" id=\"alertaCodigo\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Nombre del producto</label>\n                                                <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Precio con IGV(18%)</label>\n                                                <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\n                                                    pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value=\"\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" />\n                                            \n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group boton\">\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\">\n                                            Agregar</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n        </Modal.Body>\n      </Modal>\n\n        <div id=\"productoTemporalModal\" className=\"modal fade bd-productoTemporalModal\" role=\"dialog\">\n            <div className=\"modal-dialog \">\n                <div className=\"modal-content\">\n                    <div className=\"card card-default\">\n                        <div className=\"card-header cabezera\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4> Agregar Producto </h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"card-body\">\n                                <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_producto\">\n                                    @csrf\n                                    <div className=\"form-group\" >\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Codigo (OPCIONAL)</label>\n                                                <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\"/>\n                                            </div>\n                                            <div className=\"col-12\" id=\"alertaCodigo\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Nombre del producto</label>\n                                                <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Precio con IGV(18%)</label>\n                                                <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\n                                                    pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value=\"\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" />\n                                            \n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group boton\">\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\">\n                                            Agregar</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>\n        </div>\n\n\n)}}\n\nexport default VentaFactura","import React from 'react'\nimport {Component} from 'react';\n\n\nclass ProductoAddDetalleComponent extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            cantidad : 1\n\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.calcularSubTotalTotal = this.calcularSubTotalTotal.bind(this);\n    }\n\n    handleChange (e){\n        const {name , value} = e.target;\n\n        if (e.key === 'Enter') {\n            console.log(value);\n            this.props.buscarCodigoProducto(value, this.props.posicion);\n        }\n    }\n\n    calcularSubTotalTotal(e){\n        const {name , value} = e.target;\n        \n        this.setState({\n            cantidad : value\n        })\n        \n        console.log(value);\n        this.props.calcularSubTotalTotalDetalle(this.props.posicion, value, this.props.precio);\n    }\n\n    render(){\n        return(\n            <tr>\n                <td>\n                    <input \n                        autoComplete={\"off\"}\n                        type=\"text\" \n                        className=\"form-control \" \n                        name=\"codigo[]\" \n                        autoFocus\n                        value={this.props.codigo}\n                        onChange={e => this.props.cambiarCodigo(e, this.props.posicion)}\n                        onKeyDown={this.handleChange}/>\n                </td>\n                <td>\n                    <span>{this.props.producto}</span>\n                    {/* <input \n                        type=\"text\" \n                        className=\"form-control\"\n                        value={this.props.producto}\n                        name=\"producto[]\" /> */}\n                </td>\n                <td className=\"cantidad\">\n                    <input \n                        type=\"number\" \n                        className=\"form-control c_quantity\"\n                        onChange={this.calcularSubTotalTotal}\n                        value={this.state.cantidad}\n                        name=\"cantidad[]\" />\n                </td>\n                <td className=\"disponible\">\n                    <span>{this.props.stock}</span>\n                    <input type=\"hidden\" className=\"form-control disponible\" name=\"disponible[]\" value=\"0\" />\n                </td>\n                <td className=\"precio\">\n                    {\n                        this.props.descuentoAplicado\n                        ?<span><strike>{this.props.precio}</strike> - {this.props.nuevoPrecioOferta}</span>\n                        :<span>{this.props.precio}</span>\n                    }\n                    <input type=\"hidden\" className=\"form-control precio\" name=\"precio[]\" value=\"0\" style={{width: '100%'}}/>\n                </td>\n                <td className=\"descuento\">\n                    <span>{this.props.descuento}</span>\n                </td>\n                <td className=\"subtotal\">\n                    <span>{this.props.subTotal}</span>\n                    <input type=\"hidden\" className=\"form-control subtotal\" name=\"subtotal[]\" value=\"0\" style={{width: '100%'}}/>\n                </td>\n                <td className=\"total\">\n                    <span>{this.props.total}</span>\n                    <input type=\"hidden\" className=\"form-control total\" name=\"total[]\" value=\"0\" style={{width: '100%'}}/>\n                </td>\n                <td>\n                    <button type=\"button\" className=\"btn btn-danger btn-rounded btn-icon remove\" onClick={()=>this.props.eliminarProductoDetalle(this.props.numero)} >\n                        <i className=\"mdi mdi-close\"></i>\n                    </button>\n                </td>\n            </tr>\n         ) }}\n\n    export default ProductoAddDetalleComponent","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {Component} from 'react';\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\n// IMPORT CONFRIM ALERTS\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n// IMPORTAR SPINNER DE CARGA\nimport Loader from 'react-loader-spinner'\n\n// IMPORTAR COMPONENTE DE PRODUCTOS AL DETALLE\nimport ProductoAddDetalleComponent from './productoAddDetalle'\n\n// TOAST\nimport cogoToast from 'cogo-toast';\nimport config from '../../../config'\n\nclass NuevaVenta extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            getDni          : true,\n            DNIRUCdatos     : [],\n            DNIRUCdatos     : [],\n            dniCliente      : '',\n            \n            // Toast\n            estadoToast     : false,\n            mensajeToast    : '',\n            colorToast      : 'rgba(76,208,76,0.7)',\n\n            // Cargando\n            loading         : true,\n\n            // Modales\n            estadoModalEditarProducto   :false,\n\n            // Array de productos agregados al detalle\n            arrayProductosDetalle       : [],\n            cantidadProductosDetalle    : 0,\n            numeroProductoDetalle       : 0,\n            tasks                       : '',\n            productosDetalleList        : [],\n\n            // DATOS TOTALES DE UNA VENTA\n            tipoDocumentoCliente        : 1,\n            numeroDocumentoCliente      : '',\n            nombreCliente               : '',\n            tipoComprobante             : '',\n            numeroVentasRealizadas      : 0,\n            totalVentasRealizadas       : 0,\n            sucursalId                  : '',\n            tipoMoneda                  : '1',\n            numeroVenta                 : '',\n            dateFactura                 : '',\n\n            descuentoVentaRealizadoGuardado : 0,\n            descuentoVentaRealizado     : 0,\n            descuentoVenta              : 0,\n            igvVenta                    : 0,\n            subTotalVenta               : 0,\n            totalVenta                  : 0,\n\n            observacionVenta            : 'SN',\n            \n            // DATOS DE UN PRODUCTO TEMPORAL\n            codigoProductoTemporal      : '',\n            nombreProductoTemporal      : '',\n            precioProductoTemporal      : '',\n\n            estadoa:false,\n            productos_tb                : [],\n             //buscador y Paginate\n             estadoBoton:[],\n             estadoQuery:'',\n\n\n        }\n        this.getCambioNumeroDocumento        = this.getCambioNumeroDocumento.bind(this);\n        this.getCambioNombreCliente          = this.getCambioNombreCliente.bind(this);\n        this.cambiarTipoDocumento            = this.cambiarTipoDocumento.bind(this);\n        this.cambiarTipoPago                 = this.cambiarTipoPago.bind(this);\n        this.calcularSubTotalTotalDetalle    = this.calcularSubTotalTotalDetalle.bind(this);\n        this.buscarCodigoProducto            = this.buscarCodigoProducto.bind(this);\n        this.eliminarProductoDetalle         = this.eliminarProductoDetalle.bind(this);\n        this.calcularDatosTotalesVenta       = this.calcularDatosTotalesVenta.bind(this);\n        this.cambiarValorFormTemporales      = this.cambiarValorFormTemporales.bind(this);\n        this.fetchAgregarProductoTemporal    = this.fetchAgregarProductoTemporal.bind(this);\n        this.generarVentaInterna             = this.generarVentaInterna.bind(this);\n        this.fetchAgregarVenta               = this.fetchAgregarVenta.bind(this);\n        this.getCambioDescuentoVenta         = this.getCambioDescuentoVenta.bind(this);\n\n        this.getProductos                    = this.getProductos.bind(this);\n        this.handleChangeBuscador            = this.handleChangeBuscador.bind(this);\n        this.seleccionarProductoTb           = this.seleccionarProductoTb.bind(this);\n        this.cambiarCodigo                   = this.cambiarCodigo.bind(this);\n        this.modalBuscarProducto             = this.modalBuscarProducto.bind(this);\n        this.getCambioObservacion            = this.getCambioObservacion.bind(this);\n\n    }\n\nmodalBuscarProducto() {\n    this.setState({\n        estadoa: !this.state.estadoa\n    });\n}\n\ncomponentDidMount(){\n    this.getProductos();\n  }\n\n\ngetProductos(){\n    fetch(\n        config.api+'/ventas/tb_buscarProducto',\n        {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n    )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                productos_tb: data\n            })\n            this.agregarBotones();\n    })\n}\n\nagregarBotones(){\n    let z = this.state.productos_tb.last_page;\n    console.log(z);\n    let x = [];\n    if(z){\n        for(let i = 1 ; i <= z ; i++){\n            x.push(i);\n        }\n        this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\n    }\n}\n\ncambiarPagina(number){\n    fetch(config.api+`/ventas/tb_buscarProducto?page=${number}&bprecio=${this.state.estadoQuery}`)\n      .then(res => res.json())\n      .then(data => {\n          this.setState({productos_tb: data},()=>{\n            console.log(this.state.productos_tb)\n            this.agregarBotones();\n          });\n\n    })\n\n  }\n\nfetchQuery(query,name){\n    fetch(\n        config.api+`/ventas/tb_buscarProducto?${name}=${query}`,\n        {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n    )\n      .then(res => res.json())\n      .then(data => {\n        this.setState({productos_tb: data,estadoQuery: query}, () => {\n            this.agregarBotones();\n            console.log(\"obtenido?\");\n        });\n      })\n}\n\nhandleChangeBuscador (e){\n\n  const {name , value} = e.target;\n  console.log(value);\n  this.fetchQuery(value,name);\n  console.log(name);\n  console.log(\"ULTIMO ARRAY POSCION\"+this.state.cantidadProductosDetalle)\n}\n\ngetCambioObservacion (e){\n\n    const {name , value} = e.target;\n    this.setState({\n        observacionVenta : value\n    })\n}\n\n// SELECCIONAR UN PRODUCTO DE UNA TABLA\nseleccionarProductoTb(codigo){\n\n    this.buscarCodigoProducto(codigo, this.state.cantidadProductosDetalle-1)\n    this.modalBuscarProducto()\n}\n\ncambiarCodigo(e, posicion){\n    const {name , value} = e.target;\n\n    this.state.productosDetalleList[posicion]['codigoProducto']    =    value;\n    this.setState({\n        productosDetalleList : this.state.productosDetalleList\n    })\n}\n\ncambiarTipoDocumento(e){\n    const {name , value} = e.target;\n\n    this.setState({\n        tipoDocumentoCliente : value\n    })\n    if(value == 0){\n        this.setState({\n            numeroDocumentoCliente  : 20000001,\n            nombreCliente           : \"NO IDENTIFICADO\"\n        })\n    }\n    console.log(this.state.tipoDocumentoCliente)\n}\n\ncambiarTipoPago(e){\n    const {name , value} = e.target;\n\n    this.setState({\n        tipoMoneda : value\n    })\n    \n}\n\ngetCambioNumeroDocumento(e){\n    const {name , value} = e.target;\n    \n    this.setState({\n        numeroDocumentoCliente  : value\n    })\n\n    if(this.state.tipoDocumentoCliente == 1 && value.length == 8){\n        this.fetchDNIRUC(\"dni\", value);\n    }else if(this.state.tipoDocumentoCliente == 6 && value.length == 11){\n        this.fetchDNIRUC(\"ruc\", value);\n\n    }else{\n        this.setState({\n            nombreCliente   : \"NO IDENTIFICADO\",\n            numeroVentasRealizadas  : 0,\n            totalVentasRealizadas   : 0,\n            \n        })\n        \n    }\n}\n\nfetchDNIRUC(tipoDocumento, value){\n    let url = config.api+`/consult/`+tipoDocumento+`/${value}`;\n    console.log(url)\n    fetch(url,\n        {\n            method: 'POST',\n            body: JSON.stringify({\n                // '_token': csrf_token,\n            }),\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n    )\n    .then(response => response.json())\n    .then(data => {\n        this.setState(\n            {\n                DNIRUCdatos: data['persona'],\n            },\n            () => {\n                console.log(url);\n                console.log(this.state.numeroDocumentoCliente);\n                console.log(\"Datos:\");\n                console.log(data);\n                if(data['response'] == true){\n                    this.setState({\n                        numeroVentasRealizadas  : data['numeroVentasRealizadas'],\n                        totalVentasRealizadas   : data['totalVentasRealizadas'],\n                    })\n                    this.activarToast(\"DOCUMENTO CORRECTO\", \"rgba(76,208,76,0.7)\");\n                    console.log(this.state.DNIRUCdatos);\n                    this.datosDNIRUC(tipoDocumento);\n\n                }else{\n                    this.activarToast(\"DOCUMENTO NO ENCONTRADO\", \"rgba(205,55,55,0.7)\");\n                }\n                \n            }\n        );\n        \n    })\n}\n\ndatosDNIRUC(tipoDocumento){\n    if(tipoDocumento == \"dni\"){\n        this.setState({\n            nombreCliente   : this.state.DNIRUCdatos.nombres+\" \"+this.state.DNIRUCdatos.apellidoPaterno+\" \"+this.state.DNIRUCdatos.apellidoMaterno,\n        },\n        console.log(this.state.DNIRUCdatos))\n    }else{\n        this.setState({\n            nombreCliente   : this.state.DNIRUCdatos.razonSocial,\n        },\n        console.log(this.state.DNIRUCdatos))\n    }\n}\n\ngetCambioNombreCliente(e){\n\n    const {name , value} = e.target;\n    this.setState({\n        nombreCliente   : value\n    })\n\n}\n\nactivarToast(message, color) {\n    this.setState({\n        mensajeToast : message,\n        colorToast   : color,\n        estadoToast  : true\n    });\n}\n\nactivarConfirmacion(titulo, descripcion, btn_aceptar){\n    confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <h1>{titulo}</h1>\n                    <p>{descripcion}</p>\n                    <div className=\"form-group boton\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                            <button type=\"button\" onClick={btn_aceptar}\n                                className=\"btn waves-effect waves-light btn-rounded btn-primary btn-lg\">\n                                    Aceptar\n                            </button>\n                            </div>\n                            <div className=\"col-6\">\n                                <button type=\"button\" onClick={onClose}\n                                    className=\"btn waves-effect waves-light btn-rounded btn-danger btn-lg\">\n                                        Cancelar\n                                </button>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    });\n}\n\ncargando(titulo, descripcion, btn_aceptar){\n    confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <h1>{titulo}</h1>\n                    <p>{descripcion}</p>\n                    <div className=\"form-group boton\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                            <button type=\"button\" onClick={onClose}\n                                className=\"btn waves-effect waves-light btn-rounded btn-primary btn-lg\">\n                                    Aceptar\n                            </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    });\n}\n\nagregarProducto(posicion){\n    this.state.cantidadProductosDetalle == 0\n    ? this.agregarProductoDetalle()\n    : confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <h1>Agregar producto temporal</h1>\n                    <p>Los productos temporales son agregados en el caso que no esten en el almacen</p>\n                    <hr></hr>\n                    <div className=\"row\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <label className=\"control-label col-form-label\">Codigo del producto:</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control is-valid\" \n                                        autoFocus\n                                        onChange={e => this.cambiarValorFormTemporales(e, 0)}\n                                        // value={this.state.codigoProductoTemporal}\n\n                                        />\n                                </div>\n                                <br/>\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label className=\"control-label col-form-label\">Producto:</label>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            onChange={e => this.cambiarValorFormTemporales(e, 1)}\n                                            // value={this.state.nombreProductoTemporal}\n                                            />\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label className=\"control-label col-form-label\">Precio: </label>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            onChange={e => this.cambiarValorFormTemporales(e, 2)}\n                                            // value={this.state.precioProductoTemporal}\n                                            />\n                                    </div>\n                                </div>\n                            </div>\n                            \n                        </div>\n                        <div className=\"col-lg-12 col-md-12\">\n                            <button \n                                type=\"button\" \n                                onClick={() => {\n                                    this.fetchAgregarProductoTemporal(posicion);\n                                    onClose();\n                                }}\n                                // onClick={()=>this.fetchAgregarProductoTemporal();  onClose();}\n                                className=\"btn btn-block btn-lg btn-primary\">Agregar</button>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    });\n}\n\ncambiarValorFormTemporales(e, datoTemporal){\n    const {name , value} = e.target;\n    switch(datoTemporal){\n        case 0:\n            this.state.codigoProductoTemporal  = value;\n            this.setState({\n                codigoProductoTemporal : this.state.codigoProductoTemporal,\n            })\n            break;\n        case 1:\n            this.state.nombreProductoTemporal = value;\n            this.setState({\n                nombreProductoTemporal  : this.state.nombreProductoTemporal,\n            })\n            break;\n        case 2:\n            this.state.precioProductoTemporal = value;\n            this.setState({\n                precioProductoTemporal  : this.state.precioProductoTemporal\n            })\n            break;\n\n    }\n    console.log(value)\n    console.log(this.state.codigoProductoTemporal)\n    console.log(this.state.nombreProductoTemporal)\n    console.log(this.state.precioProductoTemporal)\n\n\n}\n\nfetchAgregarProductoTemporal(posicion){\n    // LA FUNCION AGREGA UN PRODUCTO TEMPORAL\n    fetch(config.api+`/ventas/crear/productoTemporal`,\n        {\n            method: 'POST',\n            body: JSON.stringify({\n                // '_token'        : csrf_token,\n                'codigoProductoNuevo'   : this.state.codigoProductoTemporal,\n                'nombreProductoNuevo'   : this.state.nombreProductoTemporal,\n                'precioVentaProducto'   : this.state.precioProductoTemporal,\n            }),\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n    )\n    .then(response => response.json())\n    .then(data => {\n        console.log(data);\n        console.log(data['response'])\n        if(data['response'] == true){\n            \n            this.activarToast(\"Producto temporal agregado satisfactoriamente\", \"rgba(76,208,76,0.7)\");\n            this.state.precioProductoTemporal = '';\n            this.state.nombreProductoTemporal = '';\n            this.state.codigoProductoTemporal = '';\n            this.setState({\n                codigoProductoTemporal : this.state.codigoProductoTemporal,\n                nombreProductoTemporal  : this.state.nombreProductoTemporal,\n                precioProductoTemporal  : this.state.precioProductoTemporal,\n            })\n\n            var producto = data['producto'];\n\n            this.state.productosDetalleList[posicion]['idProducto']        = producto['id'];\n            this.state.productosDetalleList[posicion]['codigoProducto']    = producto['codigo'];\n            this.state.productosDetalleList[posicion]['nombreProducto']    = producto['nombre'];\n            this.state.productosDetalleList[posicion]['stockProducto']     = producto['cantidad'];\n            this.state.productosDetalleList[posicion]['precioProducto']    = producto['precio'];\n            this.state.productosDetalleList[posicion]['cantidadOferta']    = 0;\n            this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = 0;\n            this.state.productosDetalleList[posicion]['descuentoAplicado'] = 0;\n\n            \n            this.calcularSubTotalTotalDetalle(posicion, 1, producto['precio']);\n            this.agregarProductoDetalle();\n        }else{\n            this.activarToast(\"Error al momento de agregar el producto temporal\", \"rgba(205,55,55,0.7)\");\n        }\n        \n    })\n}\n\nagregarProductoDetalle(){\n    this.setState({\n        cantidadProductosDetalle    : this.state.cantidadProductosDetalle+1,\n        numeroProductoDetalle       : this.state.numeroProductoDetalle+1\n    },()=>{ \n        // if(this.state.cantidadProductosDetalle > 1){ //CONDICION PARA QUE NO SE EJECUTE LA PRIMERA VEZ QUE SE AGREGA UN DETALLE\n            this.setState({\n                productosDetalleList    : [\n                    ...this.state.productosDetalleList, \n                    {\n                        idLista             : this.state.numeroProductoDetalle, \n                        idProducto          : 0,\n                        codigoProducto      : '', \n                        nombreProducto      : '', \n                        cantidadProducto    : 1,\n                        stockProducto       : 0,\n                        precioProducto      : 0,\n                        cantidadOferta      : 0,\n                        nuevoPrecioOferta   : 0,\n                        subTotalProducto    : 0,\n                        totalProducto       : 0,\n                        totalDescuento      : 0,\n                        descuentoAplicado   : 0, //0 NO SE APLICA EL DESCUENTO, 1 SE APLICA EL DESCUENTO\n                    } \n                ]\n            })\n        // }\n        this.setState({\n            arrayProductosDetalle   : [...this.state.arrayProductosDetalle, this.state.numeroProductoDetalle],\n        })\n    })\n}\n\nasync eliminarProductoDetalle(numero){\n   console.log(numero);\n   //miomio\n\n   await this.setState({\n        cantidadProductosDetalle    : this.state.cantidadProductosDetalle-1\n   })\n\n   var array = [...this.state.arrayProductosDetalle];\n   var index = array.indexOf(numero);\n\n   if (index > -1) {\n        array.splice(index,1);\n        console.log(array);    \n        await this.setState({\n            arrayProductosDetalle: array\n        })\n   }\n\n   var arrayProductosDetalleList = [];\n\n   await this.state.productosDetalleList.map((data, posicion)=>{\n        if(data.idLista != numero){\n            arrayProductosDetalleList    = [\n                ...arrayProductosDetalleList, \n                {\n                    idLista             : data.idLista, \n                    idProducto          : data.idProducto,\n                    codigoProducto      : data.codigoProducto,\n                    nombreProducto      : data.nombreProducto,\n                    cantidadProducto    : data.cantidadProducto,\n                    stockProducto       : data.stockProducto,\n                    precioProducto      : data.precioProducto,\n                    cantidadOferta      : data.cantidadOferta,\n                    nuevoPrecioOferta   : data.nuevoPrecioOferta,\n                    subTotalProducto    : data.subTotalProducto,\n                    totalProducto       : data.totalProducto,\n                    totalDescuento      : data.totalDescuento,\n                    descuentoAplicado   : data.descuentoAplicado\n                } \n            ]\n        }\n    })\n\n    await this.setState({\n        productosDetalleList: arrayProductosDetalleList\n    })\n\n    this.calcularDatosTotalesVenta();\n\n}\n\nbuscarCodigoProducto(codigo, posicion){ \n    fetch(config.api+`/producto/buscar`,\n        {\n            method: 'POST',\n            body: JSON.stringify({\n                // '_token'        : csrf_token,\n                codigoProducto  : codigo\n            }),\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n    )\n    .then(response => response.json())\n    .then(data => {\n        console.log(\"datos:\")\n        console.log(data)\n        if(data['response'] == true){\n           \n            this.activarToast(\"Producto agregado al detalle\", \"rgba(76,208,76,0.7)\");\n            \n            var producto    = data['producto'];\n            var descuento   = data['descuento'];\n\n            this.state.productosDetalleList[posicion]['idProducto']        = producto['id'];\n            this.state.productosDetalleList[posicion]['codigoProducto']    = producto['codigo'];\n            this.state.productosDetalleList[posicion]['nombreProducto']    = producto['nombre'];\n            this.state.productosDetalleList[posicion]['stockProducto']     = producto['cantidad'];\n            this.state.productosDetalleList[posicion]['precioProducto']    = producto['precio'];\n\n            if(descuento != 0){\n                this.state.productosDetalleList[posicion]['cantidadOferta']    = descuento['cantidad']\n                this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = descuento['nuevoPrecio']\n\n                this.state.productosDetalleList[posicion]['variosDescuentos'] = data['variosDescuentos']\n            }else{\n                this.state.productosDetalleList[posicion]['cantidadOferta']    = 0\n                this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = 0\n            }\n            this.state.productosDetalleList[posicion]['totalDescuento']    = 0\n            this.state.productosDetalleList[posicion]['descuentoAplicado']    = 0\n            \n            this.calcularSubTotalTotalDetalle(posicion, 1, producto['precio']);\n            this.agregarProductoDetalle();\n        }else{\n            this.activarToast(\"Producto no encontrado\", \"rgba(205,55,55,0.7)\");\n            this.agregarProducto(posicion);\n        }\n        \n    })\n}\n\nverArray(){\n    // console.log('cambiar')\n    // console.log(this.state.shop[1]['id'])\n    // this.state.shop[1]['id'] = 11\n    // this.setState({\n    //     shop : this.state.shop\n    // })\n    // console.log('terminado')\n    console.log(this.state.productosDetalleList)\n}\n\ngetCambioDescuentoVenta(e){\n    const {name , value} = e.target;\n    this.setState({\n        descuentoVentaRealizado  : value,\n    })\n\n    if (e.key === 'Enter') {\n        this.setState({\n\n            descuentoVenta : parseFloat(this.state.descuentoVenta) - parseFloat(this.state.descuentoVentaRealizadoGuardado),\n            descuentoVentaRealizadoGuardado : value,\n            descuentoVenta : parseFloat(this.state.descuentoVenta) + parseFloat(this.state.descuentoVentaRealizadoGuardado),\n        })\n        console.log(value);\n    }\n        \n}\n\ncalcularSubTotalTotalDetalle(posicion, cantidad, precio){\n    // console.log('cambioCalcular');\n    // console.log(posicion)\n    // console.log(cantidad)\n    // console.log(precio)\n\n    let precioCalcular;\n    let descuento;\n\n    if(cantidad >= this.state.productosDetalleList[posicion]['cantidadOferta'] && this.state.productosDetalleList[posicion]['cantidadOferta'] != 0  ){\n        // console.log('descuentos:')\n        // console.log(this.state.productosDetalleList[posicion]['variosDescuentos'])\n        // console.log(this.state.productosDetalleList[posicion]['variosDescuentos'].length)\n        if(this.state.productosDetalleList[posicion]['variosDescuentos'].length > 1){\n\n            let nuevaCantidadOferta = 0\n\n            for(let i = 0; i < this.state.productosDetalleList[posicion]['variosDescuentos'].length; i++){\n                if(cantidad == this.state.productosDetalleList[posicion]['variosDescuentos'][i]['cantidad']){\n                    // console.log('misma cantidad')\n                    nuevaCantidadOferta  = this.state.productosDetalleList[posicion]['variosDescuentos'][i]['cantidad'];\n                    precioCalcular  = this.state.productosDetalleList[posicion]['variosDescuentos'][i]['nuevoPrecio'];\n                    break;\n                }\n            }\n\n            this.state.productosDetalleList[posicion]['cantidadOferta']    = nuevaCantidadOferta\n            this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = precioCalcular\n\n            this.setState({\n                productosDetalleList : this.state.productosDetalleList\n            })\n\n            this.state.productosDetalleList[posicion]['descuentoAplicado'] = 1;\n            descuento       = ((precio - precioCalcular)*cantidad).toFixed(2);\n\n\n        }else{\n            this.state.productosDetalleList[posicion]['descuentoAplicado'] = 1;\n            precioCalcular  = this.state.productosDetalleList[posicion]['nuevoPrecioOferta'];\n            descuento       = ((precio - precioCalcular)*cantidad).toFixed(2);\n        }\n\n\n\n    }else{\n        this.state.productosDetalleList[posicion]['descuentoAplicado'] = 0;\n        precioCalcular  = precio;\n        descuento       = 0\n    }\n\n    let total       = precioCalcular * cantidad;\n    let subTotal    = total / 1.18;\n    let impuestos   = total - subTotal;\n    \n    this.state.productosDetalleList[posicion]['cantidadProducto']  = cantidad;\n    this.state.productosDetalleList[posicion]['subTotalProducto']  = subTotal.toFixed(2);\n    this.state.productosDetalleList[posicion]['totalProducto']     = total.toFixed(2);\n    this.state.productosDetalleList[posicion]['totalDescuento']    = descuento;\n    \n    \n    \n\n    var array = [...this.state.productosDetalleList];\n    this.setState({\n        productosDetalleList: array\n    })\n    this.calcularDatosTotalesVenta();\n}\n\ncalcularDatosTotalesVenta(){\n    \n    this.state.descuentoVenta   = parseFloat(0.00)\n    this.state.igvVenta         = parseFloat(0.00)\n    this.state.subTotalVenta    = parseFloat(0.00)\n    this.state.totalVenta       = parseFloat(0.00)\n    \n    this.setState({\n        descuentoVenta  : this.state.descuentoVenta ,\n        igvVenta        : this.state.igvVenta ,\n        subTotalVenta   : this.state.subTotalVenta ,\n        totalVenta      : this.state.totalVenta\n    })\n\n    this.state.productosDetalleList.map((data, posicion)=>{\n        this.state.descuentoVenta   = parseFloat(this.state.descuentoVenta) + parseFloat(data.totalDescuento)\n        this.state.igvVenta         = (parseFloat(data.totalProducto) - parseFloat(data.subTotalProducto)) + parseFloat(this.state.igvVenta)\n        this.state.subTotalVenta    = parseFloat(this.state.subTotalVenta) + parseFloat(data.subTotalProducto)\n        this.state.totalVenta       = parseFloat(this.state.totalVenta) + parseFloat(data.totalProducto);\n    })\n\n    this.setState({\n        descuentoVenta  : this.state.descuentoVenta.toFixed(2),\n        igvVenta        : this.state.igvVenta.toFixed(2) ,\n        subTotalVenta   : this.state.subTotalVenta.toFixed(2) ,\n        totalVenta      : this.state.totalVenta.toFixed(2)\n    })\n\n    console.log('TOTAL DE LA VENTA:'+this.state.totalVenta)\n}\n\ngenerarVentaInterna(){\n    confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className=\"page-content container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className='card'>\n                                <div className=\"card-body\">\n                                    <h1>¿Seguro que desea finalizar la venta?</h1>\n                                    <p>Puedes imprimir un comprobante de pago, o solo guardarlo en el sistema.</p>\n                                    <div className=\"form-group boton\">\n                                        <div className=\"row\">\n                                            <div className=\"col-lg-4 col-md-4\">\n                                                <button \n                                                    type=\"button\" \n                                                    className=\"btn waves-effect waves-light btn-block btn-success\"\n                                                    onClick={() => {\n                                                        this.fetchAgregarVenta(1);\n                                                        onClose();\n                                                    }}\n                                                >\n                                                        \n                                                        Imprimir\n                                                </button>\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-4\">\n                                                <button \n                                                    type=\"button\"\n                                                    onClick={() => {\n                                                        this.fetchAgregarVenta(0);\n                                                        onClose();\n                                                    }}\n                                                    className=\"btn waves-effect waves-light btn-block btn-info\">\n                                                        Guardar\n                                                </button>\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-4\">\n                                                <button \n                                                    type=\"button\" \n                                                    className=\"btn waves-effect waves-light btn-block btn-danger\">\n                                                        Cancelar\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    });\n}\n\nfetchAgregarVenta(imprimir){ //SI IMPRIMIR ES 1 IMPRIMIR, SI NO, NO IMPRIMIR\n    // console.log('DATOS ENVIADOS : --- ');\n    // console.log(this.state.tipoDocumentoCliente);\n    // console.log(this.state.numeroDocumentoCliente);\n    // console.log(this.state.nombreCliente);\n    // console.log(this.props.tipoComprobante);\n    // console.log(this.props.sucursalId);\n    // console.log(this.state.tipoMoneda);\n    // console.log(this.props.numeroVenta);\n    // console.log(this.state.descuentoVenta);\n    // console.log(this.state.igvVenta);\n    // console.log(this.state.subTotalVenta);\n    // console.log(this.state.totalVenta);\n    // console.log(this.state.observacionVenta);\n    // console.log(this.state.productosDetalleList);\n    // console.log('TOTAL DE DATOS ENVIADOS --- ');\n    // LA FUNCION AGREGA UN PRODUCTO TEMPORAL\n    cogoToast.loading(\n        <div>\n            <h4>GENERANDO VENTA INTERNA</h4>\n        </div>, \n        {\n            position: 'top-right'\n        }\n        \n    )\n    .then(() => {\n        fetch(config.api+`/venta/guardarVentaInterna`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token'            : csrf_token,\n                    'tipoDocumento'     : this.state.tipoDocumentoCliente,\n                    'numeroDocumento'   : this.state.numeroDocumentoCliente,\n                    'nombreCliente'     : this.state.nombreCliente,\n                    'tipoComprobante'   : this.props.tipoComprobante,\n                    'sucursalId'        : this.props.sucursalId,\n                    'tipoMoneda'        : this.state.tipoMoneda,\n                    'numeroVenta'       : this.props.numeroVenta,\n                    'dateFactura'       : '2019-11-11',\n                    'descuentoVenta'    : this.state.descuentoVenta,\n                    'igvVenta'          : this.state.igvVenta,\n                    'subTotalVenta'     : this.state.subTotalVenta,\n                    'totalVenta'        : this.state.totalVenta,\n                    'observacionVenta'  : this.state.observacionVenta,\n                    'detallesVenta'     : this.state.productosDetalleList,\n\n\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            console.log(data['response'])\n            if(data['response'] == true){\n\n                this.props.fetchVentaDataTabla(1, '','');\n                this.props.addNuevaVenta();\n                this.props.fechtDataNuevaVenta();\n\n                cogoToast.success(\n                    <div>\n                        <h4>VENTA REALIZADA CORRECTAMENTE</h4>\n                    </div>, \n                    {\n                    position: 'top-right'\n                    }\n                );\n\n                if(imprimir == 1){\n                    // let url = `http://localhost/api/imprimir/venta/`+data['idVenta'];\n                    let url = config.apiTicket+`/api/imprimir/venta/`+data['idVenta'];\n                    cogoToast.loading(\n                        <div>\n                            <h4>IMPRIMIENDO VENTA</h4>\n                        </div>, \n                        {\n                            position: 'top-right'\n                        }\n                        \n                    )\n                    .then(() => {\n                        fetch(\n                            url,\n                            {\n                                method: 'GET',\n                                // headers: {\n                                //     'Accept' : 'application/json',\n                                //     'Content-Type': 'application/json',\n                                //     // 'usuid'         : localStorage.getItem('usuid')\n                                // }\n                            }\n                        )\n                        .then(\n                            res => res.json()\n                        )\n                        .then(\n                            data => {\n                                if(data['respuesta']){\n                                    cogoToast.success(\n                                        <div>\n                                            <h4>COPIA DE VENTA FINALIZADA</h4>\n                                        </div>, \n                                        {\n                                        position: 'top-right'\n                                        }\n                                    );\n                                }else{\n                                    cogoToast.error(\n                                        <div>\n                                            <h4>NO SE PUDO CONECTAR CON LA IMPRESORA</h4>\n                                        </div>, \n                                        {\n                                        position: 'top-right'\n                                        }\n                                    );\n                                }\n                            }\n                        )\n                    });\n                }\n                \n\n            }else{\n                cogoToast.error(\n                    <div>\n                        <h4>HUBO UN PROBLEMA AL MOMENTO DE REALIZAR LA VENTA</h4>\n                    </div>, \n                    {\n                    position: 'top-right'\n                    }\n                );\n            }\n            \n        })\n    });\n    \n}\n\n\n\n\nrender(){\n    return(\n        \n<div className=\"col-lg-12 grid-margin stretch-card\">\n    <div className=\"card card-default\">\n        <div className=\"card-body\"> \n            <h6 className=\"card-title\">VENTA INTERNA:</h6>\n            <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_emitirBoleta\">\n                <div className=\"form-group\" >\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Metodo de pago </label>\n                            <div className=\"input-group\">\n                                <select \n                                    className=\"form-control\" \n                                    name=\"tipoPago\" \n                                    id=\"tipoPago\" \n                                    style={{width: '100%'}} \n                                    onChange={this.cambiarTipoPago}>\n                                    {/* ID DEL TIPO DE MONEDA */}\n                                    <option value=\"1\" > EFECTIVO   </option>\n                                    <option value=\"3\" > TARJETA   </option>\n\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h6 className=\"card-title\">CLIENTE:</h6>\n                <div className=\"form-group\" >\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Tipo de Documento: *</label>\n                            <div className=\"input-group\">\n                                <select \n                                    className=\"form-control\" \n                                    name=\"tipoDocumento\" \n                                    id=\"tipoDocumento\" \n                                    style={{width: '100%'}} \n                                    onChange={this.cambiarTipoDocumento}>\n                                    {/* CODIGO DEL TIPO DE COMPROBANTE EN VEZ DE ID */}\n                                    <option value=\"1\" > DNI   </option>\n                                    <option value=\"6\" > RUC   </option>\n                                    <option value=\"0\" > OTROS </option>\n\n                                </select>\n                            </div>\n                        </div>\n                        {\n                            this.state.tipoDocumentoCliente != 0\n                            ?<div className=\"col-9\">\n                                <div className=\"row\">\n                                    <div className=\"col-3\">\n                                        <label>N° de Documento: *</label>\n                                        <input type=\"number\" \n                                            className   = \"form-control\" \n                                            name        = \"numeroDocumento\" \n                                            id          = \"numeroDocumento\" \n                                            onChange    = {this.getCambioNumeroDocumento}\n                                            value       = {this.state.numeroDocumentoCliente}\n                                            autoFocus\n\n                                            />\n                                    </div>\n                                    <div className=\"col-5\">\n                                        <label>Nombre del cliente: *</label>\n                                        <input \n                                            type        = \"text\" \n                                            className   = \"form-control\" \n                                            name        = \"nombreCliente\" \n                                            id          = \"nombreCliente\"\n                                            value       = {this.state.nombreCliente}\n                                            onChange    = {this.getCambioNombreCliente}\n                                            />\n                                    </div>\n                                    <div className=\"col-2\">\n                                        <label>N° Ventas </label><br/>\n                                        <span>{this.state.numeroVentasRealizadas}</span>\n                                    </div>\n                                    <div className=\"col-2\">\n                                        <label>Total de ventas </label><br/>\n                                        <span>S/{this.state.totalVentasRealizadas}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            :null\n                        }\n                        \n                    </div>\n                </div>\n                <h6 className=\"card-title\">DETALLE DOCUMENTO:</h6>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <table className=\"table table-bordered\" id=\"tbl_products\">\n                            <thead>\n                                <tr>\n                                    <th width=\"20%;\">Codigo</th>\n                                    <th width=\"25%;\">Producto</th>\n                                    <th  width=\"10%;\">Cantidad</th>\n                                    <th width=\"2%;\">Disponible</th>\n                                    <th width=\"7%;\">Precio</th>\n                                    <th width=\"7%;\">Descuento</th>\n                                    <th>SubTotal</th>\n                                    <th>Total</th>\n                                    <th>Opciones</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {/* {\n                                    this.state.arrayProductosDetalle\n                                    ?this.state.arrayProductosDetalle.map((data)=>{\n                                       return(\n                                        <ProductoAddDetalleComponent key={data} number={data} eliminarProductoDetalle={this.eliminarProductoDetalle} buscarCodigoProducto={this.buscarCodigoProducto} />\n                                       ) \n                                    })\n                                    :null \n                                } */}\n                                {\n                                    \n                                    this.state.productosDetalleList\n                                    ?this.state.productosDetalleList.map((data, posicion)=>{\n                                       return(\n                                            <ProductoAddDetalleComponent \n                                                key                             ={data.idLista} \n                                                numero                          ={data.idLista}\n                                                posicion                        ={posicion}\n                                                codigo                          ={data.codigoProducto}\n                                                producto                        ={data.nombreProducto}\n                                                stock                           ={data.stockProducto}\n                                                precio                          ={data.precioProducto}\n                                                descuento                       ={data.totalDescuento}\n                                                subTotal                        ={data.subTotalProducto}\n                                                total                           ={data.totalProducto}\n                                                descuentoAplicado               ={data.descuentoAplicado}\n                                                variosDescuentos                ={data.variosDescuentos}\n                                                nuevoPrecioOferta               ={data.nuevoPrecioOferta}\n                                                calcularSubTotalTotalDetalle    ={this.calcularSubTotalTotalDetalle}\n                                                eliminarProductoDetalle         ={this.eliminarProductoDetalle} \n                                                buscarCodigoProducto            ={this.buscarCodigoProducto}\n                                                cambiarCodigo                   ={this.cambiarCodigo}\n                                            />\n                                       ) \n                                    })\n                                    :null\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                    \n                    <div className=\"col-12\">\n                        <br/>\n                        {\n                            this.state.cantidadProductosDetalle == 0\n                            ?<button type=\"button\" \n                                className=\"btn btn-success\" id=\"btnAddProduct\" onClick={()=>this.agregarProducto()} >\n                                <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO AL DETALLE\n                            </button>\n\n                            :<button type=\"button\" \n                                className=\"btn btn-warning\" id=\"btnAddProduct\" onClick={()=>this.agregarProducto(this.state.cantidadProductosDetalle - 1)} >\n                                <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO TEMPORAL\n                            </button>\n                        }\n                        {/* <button type=\"button\" \n                            className=\"btn btn-warning\" onClick={()=>this.verArray()} >\n                            <i className=\"mdi mdi-plus-circle\"></i>   Ver array\n                        </button> */}\n                        {\n                            this.state.cantidadProductosDetalle != 0\n                            ?<button type=\"button\" \n                                className=\"btn btn-warning\" onClick={() => this.modalBuscarProducto()} >\n                                <i className=\"mdi mdi-plus-circle\"></i>   Buscar producto\n                            </button>\n                            :null\n                        }\n                        <br/>\n                    </div>\n                </div><br/>\n                <div className=\"col-md-12\" style={{marginTop: '15px'}}>\n                    <div className=\"row\">\n                        <div className=\"col-sm-7\">\n                            <div className=\"content-group\">\n                                <h6>Observación:</h6>\n                                <textarea \n                                    className=\"form-control\" \n                                    name=\"observacionVenta\" \n                                    id=\"exampleTextarea1\" \n                                    rows=\"8\"\n                                    onChange={this.getCambioObservacion}\n                                    >{this.state.observacionVenta}</textarea>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-5\">\n                            <div className=\"content-group\">\n                                <h6>Resumen:</h6>\n                                <div className=\"table-responsive no-border\">\n                                    <table className=\"table\">\n                                        <tbody>\n                                            {/* <tr>\n                                                <th>Descuento realizado:</th>\n                                                <td className=\"text-right\">\n                                                    {/* S/. <span id=\"descuentoVentaTexto\">{this.state.descuentoVenta}</span> \n                                                    <input \n                                                        type        = \"text\" \n                                                        name        = \"descuentoVenta\"\n                                                        className   = \"form-control\"\n                                                        id          = \"descuentoVenta\" \n                                                        onChange    = {this.getCambioDescuentoVenta}\n                                                        onKeyDown   = {this.getCambioDescuentoVenta}\n                                                        value       = {this.state.descuentoVentaRealizado}/>\n                                                </td>\n                                            </tr> */}\n                                            <tr>\n                                                <th>Descuento Total:</th>\n                                                <td className=\"text-right\">\n                                                    S/. <span id=\"descuentoVentaTexto\">{this.state.descuentoVenta}</span>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <th>Subtotal:</th>\n                                                <td className=\"text-right\">\n                                                    S/. <span id=\"subTotalVentaTexto\">{this.state.subTotalVenta}</span>\n                                                    <input type=\"hidden\" name=\"subTotalVenta\" id=\"subTotalVenta\" value=\"0\"/>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <th>IGV: <span className=\"text-regular\">(18%)</span></th>\n                                                <td className=\"text-right\">\n                                                    S/. <span id=\"igvVentaTexto\">{this.state.igvVenta}</span>\n                                                    <input type=\"hidden\" name=\"igvVenta\" id=\"igvVenta\" value=\"0\"/>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <th>Total:</th>\n                                                <td className=\"text-right text-primary\"><h5 className=\"text-semibold\">\n                                                    S/. <span id=\"totalVentaTexto\">{this.state.totalVenta}</span></h5>\n                                                    <input type=\"hidden\" name=\"totalVenta\" id=\"totalVenta\" value=\"2\"/>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group boton\">\n                    <div className=\"row\">\n                        {/* <div className=\"col-6\">\n                            <button type=\"button\" \n                                className=\" addexis form-control btn btn-block btn-primary btn-lg\" \n                                id=\"emitirBoleta\">\n                                EMITIR BOLETA ELECTRÓNICA</button>\n                        </div> */}\n                        <div className=\"col-12\">\n                            <button type=\"button\" \n                                className=\" addexis form-control btn btn-block btn-success btn-lg\"\n                                onClick={()=>this.generarVentaInterna()}\n                                \n                                >\n                                Generar Venta Interna</button>\n                        </div>\n                    </div>\n                    \n                </div>\n            </form>\n        </div>\n    </div>\n\n    <Modal\n        size=\"xl\"\n        show={this.state.estadoa}\n        onHide={() => this.modalBuscarProducto()}            \n    >\n    <Modal.Header closeButton>\n        <Modal.Title id=\"example-custom-modal-styling-title\">\n            Buscar producto especifico\n        </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n        <div className=\"card card-default\">\n                    <div className=\"card-header cabezera\">\n                        <h4> Buscar producto especifico </h4>\n                    </div>\n                    <div className=\"modal-body\">\n                        \n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <h4 className=\"card-title\">Buscar</h4>\n                                    <div className=\"row\">\n                                        <div className=\"col-3\">\n                                            <label>Buscar Codigo</label>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control form-control-lg\" \n                                                name=\"bcodigo\" id=\"buscar_tb_codigo\"\n                                                onChange={this.handleChangeBuscador}\n                                            />\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <label>Buscar Marca</label>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control form-control-lg\" \n                                                name=\"bmarca\" \n                                                id=\"buscar_tb_marca\"\n                                                onChange={this.handleChangeBuscador}\n                                            />\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <label>Buscar Tipo</label>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control form-control-lg\" \n                                                name=\"btipo\" \n                                                id=\"buscar_tb_tipo\"\n                                                onChange={this.handleChangeBuscador}\n                                            />\n                                        </div>\n                                        <div className=\"col-3\">\n                                            <label>Buscar Nombre</label>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control form-control-lg\" \n                                                name=\"bnombre\" \n                                                id=\"buscar_tb_nombre\"\n                                                onChange={this.handleChangeBuscador}\n                                            />\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <label>Buscar Precio</label>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control form-control-lg\" \n                                                name=\"bprecio\" \n                                                id=\"buscar_tb_precio\"\n                                                onChange={this.handleChangeBuscador}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div> \n                        <div className=\"card-body\" id=\"agregarProductoDetalleModalBody\">\n                            <table className=\"table table-bordered dataTables_length\" id=\"tb_buscarProducto\" style={{width:'100%'}}>\n                                <thead>\n                                    <tr>\n                                        <th>Codigo</th>\n                                        <th>Marca</th>\n                                        <th>Tipo</th>\n                                        <th>Disponibles</th>\n                                        <th>Nombre</th>\n                                        <th>Precio</th>\n                                        <th>Seleccionar</th>\n                                    </tr>\n                                    {\n                                        this.state.productos_tb.data \n                                        ?this.state.productos_tb.data.map((task, posicion) =>{\n                                            return (\n                                                <tr key={task.idVentas}>\n                                                    <td>{task.codigoProducto}</td>\n                                                    <td>{task.marcaProducto}</td>\n                                                    <td>{task.tipoProducto}</td>\n                                                    <td>{task.disponiblesProducto}</td>\n                                                    <td>{task.nombreProducto}</td>\n                                                    <td>{task.precioProducto}</td>\n                                                    <td>\n                                                    <button \n                                                        className=\"btn btn-sm btn-primary ver\" \n                                                        type=\"button\" \n                                                        onClick={()=>this.seleccionarProductoTb(task.codigoProducto)}\n                                                       >\n                                                        <i className=\"mdi mdi-send\"></i></button>\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })   \n                                        : null\n                                      }\n                                </thead>\n                            </table>  \n                            <div className=\"container\">\n                                <div className=\"row justify-content-end\">\n                                    <div className=\"col-4\">\n                                        {\n                                            this.state.estadoBoton\n                                            ?this.state.estadoBoton.map(task =>{\n                                                return (\n                                                    <button key={task}\n                                                        className=\"btn btn-sm btn-secondary editar\" \n                                                        type=\"button\" \n                                                        onClick={()=>this.cambiarPagina(task)}>{task}</button>\n\n                                                );\n                                            })   \n                                            : null\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n    </Modal.Body>\n    </Modal>\n    \n    <Toast\n        style={{\n            position        : 'fixed',\n            top             : 20,\n            right           : 20,\n            zIndex          :1060,\n            backgroundColor : this.state.colorToast,\n            color           :'white'\n        }}\n        onClose={() => this.setState({\n            estadoToast: false\n        })}\n        show    ={this.state.estadoToast}\n        delay   ={2500}\n        autohide\n        >\n        <Toast.Body>\n        <h3>{this.state.mensajeToast}</h3>\n        </Toast.Body>\n    </Toast>\n\n    \n</div>\n\n)}}\n\nexport default NuevaVenta","import React from 'react'\nimport {Component} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport cogoToast from 'cogo-toast';\nimport config from '../../config'\n\nclass EliminarVenta extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            txt_motivoCancelar  : '',\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\n            colorToastSuccess   : 'rgba(76,208,76,0.7)'\n\n        }\n\n        this.confirmarEliminarVenta        = this.confirmarEliminarVenta.bind(this);\n        this.getCambioMotivoCancelar       = this.getCambioMotivoCancelar.bind(this);\n        this.fetchCancelarVenta            = this.fetchCancelarVenta.bind(this);\n    }\n\n    confirmarEliminarVenta(){\n        confirmAlert({\n            customUI: ({ onClose }) => {\n                return (\n                    <div className=\"page-content container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className='card'>\n                                    <div className=\"card-body\">\n                                        <h1>Cancelar Venta</h1>\n                                        <p>Recuerda que al cancelar una venta, los productos en esta regresan a su respectivo almacen</p>\n                                        <div className=\"form-group boton\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <label>Motivo de cancelar la venta</label>\n                                                    <textarea \n                                                        className   = \"form-control\" \n                                                        rows        = \"3\" \n                                                        placeholder = \"Motivo de cancelar la venta\"\n                                                        onChange    = {(e)=>this.getCambioMotivoCancelar(e)}\n                                                        name        = \"txt_motivoCancelar\"\n                                                    >\n                                                    </textarea>\n                                                </div>\n                                            </div><br></br>\n                                            \n                                            <div className=\"row\">\n                                                <div className=\"col-6\">\n                                                    <button \n                                                        type=\"button\"\n                                                        onClick={() => {\n                                                            this.fetchCancelarVenta();\n                                                            onClose();\n                                                        }}\n                                                        className=\"btn waves-effect waves-light btn-block btn-danger\">\n                                                            CANCELAR VENTA\n                                                    </button>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <button \n                                                        type=\"button\" \n                                                        onClick={() => {\n                                                            onClose();\n                                                        }}\n                                                        className=\"btn waves-effect waves-light btn-block btn-info\">\n                                                            SALIR\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n        });\n    }\n\n    getCambioMotivoCancelar(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    fetchCancelarVenta(){\n        let url = config.api+`/ventas/cancelar/venta/interna`;\n\n        cogoToast.loading(\n            <div>\n                <h4>CANCELANDO VENTA</h4>\n            </div>, \n            {\n                position: 'top-right'\n            }\n            \n        )\n        .then(() => {\n            fetch(url,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token' : csrf_token,\n                        'id'     : this.props.idVenta,\n                        'motivo' : this.state.txt_motivoCancelar\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(response => response.json())\n            .then(data => {\n    \n                if(data['respuesta'] == true){\n                    this.setState({\n                        txt_motivoCancelar  : '',\n                    })\n                    cogoToast.success(\n                        <div>\n                            <h4>VENTA CANCELADA CORRECTAMENTE</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n                    this.props.fetchVentaDataTabla(1, '', '');\n    \n                }else{\n                    cogoToast.error(\n                        <div>\n                            <h4>HUBO UN PROBLEMA AL CANCELAR LA VENTA</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n                }\n                \n            })\n            \n        });\n        \n    }\n    \n\n    render(){\n        return(\n            <button \n                style       = {{\"margin-right\":\"1em\"}}\n                type        = \"button\" \n                id          = \"btn_venta\"\n                onClick     = {this.confirmarEliminarVenta}\n                className   = \"btn btn-danger btn-rounded btn-fw\">\n                    <i className=\"mdi mdi-delete\"></i>\n            </button>\n         ) \n    }\n}\n\nexport default EliminarVenta","import React from 'react'\r\nimport {Component} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../config'\r\n\r\nclass ImprimirVenta extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            txt_motivoCancelar  : '',\r\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\r\n            colorToastSuccess   : 'rgba(76,208,76,0.7)'\r\n\r\n        }\r\n        this.fetchImprimirVenta       = this.fetchImprimirVenta.bind(this);\r\n    }\r\n\r\n    fetchImprimirVenta(){\r\n        let url = config.apiTicket+`/api/imprimir/venta/`+this.props.idVenta;\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>IMPRIMIENDO VENTA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'GET',\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>IMPRESIÓN CORRECTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                    this.props.fetchVentaDataTabla(1, '', '');\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>HUBO UN PROBLEMA AL IMPRIMIR LA VENTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <button \r\n                style       = {{marginLeft:'10px', background:'green'}}\r\n                type        = \"button\" \r\n                id          = \"btn_venta\"\r\n                onClick     = {this.fetchImprimirVenta}\r\n                className   = \"btn btn-danger btn-rounded btn-fw\">\r\n                    <i className=\"mdi mdi-printer\"></i>\r\n            </button>\r\n         ) \r\n    }\r\n}\r\n\r\nexport default ImprimirVenta","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {Component} from 'react';\nimport VentaBoleta from  './ventaBoleta';\nimport VentaFactura from './ventaFactura';\nimport NuevaVenta from './venta/nuevaVenta';\nimport EliminarVenta from './eliminarVenta'\nimport config from '../../config'\nimport ImprimirVenta from './ImprimirVenta';\n\nclass Venta extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n            venta_tb                : [],\n            addComponentFactura     : false,\n            addComponentBoleta      : false,\n            addComponentNuevaVenta  : false,\n            dataFacturaReady        : false,\n            dataBoletaReady         : false,\n            dataNuevaVentaReady     : false,\n            dataFactura             : {},\n            dataBoleta              : {},\n            dataNuevaVenta          : {},\n\n            txt_btn_venta           : 'Nueva Venta',\n            // DATOS A PASAR A UN COMPROBANTE ( VENTA, BOLETA, FACTURA, ETC.)\n            tipoComprobante         : '',\n            numeroVenta             : '',\n\n            // BUSCADOR\n            estadoBoton             : [],\n            numeroPagina            : 1,\n            inp_cliente             : '',\n            inp_numeroVenta         : '',\n\n\n\n\n\n        }\n        this.addFactura           = this.addFactura.bind(this);\n        this.addBoleta            = this.addBoleta.bind(this);\n        this.addNuevaVenta        = this.addNuevaVenta.bind(this);\n        this.fechtDataFactura     = this.fechtDataFactura.bind(this);\n        this.fechtDataBoleta      = this.fechtDataBoleta.bind(this);\n        this.fechtDataNuevaVenta  = this.fechtDataNuevaVenta.bind(this);\n        this.fetchVentaDataTabla  = this.fetchVentaDataTabla.bind(this);\n\n        this.getCambioNombreCliente = this.getCambioNombreCliente.bind(this);\n        this.getCambioNumeroVenta   = this.getCambioNumeroVenta.bind(this);\n    }\n\n\n\n\n    fechtDataFactura(){\n      fetch(\n          config.api+'/ventas/factura/serie',\n          {\n            method: 'GET',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json',\n                'usuid'         : localStorage.getItem('usuid')\n            }\n        }\n    )\n      .then(res => res.json())\n      .then(data => {\n          this.setState({dataFactura: data},()=>{\n            console.log(this.state.dataFactura)\n            this.setState({dataFacturaReady: true},()=>console.log(this.state.dataFacturaReady))\n                });\n        })\n    }\n    \n    fechtDataBoleta(){\n        fetch(\n            config.api+'/ventas/boleta/serie',\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({dataBoleta: data},()=>{\n              console.log(this.state.dataBoleta);\n              this.setState({dataBoletaReady: true},()=>console.log(this.state.dataBoletaReady))\n                  });\n          })\n    }\n\n    fechtDataNuevaVenta(){\n        fetch(config.api+'/ventas/venta/serie',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // '_token': csrf_token,\n                }),\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(res => res.json())\n        .then(data => {\n            console.log(\"datos primeros:\")\n            console.log(data);\n            this.setState({\n                sucursalId      : data['sucursalId'],\n                dataNuevaVenta  : data['tiposcomprobante']\n\n            },()=>{\n                console.log(this.state.dataNuevaVenta);\n                this.setState({\n                  dataNuevaVentaReady   : true,\n                  tipoComprobante       : this.state.dataNuevaVenta['id'],\n                  numeroVenta           : this.state.dataNuevaVenta['correlativo']\n                })\n            });\n        })\n    }\n\n    componentDidMount(){\n      this.fechtDataFactura();\n      this.fechtDataBoleta();\n      this.fechtDataNuevaVenta();\n      this.fetchVentaDataTabla(1, '', '');\n    }\n\n    addFactura() {\n      this.setState({\n        addComponentBoleta: false,\n        addComponentFactura : !this.state.addComponentFactura\n\n      })\n    }\n    addBoleta() {\n      this.setState({\n        addComponentFactura : false,\n        addComponentBoleta : !this.state.addComponentBoleta\n\n      })\n    }\n    addNuevaVenta() {\n        console.log(this.state.tipoComprobante)\n        console.log(this.state.numeroVenta)\n        console.log(this.state.sucursalId)\n        let btn_venta = document.querySelector('#btn_venta');\n        let txt_btn = '';\n        if(this.state.addComponentNuevaVenta == true){\n            btn_venta.classList.remove('btn-danger');\n            btn_venta.classList.add('btn-success');\n            txt_btn = \"Nueva Venta\";\n        }else{\n            btn_venta.classList.remove('btn-success');\n            btn_venta.classList.add('btn-danger');\n            txt_btn = \"Cancelar Venta\";\n            \n        }\n        \n        this.setState({\n          addComponentFactura       : false,\n          addComponentBoleta        : false,\n          addComponentNuevaVenta    : !this.state.addComponentNuevaVenta,\n          txt_btn_venta             : txt_btn \n  \n        })\n    }\n\n    fetchVentaDataTabla(number, cliente, numeroComprobante){\n        fetch(\n            config.api+`/ventas/tb_ventas?page=${number}&bcliente=${cliente}&bnumeroComprobante=${numeroComprobante}`,\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                venta_tb        : data,\n                numeroPagina    : number\n            },()=>{\n                this.agregarBotones()\n            });\n\n        })\n    }\n\n    getCambioNombreCliente(e){\n        const {name , value} = e.target;\n        this.setState({\n            inp_cliente : value\n        })\n        this.fetchVentaDataTabla(this.state.numeroPagina, value, this.state.inp_numeroVenta)\n    }\n\n    getCambioNumeroVenta(e){\n        const {name , value} = e.target;\n        this.setState({\n            inp_numeroVenta : value\n        })\n        this.fetchVentaDataTabla(this.state.numeroPagina, this.state.inp_cliente, value)\n    }\n\n    agregarBotones(){\n        let z = this.state.venta_tb.last_page;\n        let x = [];\n        if(z){\n            for(let i = 1 ; i <= z ; i++){\n                x.push(i);\n            }\n            this.setState({\n                estadoBoton: x\n            })\n        }\n    }\n\n    render(){\n      return(\n            <div className=\"row\">\n                <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h6 className=\"card-title\">Generar tipo de venta</h6>\n                          {/* <button type=\"button\" id= \"btn_factura\" onClick={()=>this.addFactura()}\n                              className=\"btn btn-primary btn-rounded btn-fw desactivado\">\n                                  <span id=\"textFactura\">FACTURA ELECTRÓNICA</span></button>\n                          <button type=\"button\" id= \"btn_boleta\" onClick={()=>this.addBoleta()}\n                              className=\"btn btn-success btn-rounded btn-fw desactivado\">\n                                  <span id=\"textBoleta\">BOLETA DE VENTA ELECTRÓNICA</span>\n                            </button> */}\n\n                            <button type=\"button\" id= \"btn_venta\" onClick={()=>this.addNuevaVenta()} //miomio\n                                className=\"btn btn-success btn-rounded btn-fw desactivado\">\n                                  <span id=\"textBoleta\">{this.state.txt_btn_venta} </span>\n                            </button>\n                      </div>\n                  </div>\n               </div>\n\n              { this.state.addComponentFactura     && this.state.dataFacturaReady    && <VentaFactura  dataFactura={this.state.dataFactura}  />}\n              { this.state.addComponentBoleta      && this.state.dataBoletaReady     && <VentaBoleta   dataBoleta={this.state.dataBoleta} />}\n              { this.state.addComponentNuevaVenta  && \n                <NuevaVenta \n                    tipoComprobante     = {this.state.tipoComprobante} \n                    numeroVenta         = {this.state.numeroVenta} \n                    sucursalId          = {this.state.sucursalId} \n                    addNuevaVenta       = {this.addNuevaVenta}\n                    fetchVentaDataTabla = {this.fetchVentaDataTabla}\n                    fechtDataNuevaVenta = {this.fechtDataNuevaVenta}\n                />\n              }\n\n\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h4 className=\"card-title\">Buscar</h4>\n                          {/* @csrf */}\n                          <div className=\"row\">\n                              <div className=\"col-3\">\n                                  <label>Cliente</label>\n                                  <input \n                                    type        = \"text\" \n                                    className   = \"form-control form-control-lg\" \n                                    name        = \"buscar_tb_cliente\" \n                                    id          = \"buscar_tb_cliente\"\n                                    value       = {this.state.inp_cliente}\n                                    onChange = {this.getCambioNombreCliente}\n                                    />\n                              </div>\n                              {/* <div className=\"col-3\">\n                                  <label>Tipo de comprobante</label>\n                                  <select className=\"form-control\" name =\"buscar_tb_comprobante\" id=\"buscar_tb_comprobante\">\n                                      <option value=\"\">SELECCIONA UN COMPROBANTE</option>\n                                      <option value=\"BOLETA\">BOLETA</option>\n                                      <option value=\"FACTURA\">FACTURA</option>\n                                  </select>\n                              </div> */}\n                              <div className=\"col-3\">\n                                  <label>Numero de comprobante</label>\n                                  <input \n                                    type        = \"text\" \n                                    className   = \"form-control form-control-lg\" \n                                    name        = \"buscar_tb_numeroComprobante\" \n                                    onChange    = {this.getCambioNumeroVenta}\n                                    value       = {this.state.inp_numeroVenta}\n                                    id=\"buscar_tb_numeroComprobante\"/>\n                              </div>\n                              <div className=\"col-3\">\n                                  <label>Filtro por Fechas</label>\n                                  <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"buscar_tb_fecnumeroComprobante\"\n                                    id=\"buscar_tb_fecnumeroComprobante\" defaultValue=''/>\n                              </div>\n\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h6 className=\"card-title\">Comprobantes</h6>\n                          <table id=\"tb_ventas\" className=\"table table-striped\" style={{width:'100%'}}>\n                              <thead>\n                                  <tr>\n                                      <th>#</th>\n                                      <th>Fecha Emisión</th>\n                                      <th>Cliente</th>\n                                      <th>Tipo Comprobante</th>\n                                      <th>Número</th>\n                                      <th>Estado</th>\n                                      <th>SubTotal</th>\n                                      <th>Total</th>\n                                      <th colSpan=\"2\">Acciones</th>\n                                  </tr>\n                                      {\n                                        this.state.venta_tb.data \n                                        ?this.state.venta_tb.data.map((task, posicion) =>{\n                                            return (\n                                                <tr key={task.idVentas}>\n                                                    <td>{posicion}</td>\n                                                    <td>{task.fechaVentas}</td>\n                                                    <td>{task.nombreClientes}</td>\n                                                    <td>\n                                                        {task.nombreTiposcomprobante}<br/>\n                                                        {\n                                                            task.tipoMoneda_id == 3\n                                                            ?<div style={{color:'blue'}}>TARJETA</div>\n                                                            :<div style={{color:'green'}}>EFECTIVO</div>\n                                                        }\n                                                    </td>\n                                                    <td>{task.numeroVentas}</td>\n                                                    <td>{task.estadoSunatVentas}</td>\n                                                    <td>{task.subTotalVentas}</td>\n                                                    <td>{task.totalVentas}</td>\n\n                                                    <td>\n                                                        {\n                                                            task.estadoSunatVentas == 2\n                                                            ?<button \n                                                                type=\"button\" \n                                                                className=\"btn waves-effect waves-light btn-rounded btn-danger\">\n                                                                    VENTA CANCELADA\n                                                            </button>\n\n                                                            :<EliminarVenta \n                                                                key                 = {task.idVentas} \n                                                                idVenta             = {task.idVentas}\n                                                                fetchVentaDataTabla = {this.fetchVentaDataTabla}\n                                                            />\n                                                        }\n                                                        \n                                                        <a \n                                                            // href={'/ventas/pdf/'+task.idVentas} //ojo\n                                                            href={config.api+'/ventas/pdf/'+task.idVentas} //ojo\n                                                            target=\"_blank\"\n                                                            className=\"btn btn-rounded btn-fw btn-primary ver\" \n                                                            type=\"button\" >\n                                                                <i className=\"mdi mdi-eye\"></i>\n                                                        </a>\n                                                        \n                                                        <ImprimirVenta \n                                                            key                 = {task.idVentas} \n                                                            idVenta             = {task.idVentas}\n                                                            fetchVentaDataTabla = {this.fetchVentaDataTabla}\n                                                        />\n                                                        \n                                                    </td>\n                                                </tr>\n                                            );\n                                        })\n                                        : null\n                                      }\n\n                              </thead>\n                          </table>\n                          <div className=\"container\">\n                            <div className=\"row justify-content-end\">\n                                <div className=\"col-4\">\n                                    {\n                                        this.state.estadoBoton\n                                        ?this.state.estadoBoton.map(task =>{\n                                            return (\n                                                <button key={task}\n                                                    className=\"btn btn-sm btn-secondary editar\" \n                                                    type=\"button\" \n                                                    onClick={()=>this.fetchVentaDataTabla(task, this.state.inp_cliente, this.state.inp_numeroVenta)}>{task}</button>\n\n                                            );\n                                        })   \n                                        : null\n                                    }\n                                </div>\n                            </div>\n                         </div>\n                      </div>\n                  </div>\n              </div>\n\n            </div>\n\n)\n}}\n\nexport default Venta\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {Component} from 'react';\nimport config from '../../../config'\n\nclass VentasDetalladas extends Component {\n    constructor(){\n        super();\n        this.state ={\n            tb_venta_detallada : [],\n\n            estadoBoton        : [],\n            numeroPagina       : 1,\n            bcodProduct        : '',\n            bnumeroComprobante : '',\n            bdateOne           : '',\n            bdateTwo           : '',\n            \n\n        }\n\n        this.fetchTbVentaDetallada  = this.fetchTbVentaDetallada.bind(this);\n        this.getCambioCodProducto   = this.getCambioCodProducto.bind(this);\n        this.getCambioNumeroVenta   = this.getCambioNumeroVenta.bind(this);\n        this.getCambioDateOne       = this.getCambioDateOne.bind(this);\n        this.getCambioDateTwo       = this.getCambioDateTwo.bind(this);\n\n    }\n\n    fetchTbVentaDetallada(numeroPag, codProduct, numeroComprobante, dateOne, dateTwo){\n        fetch(\n            config.api+`/ventas/tb_ventas_detalladas?page=${numeroPag}&bcodProduct=${codProduct}&bnumeroComprobante=${numeroComprobante}&dateOne=${dateOne}&dateTwo=${dateTwo}`,\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n            .then(\n                res => res.json(),\n                \n            )\n            .then(data => {\n                this.state.tb_venta_detallada = data\n                this.setState({\n                    tb_venta_detallada  : this.state.tb_venta_detallada,\n                    numeroPagina        : numeroPag\n                },()=>{\n                  this.agregarBotones()\n                });\n\n        })\n    }\n\n\n    componentDidMount(){\n        this.fetchTbVentaDetallada(1, '', '', '', '');\n    }\n    \n    agregarBotones(){\n        let z = this.state.tb_venta_detallada.last_page;\n        let x = [];\n        if(z){\n            for(let i = 1 ; i <= z ; i++){\n                x.push(i);\n            }\n            this.setState({\n                estadoBoton: x\n            })\n        }\n    }\n\n    getCambioCodProducto(e){\n        const {name , value} = e.target;\n        this.setState({\n            bcodProduct : value\n        })\n        this.fetchTbVentaDetallada(\n            this.state.numeroPagina, \n            value, \n            this.state.bnumeroComprobante,\n            this.state.bdateOne,\n            this.state.bdateTwo,\n\n        )\n    }\n\n    getCambioNumeroVenta(e){\n        const {name , value} = e.target;\n        this.setState({\n            bnumeroComprobante : value\n        })\n        this.fetchTbVentaDetallada(\n            this.state.numeroPagina, \n            this.state.bcodProduct, \n            value,\n            this.state.bdateOne,\n            this.state.bdateTwo,\n\n        )\n    }\n\n    getCambioDateOne(e){\n        const {name , value} = e.target;\n        this.setState({\n            bdateOne : value\n        })\n        this.fetchTbVentaDetallada(\n            this.state.numeroPagina, \n            this.state.bcodProduct, \n            this.state.bnumeroComprobante,\n            value,\n            this.state.bdateTwo,\n\n        )\n    }\n\n    getCambioDateTwo(e){\n        const {name , value} = e.target;\n        this.setState({\n            bdateTwo : value\n        })\n        this.fetchTbVentaDetallada(\n            this.state.numeroPagina, \n            this.state.bcodProduct, \n            this.state.bnumeroComprobante,\n            this.state.bdateOne,\n            value,\n\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h4 className=\"card-title\">Buscar</h4>\n                          {/* @csrf */}\n                          <div className=\"row\">\n                              <div className=\"col-3\">\n                                  <label>Codigo Producto</label>\n                                  <input \n                                    type        = \"text\" \n                                    className   = \"form-control form-control-lg\" \n                                    value       = {this.state.bcodProduct}\n                                    onChange    = {this.getCambioCodProducto}\n                                    />\n                              </div>           \n                              <div className=\"col-3\">\n                                  <label>Numero de comprobante</label>\n                                  <input \n                                    type        = \"text\" \n                                    className   = \"form-control form-control-lg\" \n                                    value       = {this.state.bnumeroComprobante}\n                                    onChange    = {this.getCambioNumeroVenta}\n                                    />\n                              </div>\n                              <div className=\"col-3\">\n                                  <label>Desde (AAAA-MM-dd)</label>\n                                  <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    value        = {this.state.bdateOne}\n                                    onChange     = {this.getCambioDateOne}\n                                    />\n                              </div>\n                              <div className=\"col-3\">\n                                  <label>Hasta (AAAA-MM-dd)</label>\n                                  <input \n                                    type         =  \"text\" \n                                    className    =  \"form-control form-control-lg\" \n                                    value        = {this.state.bdateTwo}\n                                    onChange     = {this.getCambioDateTwo}\n                                    />\n                              </div>\n\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                          <h6 className=\"card-title\">Venta Detallada</h6>\n                          <table id=\"tb_ventas\" className=\"table table-striped\" style={{width:'100%'}}>\n                              <thead>\n                                  <tr>\n                                      <th>Sucursal</th>\n                                      <th>Fecha Emisión</th>\n                                      <th>Tipo Comprobante</th>\n                                      <th>N° Venta</th>\n                                      <th>Codigo Producto</th>\n                                      <th>Nombre Producto</th>\n                                      <th>Precio</th>\n                                      <th>Cantidad</th>\n                                      <th>Descuento</th>\n                                      <th>SubTotal</th>\n                                      <th>Total</th>\n                                  </tr>\n                                      {\n                                        this.state.tb_venta_detallada.data \n                                        ?this.state.tb_venta_detallada.data.map((task, posicion) =>{\n                                            return (\n                                                <tr key={task.idDetalleVenta}>\n                                                    <td>{task.nombreSucursal}</td>\n                                                    <td>{task.fechaVentas}</td>\n                                                    <td>{task.nombreTiposcomprobante}</td>\n                                                    <td>{task.numeroVentas}</td>\n                                                    <td>{task.codigoProducto}</td>\n                                                    <td>{task.nombreProducto}</td>\n                                                    <td>{task.precioProducto}</td>\n                                                    <td>{task.cantidadDetalleVenta}</td>\n                                                    <td>{task.descuentoDetalleVenta}</td>\n                                                    <td>{task.subtotalDetalleVenta}</td>\n                                                    <td>{task.totalDetalleVenta}</td>\n\n                                                    \n                                                </tr>\n                                            );\n                                        })\n                                        : null\n                                      }\n\n                              </thead>\n                          </table>\n                          <div className=\"container\">\n                            <div className=\"row justify-content-end\">\n                                <div className=\"col-4\">\n                                    {\n                                        this.state.estadoBoton\n                                        ?this.state.estadoBoton.map(task =>{\n                                            return (\n                                                <button key={task}\n                                                    className=\"btn btn-sm btn-secondary editar\" \n                                                    type=\"button\" \n                                                    onClick={()=>this.fetchTbVentaDetallada(\n                                                        task, \n                                                        this.state.bcodProduct, \n                                                        this.state.bnumeroComprobante,\n                                                        this.state.bdateOne,\n                                                        this.state.bdateTwo\n                                                        )}>{task}</button>\n\n                                            );\n                                        })   \n                                        : null\n                                    }\n                                </div>\n                            </div>\n                         </div>\n                      </div>\n                  </div>\n              </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default VentasDetalladas\n","import React, { Component } from 'react'\nimport cogoToast from 'cogo-toast';\nimport config from '../../../config'\n\nclass ModalDeclararTransferencia extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n            codigoProductoEscaneado     : '',\n            idProductoEscaneado         : 0,\n            nombreProductoEscaneado     : '',\n            stockProductoEscaneado      : 0,\n            precioProductoEscaneado     : 0,\n\n            idOrigen                    : '',\n            idDestino                   : '',\n            cantidadTransferir          : '',\n            motivoTransferencia         : '',\n            stockDespuesOrigen          : '',\n            \n\n        }\n\n        \n        this.getCambioCodigo        = this.getCambioCodigo.bind(this);\n        this.fetchCodigoProducto    = this.fetchCodigoProducto.bind(this);\n\n        this.getCambioCantidadTransferir    = this.getCambioCantidadTransferir.bind(this);\n        this.getCambioMotivoTransferencia   = this.getCambioMotivoTransferencia.bind(this);\n        this.getCambio                      = this.getCambio.bind(this);\n        this.fetchCrearTransferencia        = this.fetchCrearTransferencia.bind(this);\n        \n\n    }    \n\n    componentDidMount(){\n        this.setState({\n            idOrigen    : this.props.sucursalesUsuario[0]['id'],\n            idDestino   : this.props.sucursales[0]['id']\n        })\n    }\n\n    getCambioCodigo(e)\n    {\n        const {name , value} = e.target;\n        this.setState({\n            codigoProductoEscaneado : value\n        })\n        if (e.key === 'Enter') {\n            this.fetchCodigoProducto(value);\n        }\n\n    }\n\n    getCambioCantidadTransferir(e)\n    {\n        const {name , value} = e.target;\n        this.setState({\n            cantidadTransferir : value\n        })\n    }\n    \n    fetchCodigoProducto(codigo){\n        cogoToast.loading(\n            <div>\n                <h4>BUSCANDO PRODUCTO</h4>\n            </div>, \n            {\n                position: 'top-right'\n            }\n            \n        ).then(() => {\n            fetch(config.api+`/producto/buscar`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token'        : csrf_token,\n                        codigoProducto  : codigo\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(response => response.json())\n            .then(data => {\n                if(data['response'] == true){\n                    \n                    var producto = data['producto'];\n                    this.setState({\n                        idProductoEscaneado     : producto['id'],\n                        nombreProductoEscaneado : producto['nombre'],\n                        stockProductoEscaneado  : producto['cantidad'],\n                        precioProductoEscaneado : producto['precio'],\n                    })\n\n                    cogoToast.success(\n                        <div>\n                            <h4>PRODUCTO ESCANEADO CORRECTAMENTE</h4>\n                            <p>{producto['nombre']}</p>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n\n\n                }else{\n                    cogoToast.error(\n                        <div>\n                            <h4>EL CODIGO DE ESE PRODUCTO NO EXISTE</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n                }\n                \n            })\n        })\n        \n    }\n\n    getCambioMotivoTransferencia(e){\n        const {name , value} = e.target;\n        \n        this.setState({\n            motivoTransferencia  : value\n        })\n    }\n\n    fetchCrearTransferencia(){\n        this.props.mostrarModalDeclararTransferencia()\n\n        cogoToast.loading(\n            <div>\n                <h4>TRANSFIRIENDO PRODUCTO</h4>\n            </div>, \n            {\n                position: 'top-right'\n            }\n            \n        ).then(() => {\n            fetch(config.api+`/almacen/transferencias/crear`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token'                : csrf_token,\n                        'idOrigen'              : this.state.idOrigen,\n                        'idDestino'             : this.state.idDestino,\n                        'idProducto'            : this.state.idProductoEscaneado,\n                        'codigoProducto'        : this.state.codigoProductoEscaneado,\n                        'cantidad'              : this.state.cantidadTransferir,\n                        'motivo'                : this.state.motivoTransferencia,\n                        'stockAntesOrigen'      : this.state.stockProductoEscaneado,\n                        'stockDespuesOrigen'    : this.state.stockProductoEscaneado + this.state.cantidadTransferir\n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(response => response.json())\n            .then(data => {\n                if(data['respuesta'] == true){\n                    \n                    this.props.fetchSucursalesUsuario()\n                    this.props.fetchSucursales()\n\n                    cogoToast.success(\n                        <div>\n                            <h4> {data['mensaje']}   </h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n\n\n                }else{\n                    cogoToast.error(\n                        <div>\n                            <h4>{data['mensaje']}</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n                }\n                \n            })\n        })\n        \n    }\n\n    getCambio (e){\n        const {name , value} = e.target;\n        this.setState({\n            [name] : value\n\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"card card-default\">\n               <div className=\"modal-body\">\n                   <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <label>ORIGEN</label>\n                                    <div className=\"input-group\">\n                                           <select \n                                            className   = \"form-control\"\n                                            name        = \"idOrigen\"\n                                            onChange    = {this.getCambio}\n                                            >\n                                               {\n                                                   this.props.sucursalesUsuario \n                                                   ?this.props.sucursalesUsuario.map(element => {\n                                                       return (\n                                                           <option key = {element.id} value={element.id}  >{element.nombre}</option>\n                                                           );\n                                                   })\n                                                   :null\n                                               }\n                                           </select>\n                                       </div>\n                                </div>\n                                <div className=\"col-6\">\n                                    <label>DESTINO</label>\n                                    <div className=\"input-group\">\n                                        <select \n                                            className   = \"form-control\" \n                                            name        = \"idDestino\"\n                                            onChange    = {this.getCambio}\n                                        >\n                                            {\n                                                this.props.sucursales \n                                                ?this.props.sucursales.map(element => {\n                                                    return (\n                                                        <option key = {element.id} value={element.id}  >{element.nombre}</option>\n                                                        );\n                                                })\n                                                :null\n                                            }\n                                            \n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group\" >\n                                <div className=\"row\">\n                                    <div className=\"col-9\">\n                                        <label>Codigo</label>\n                                        <input \n                                            type        = \"text\" \n                                            className   = \"form-control\" \n                                            name        = \"codigoProductoEscaneado\" \n                                            id          = \"codigoProductoEscaneado\"\n                                            onChange    = {this.getCambioCodigo}\n                                            onKeyDown   = {this.getCambioCodigo}\n                                            autoFocus\n                                            value       = {this.state.codigoProductoEscaneado} \n                                        />\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <label>Cantidad</label>\n                                        <input \n                                            type        = \"text\" \n                                            className   = \"form-control\" \n                                            onChange    = {this.getCambioCantidadTransferir}\n                                            value       = {this.state.cantidadTransferir} \n                                            \n                                        />\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-7\">\n                                        <label>Nombre del producto</label>\n                                        <h4 className=\"card-title\"> {this.state.nombreProductoEscaneado} </h4>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <label>Stock</label>\n                                        <h4 className=\"card-title\"> \n                                            {this.state.stockProductoEscaneado} - {this.state.cantidadTransferir} = {this.state.stockProductoEscaneado - this.state.cantidadTransferir}\n                                        </h4>\n                                    </div>\n                                    <div className=\"col-2\">\n                                        <label>Precio</label>\n                                        <h4 className=\"card-title\"> S/{this.state.precioProductoEscaneado} </h4>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <label>MOTIVO (opcional)</label>\n                                        <textarea \n                                            className   = \"form-control\" \n                                            rows        = \"3\" \n                                            placeholder = \"Motivo\"\n                                            onChange    = {this.getCambioMotivoTransferencia}\n                                            value       = {this.state.motivoTransferencia}\n                                        >\n\n                                        </textarea>\n                                    </div>                                        \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group boton\">\n                            <button \n                            type=\"button\" \n                            className=\"addexis form-control btn btn-block btn-success btn-lg\" \n                            onClick={() => this.fetchCrearTransferencia()}\n                            >\n                            TRANSFERIR</button>\n                        </div>\n                    </div>\n               </div>\n           </div>\n        );\n    }\n}\n\nexport default ModalDeclararTransferencia","import React from 'react'\nimport {Component} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport cogoToast from 'cogo-toast';\nimport config from '../../../config'\n\nclass TB_Transferencias extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            idTransferencia : 0\n        }\n\n        this.confirmarEliminarTransferencia = this.confirmarEliminarTransferencia.bind(this);\n        this.fetchEliminarTransferencia     = this.fetchEliminarTransferencia.bind(this);\n\n    }\n\n    confirmarEliminarTransferencia(idTransferencia){\n        this.setState({\n            idTransferencia : idTransferencia\n        })\n\n        confirmAlert({\n            title: 'ELIMINAR TRANSFERENCIA',\n            message: 'Una vez eliminado no hay forma de recuperarlo',\n            buttons: [\n              {\n                label: 'ELIMINAR',\n                onClick: this.fetchEliminarTransferencia\n              },\n              {\n                label: 'CANCELAR',\n                onClick: console.log(\"\")\n              }\n            ]\n        });\n    }\n\n    fetchEliminarTransferencia(){\n        console.log(this.state.idTransferencia)\n        let url = config.api+`/almacen/transferencias/eliminar`;\n        cogoToast.loading(\n            <div>\n                <h4>ELIMINANDO TRANSFERENCIA</h4>\n            </div>, \n            {\n                position: 'top-right'\n            }\n            \n        )\n        .then(() => {\n            fetch(url,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        // '_token'            : csrf_token,\n                        'idTransferencia'   : this.state.idTransferencia\n                        \n                    }),\n                    headers: {\n                        'Accept' : 'application/json',\n                        'Content-Type': 'application/json',\n                        'usuid'         : localStorage.getItem('usuid')\n                    }\n                }\n            )\n            .then(response => response.json())\n            .then(data => {\n    \n                if(data['respuesta'] == true){\n\n                    cogoToast.success(\n                        <div>\n                            <h4>{data['mensaje']}</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n\n                    this.props.fetchTransferencias(1, '', '');\n    \n                }else{\n                    cogoToast.error(\n                        <div>\n                            <h4>{data['mensaje']}</h4>\n                        </div>, \n                        {\n                          position: 'top-right'\n                        }\n                    );\n                }\n                \n            })\n            \n        });\n        \n    }\n\n    render(){\n        return(\n            // <div className=\"row\">\n            //     <Buscadores_tb_transferencias \n                                    \n            //     />\n\n                <div className=\"col-lg-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h6 className=\"card-title\">REGISTRO DE TRANSFERENCIAS:</h6>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\n                                            <thead>\n                                                <tr>\n                                                    <th>ORIGEN</th>\n                                                    <th>DESTINO</th>\n                                                    <th>CODIGO PRODUCTO</th>\n                                                    <th>PRODUCTO</th>\n                                                    <th>CANTIDAD</th>\n                                                    <th>OPCIONES</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.props.tb_transferencias\n                                                    ?this.props.tb_transferencias.map((data, posicion)=>{\n                                                        return(\n                                                            <tr key={data.idTransferencia}>\n                                                                <td>\n                                                                    {data.origenTransferencia}\n                                                                </td>\n                                                                <td>\n                                                                    {data.destinoTransferencia}\n                                                                </td>\n                                                                <td>\n                                                                    {data.codigoProducto}\n                                                                </td>\n                                                                <td>\n                                                                    {data.nombreProducto}\n                                                                </td>\n                                                                <td>\n                                                                    {data.cantidadTransferida}\n                                                                </td>\n\n                                                                <td>\n                                                                    <div className=\"button-group\">\n                                                                        {/* <button \n                                                                            type=\"button\" \n                                                                            class=\"btn waves-effect waves-light btn-rounded btn-primary\"\n                                                                        >\n                                                                                <i className=\"mdi mdi-eye\"></i>\n                                                                        </button> */}\n                                                                        \n                                                                        <button \n                                                                            type        = \"button\" \n                                                                            id          = \"btn_eliminar_transferencia\"\n                                                                            onClick     = {\n                                                                                () => this.confirmarEliminarTransferencia(data.idTransferencia)\n                                                                            }\n\n                                                                            className   = \"btn waves-effect waves-light btn-rounded btn-danger\">\n                                                                                <i className=\"mdi mdi-delete\"></i>\n                                                                        </button>\n                                                                    </div>\n                                                                </td>\n                                                                \n                                                            </tr>\n                                                        )\n                                                    })\n                                                    :null\n                                                }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    <br></br>\n                                    <div className=\"container\">\n                                        <div className=\"row justify-content-end\">\n                                            <div className=\"col-4\">\n                                                {\n                                                    this.props.estadoBoton\n                                                    ?this.props.estadoBoton.map(task =>{\n                                                        return (\n                                                            <button \n                                                                key         = {task}\n                                                                className   = \"btn btn-sm btn-secondary\" \n                                                                type        = \"button\" \n                                                                onClick     = {()=>this.props.fetchTransferencias(task, \"\", \"\")}>\n                                                                    {task}\n                                                            </button>\n                                                        );\n                                                    })   \n                                                    : null\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>   \n                    </div>    \n                </div>\n            // </div>\n            \n            \n         ) \n    }\n}\n\nexport default TB_Transferencias","import React from 'react'\nimport {Component} from 'react';\n\nclass Buscadores_tb_transferencias extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n\n\n\n        }\n\n    }\n\n    componentDidMount(){        \n\n    }\n\n    render(){\n        return(\n            <div className=\"col-lg-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Buscar</h4>\n                        <div className=\"row\">\n                            <div className=\"col-3\">\n                                <label>Buscar Codigo</label>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                />\n                            </div>\n                            <div className=\"col-3\">\n                                <label>Buscar Marca</label>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                />\n                            </div>\n                            <div className=\"col-3\">\n                                <label>Buscar Tipo</label>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                />\n                            </div>\n                            <div className=\"col-3\">\n                                <label>Buscar Nombre</label>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n         ) \n    }\n}\n\nexport default Buscadores_tb_transferencias","import React, { Component } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport ModalDeclararTransferencia from './modalDeclararTransferencia/index'\nimport TB_Transferencias from './tabla/tb_transferencias'\nimport Buscadores_tb_transferencias from './tabla/buscadores_tb_transferencias'\nimport agregarBotones from '../extras/agregarBotones'\nimport config from '../../config'\n\nclass indexTransferencias extends Component {\n    constructor(){\n        super();\n        this.state ={\n            mostrarModalDeclararTransferencia   : false,\n            sucursalesUsuario                   : [],\n            sucursales                          : [],\n\n\n            tb_transferencias  : [],\n            numeroPagina       : '',\n            estadoBoton        : []\n\n        }\n\n        this.mostrarModalDeclararTransferencia = this.mostrarModalDeclararTransferencia.bind(this);\n        \n        this.fetchSucursalesUsuario = this.fetchSucursalesUsuario.bind(this);\n        this.fetchSucursales        = this.fetchSucursales.bind(this);\n        this.fetchTransferencias    = this.fetchTransferencias.bind(this);\n    }\n\n    mostrarModalDeclararTransferencia(){\n        this.setState({\n            mostrarModalDeclararTransferencia : !this.state.mostrarModalDeclararTransferencia\n        })\n    }\n    \n    componentDidMount(){\n        this.fetchSucursalesUsuario();\n        this.fetchSucursales();\n        this.fetchTransferencias(1, '', '');\n    }\n\n    fetchSucursalesUsuario()\n    {\n        fetch(\n            config.api+'/consultar/sucursales/usuario',\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n                .then(\n                    res => res.json()\n                )\n                .then(\n                    data => {\n                        this.setState({\n                            sucursalesUsuario: data.sucursales\n                        });\n                        \n        \n                    }\n                )\n                \n    }\n\n    fetchSucursales()\n    {\n        fetch(\n            config.api+'/consultar/sucursales',\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n                .then(\n                    res => res.json()\n                )\n                .then(\n                    data => {\n                        this.setState({\n                            sucursales: data.sucursales\n                        });\n\n                    }\n                )\n    }\n\n    fetchTransferencias(number, cliente, numeroComprobante){\n        let url = config.api+`/almacen/transferencias/tb_transferencias?page=${number}&idSucursal=`;\n        fetch(\n            url,\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(\n            res => res.json()\n        )\n        .then(\n            data => {\n\n                this.setState({\n                    tb_transferencias   : data['tb_transferencias'].data,\n                    numeroPagina        : number\n                },()=>{\n                    \n                    this.setState({\n                        estadoBoton : agregarBotones(data['tb_transferencias'].last_page)\n                    })\n                });\n            }\n        )\n    }\n   \n\n\n    render(){\n        return(\n            <div className=\"row\">\n               <div className=\"col-lg-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Modulos de agregar</h4>\n                            <div className=\"button-group\">\n                                <button \n                                    type=\"button\" \n                                    className=\"btn waves-effect waves-light btn-primary\"\n                                    onClick={()=>this.mostrarModalDeclararTransferencia()}\n                                    >Declarar Transferencia</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <Buscadores_tb_transferencias \n                                    \n                />\n\n                <TB_Transferencias \n                    fetchTransferencias = {this.fetchTransferencias}\n                    tb_transferencias   = {this.state.tb_transferencias}\n                    estadoBoton         = {this.state.estadoBoton}\n                />\n                \n\n                <Modal\n                    size=\"lg\"\n                    show    = {this.state.mostrarModalDeclararTransferencia}\n                    onHide  = {() => this.mostrarModalDeclararTransferencia()}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\n                            Declarar Transferencia\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ModalDeclararTransferencia\n                            mostrarModalDeclararTransferencia = {this.mostrarModalDeclararTransferencia}\n\n                            fetchSucursalesUsuario  = {this.fetchSucursalesUsuario}\n                            fetchSucursales         = {this.fetchSucursales}\n\n                            sucursalesUsuario   = {this.state.sucursalesUsuario}\n                            sucursales          = {this.state.sucursales}\n\n                        />\n                    </Modal.Body>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n\nexport default indexTransferencias\n","import React from 'react'\nimport {Component} from 'react';\n\n\nclass TB_filas_cajasVentas extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n\n        }\n    }\n\n\n    render(){\n        return(\n            <tr>\n                <td>\n                    <button \n                        className=\"btn btn-rounded btn-fw btn-primary\" \n                        type=\"button\" >\n                            <i className=\"mdi mdi-eye\"></i>\n                    </button>\n                </td>\n                <td>{this.props.nombreSurcursal }</td>\n                <td>{this.props.nombreUsuario }</td>\n                <td>{this.props.cierreCajaVenta }</td>\n                <td>{this.props.numeroCajaVenta }</td>\n                <td>{this.props.aperturaCajaVenta }</td>\n                <td>{this.props.cierreCajaVenta }</td>\n                <td>{(this.props.totalAperturaCajaVenta) }</td>\n                <td>{(this.props.totalAperturoCajaVenta) }</td>\n                <td>{this.props.totalCierreCajaVenta }</td>\n                <td>{this.props.totalCerroCajaVenta }</td>\n                <td>{this.props.numeroVentasTarjetaCajaVenta }</td>\n                <td>{this.props.totalVentasTarjetaCajaVenta }</td>\n                <td>{this.props.numeroVentasEfectivoCajaVenta }</td>\n                <td>{this.props.totalVentasEfectivoCajaVenta }</td>\n                <td>{this.props.numeroVentasCanceladasCajaVenta }</td>\n                <td>{this.props.totalVentasCanceladasCajaVenta }</td>\n                <td>{this.props.numeroGastosCajaVenta }</td>\n                <td>{this.props.totalGastosCajaVenta }</td>\n                <td>{this.props.numeroIngresosCajaVenta }</td>\n                <td>{this.props.totalIngresosCajaVenta }</td>\n                <td>{this.props.numeroVentasCajaVenta }</td>\n                <td>{this.props.totalVentasCajaVenta }</td>\n                <td>{this.props.numeroItemsCajaVenta }</td>\n                <td>{this.props.numeroItemsCanceladosCajaVenta }</td>\n                <td>{this.props.observacionesAperturaCajaVenta }</td>\n                <td>{this.props.observacionesCierreCajaVenta }</td>\n            </tr>\n         ) \n    }\n}\n\nexport default TB_filas_cajasVentas","import React from 'react'\nimport {Component} from 'react';\nimport TB_filas_cajasVentas from './tb_filas_cajasVentas';\nimport agregarBotones from '../../../extras/agregarBotones'\nimport config from '../../../../config'\n\nclass TB_CajasVentas extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            tb_cajaVenta    : [],\n\n            estadoBoton     : []           \n\n\n        }\n        this.fetchCajasVentas  = this.fetchCajasVentas.bind(this);\n    }\n\n    componentDidMount(){\n        this.fetchCajasVentas(1, '', '');\n    }\n\n    fetchCajasVentas(number, cliente, numeroComprobante){\n        let url = config.api+`/cierrescajas/tb_cierreCaja?page=${number}&bcliente=${cliente}&bnumeroComprobante=${numeroComprobante}`;\n        fetch(\n            url,\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(\n            res => res.json()\n        )\n        .then(\n            data => {\n\n                this.setState({\n                    tb_cajaVenta    : data['tb_cajaVenta'].data,\n                    numeroPagina    : number\n                },()=>{\n                    \n                    this.setState({\n                        estadoBoton : agregarBotones(data['tb_cajaVenta'].last_page)\n                    })\n                });\n            }\n        )\n    }\n\n    \n\n\n\n    render(){\n        return(\n            <div>\n                <h6 className=\"card-title\">REGISTRO DE CUADRE DE CAJA:</h6>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\n                                <thead>\n                                    <tr>\n                                        <th>OPCIONES</th>\n                                        <th>SUCURSAL</th>\n                                        <th>USUARIO</th>\n                                        <th>ESTADO</th>\n                                        <th>NUMERO</th>\n                                        <th>FECHA APERTURA</th>\n                                        <th>FECHA CIERRE</th>\n                                        <th>APERTURA (S/)</th>\n                                        <th>APERTURO (S/)</th>\n                                        <th>CIERRE (S/)</th>\n                                        <th>CERRO (S/)</th>\n                                        <th>N° TAJERTA </th>\n                                        <th>TARJETA (S/)</th>\n                                        <th>N° EFECTIVO </th>\n                                        <th>EFECTIVO (S/)</th>\n                                        <th>N° CANCELADOS</th>\n                                        <th>CANCELADOS (S/)</th>\n                                        <th>N° GASTOS</th>\n                                        <th>GASTOS (S/)</th>\n                                        <th>N° INGRESOS</th>\n                                        <th>INGRESOS (S/)</th>\n                                        <th>N° VENTAS</th>\n                                        <th>VENTAS (S/) </th>\n                                        <th>N° ITEMS VENDIDOS</th>\n                                        <th>N° ITEMS CANCELADOS</th>\n                                        <th>OBSERVACIONES APERTURA </th>\n                                        <th>OBSERVACIONES CIERRE </th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.tb_cajaVenta\n                                        ?this.state.tb_cajaVenta.map((data, posicion)=>{\n                                            return(\n                                                    <TB_filas_cajasVentas \n                                                        key                             =   {data.idCajaVenta}\n                                                        nombreUsuario                   =   {data.nombreUsuario}\n                                                        nombreSurcursal                 =   {data.nombreSurcursal}\n                                                        cierreCajaVenta                 =   {data.cierreCajaVenta}\n                                                        numeroCajaVenta                 =   {data.numeroCajaVenta}\n                                                        aperturaCajaVenta               =   {data.aperturaCajaVenta}\n                                                        cierreCajaVenta                 =   {data.cierreCajaVenta}\n                                                        totalAperturaCajaVenta          =   {(data.totalAperturaCajaVenta * 1).toFixed(2)}\n                                                        totalAperturoCajaVenta          =   {(data.totalAperturoCajaVenta * 1).toFixed(2)}\n                                                        totalCierreCajaVenta            =   {(data.totalCierreCajaVenta * 1).toFixed(2)}\n                                                        totalCerroCajaVenta             =   {(data.totalCerroCajaVenta * 1).toFixed(2)}\n                                                        numeroVentasTarjetaCajaVenta    =   {data.numeroVentasTarjetaCajaVenta}\n                                                        totalVentasTarjetaCajaVenta     =   {(data.totalVentasTarjetaCajaVenta * 1).toFixed(2)}\n                                                        numeroVentasEfectivoCajaVenta   =   {data.numeroVentasEfectivoCajaVenta}\n                                                        totalVentasEfectivoCajaVenta    =   {(data.totalVentasEfectivoCajaVenta * 1).toFixed(2)}\n                                                        numeroVentasCanceladasCajaVenta =   {data.numeroVentasCanceladasCajaVenta}\n                                                        totalVentasCanceladasCajaVenta  =   {(data.totalVentasCanceladasCajaVenta * 1).toFixed(2)}\n                                                        numeroGastosCajaVenta           =   {data.numeroGastosCajaVenta}\n                                                        totalGastosCajaVenta            =   {(data.totalGastosCajaVenta * 1).toFixed(2)}\n                                                        numeroIngresosCajaVenta         =   {data.numeroIngresosCajaVenta}\n                                                        totalIngresosCajaVenta          =   {(data.totalIngresosCajaVenta * 1).toFixed(2)}\n                                                        numeroVentasCajaVenta           =   {data.numeroVentasCajaVenta}\n                                                        totalVentasCajaVenta            =   {(data.totalVentasCajaVenta * 1).toFixed(2)}\n                                                        numeroItemsCajaVenta            =   {data.numeroItemsCajaVenta}\n                                                        numeroItemsCanceladosCajaVenta  =   {data.numeroItemsCanceladosCajaVenta}\n                                                        observacionesAperturaCajaVenta  =   {data.observacionesAperturaCajaVenta}\n                                                        observacionesCierreCajaVenta    =   {data.observacionesCierreCajaVenta}\n                                                        \n                                                    />\n                                            ) \n                                        })\n                                        :null\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                        <br></br>\n                        <div className=\"container\">\n                            <div className=\"row justify-content-end\">\n                                <div className=\"col-4\">\n                                    {\n                                        this.state.estadoBoton\n                                        ?this.state.estadoBoton.map(task =>{\n                                            return (\n                                                <button \n                                                    key         = {task}\n                                                    className   = \"btn btn-sm btn-secondary editar\" \n                                                    type        = \"button\" \n                                                    onClick     = {()=>this.fetchCajasVentas(task, \"\", \"\")}>{task}</button>\n\n                                            );\n                                        })   \n                                        : null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         ) \n    }\n}\n\nexport default TB_CajasVentas","import React from 'react'\nimport {Component} from 'react';\nimport TB_CajasVentas from './tabla/tb_cajasVentas';\n\nclass indexCajaVenta extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n        }\n\n    }\n\n    \n\n\n    render(){\n        return(\n            <div className=\"row\">\n               <div className=\"col-lg-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <TB_CajasVentas \n                                    \n                            />\n                        </div>   \n                    </div>    \n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default indexCajaVenta\n","import React from 'react'\nimport {Component} from 'react';\nimport agregarBotones from '../../../extras/agregarBotones'\nimport config from '../../../../config'\n\nclass TB_Gastos extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            tb_gastos    : [],\n            estadoBoton  : []\n\n        }\n        this.fetchGastos  = this.fetchGastos.bind(this);\n    }\n\n    componentDidMount(){\n        this.fetchGastos(1, '', '');\n    }\n\n    fetchGastos(number, cliente, numeroComprobante){\n        let url = config.api+`/caja/gastos/tb_gastos?page=${number}`;\n        fetch(\n            url,\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(\n            res => res.json()\n        )\n        .then(\n            data => {\n                console.log(\"------------------------\")\n                console.log(data)\n                console.log(\"------------------------\")\n                this.setState({\n                    tb_gastos    : data['tb_gastos'].data,\n                    numeroPagina : number\n                },()=>{\n                    \n                    this.setState({\n                        estadoBoton : agregarBotones(data['tb_gastos'].last_page)\n                    })\n                });\n            }\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"col-lg-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h6 className=\"card-title\">REGISTRO DE GASTOS:</h6>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\n                                        <thead>\n                                            <tr>\n                                                <th>SUCURSAL</th>\n                                                <th>NUMERO DE LA CAJA</th>\n                                                <th>FECHA DEL GASTO</th>\n                                                <th>NUMERO DEL GASTO</th>\n                                                <th>GASTO</th>\n                                                <th>MOTIVO</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                this.state.tb_gastos\n                                                ?this.state.tb_gastos.map((data, posicion)=>{\n                                                    return(\n                                                        <tr key={data.idGasto}>\n                                                            <td>{data.nombreSucursal }</td>\n                                                            <td>{data.numeroCajaVenta }</td>\n                                                            <td>{data.fechaGasto }</td>\n                                                            <td>{data.numeroGasto }</td>\n                                                            <td>{data.gasto }</td>\n                                                            <td>{data.motivoGasto }</td>\n                                                        </tr>\n                                                    ) \n                                                })\n                                                :null\n                                            }\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <br></br>\n                                <div className=\"container\">\n                                    <div className=\"row justify-content-end\">\n                                        <div className=\"col-4\">\n                                            {\n                                                this.state.estadoBoton\n                                                ?this.state.estadoBoton.map(task =>{\n                                                    return (\n                                                        <button \n                                                            key         = {task}\n                                                            className   = \"btn btn-sm btn-secondary\" \n                                                            type        = \"button\" \n                                                            onClick     = {()=>this.fetchGastos(task, \"\", \"\")}>{task}</button>\n\n                                                    );\n                                                })   \n                                                : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>   \n                </div>    \n            </div>\n            \n         ) \n    }\n}\n\nexport default TB_Gastos","import React from 'react'\nimport {Component} from 'react';\nimport TB_Gastos from './tabla/tb_gastos';\n\nclass indexGasto extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n        }\n\n    }\n\n    \n\n\n    render(){\n        return(\n            <div className=\"row\">\n                <TB_Gastos \n\n                />\n            </div>\n\n        )\n    }\n}\n\nexport default indexGasto\n","import React from 'react'\nimport {Component} from 'react';\nimport agregarBotones from '../../../extras/agregarBotones'\nimport config from '../../../../config'\n\nclass TB_Ingresos extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            tb_ingresos  : [],\n            estadoBoton  : []\n\n        }\n        this.fetchIngresos  = this.fetchIngresos.bind(this);\n    }\n\n    componentDidMount(){\n        this.fetchIngresos(1, '', '');\n    }\n\n    fetchIngresos(number, cliente, numeroComprobante){\n        let url = config.api+`/caja/ingresos/tb_ingresos?page=${number}`;\n        fetch(\n            url,\n            {\n                method: 'GET',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'usuid'         : localStorage.getItem('usuid')\n                }\n            }\n        )\n        .then(\n            res => res.json()\n        )\n        .then(\n            data => {\n                this.setState({\n                    tb_ingresos    : data['tb_ingresos'].data,\n                    numeroPagina : number\n                },()=>{\n                    \n                    this.setState({\n                        estadoBoton : agregarBotones(data['tb_ingresos'].last_page)\n                    })\n                });\n            }\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"col-lg-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h6 className=\"card-title\">REGISTRO DE INGRESOS:</h6>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\n                                        <thead>\n                                            <tr>\n                                                <th>SUCURSAL</th>\n                                                <th>NUMERO DE LA CAJA</th>\n                                                <th>FECHA DEL INGRESO</th>\n                                                <th>NUMERO DEL INGRESO</th>\n                                                <th>INGRESO</th>\n                                                <th>MOTIVO</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                this.state.tb_ingresos\n                                                ?this.state.tb_ingresos.map((data, posicion)=>{\n                                                    return(\n                                                        <tr key= { data.idIngreso         }>\n                                                            <td> { data.nombreSucursal    }</td>\n                                                            <td> { data.numeroCajaVenta   }</td>\n                                                            <td> { data.fechaIngreso      }</td>\n                                                            <td> { data.numeroIngreso     }</td>\n                                                            <td> { data.ingreso           }</td>\n                                                            <td> { data.motivoIngreso     }</td>\n                                                        </tr>\n                                                    ) \n                                                })\n                                                :null\n                                            }\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <br></br>\n                                <div className=\"container\">\n                                    <div className=\"row justify-content-end\">\n                                        <div className=\"col-4\">\n                                            {\n                                                this.state.estadoBoton\n                                                ?this.state.estadoBoton.map(task =>{\n                                                    return (\n                                                        <button \n                                                            key         = {task}\n                                                            className   = \"btn btn-sm btn-secondary\" \n                                                            type        = \"button\" \n                                                            onClick     = {()=>this.fetchIngresos(task, \"\", \"\")}>{task}</button>\n\n                                                    );\n                                                })   \n                                                : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>   \n                </div>    \n            </div>\n            \n         ) \n    }\n}\n\nexport default TB_Ingresos","import React from 'react'\nimport {Component} from 'react';\nimport TB_INGRESOS from './tabla/tb_ingesos';\n\nclass indexGasto extends Component {\n    constructor(){\n        super();\n        this.state ={\n\n        }\n\n    }\n\n    \n\n\n    render(){\n        return(\n            <div className=\"row\">\n                <TB_INGRESOS \n\n                />\n            </div>\n\n        )\n    }\n}\n\nexport default indexGasto\n","import React, { Component } from 'react'\r\nimport config from '../../../config'\r\n// import TB_Descuentos from './tabla/tb_descuentos'\r\n\r\nclass CargaArchivos extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            //modal\r\n            estadoModalAgregarOferta    : false,\r\n            // DATOS DEL MODAL\r\n            idProductoEscaneado         : 0,\r\n            codigoProductoEscaneado     : '',\r\n            nombreProductoEscaneado     : '',\r\n            stockProductoEscaneado      : 0,\r\n            precioProductoEscaneado     : 0,\r\n            cantidadOferta              : '',\r\n            nuevoPrecioOferta           : '',\r\n\r\n            // TOAST\r\n            estadoToast     : false,\r\n            mensajeToast    : '',\r\n            colorToast      : 'rgba(76,208,76,0.7)',\r\n\r\n\r\n        }\r\n        this.getCambioCodigo            = this.getCambioCodigo.bind(this);\r\n        this.fetchCodigoProducto        = this.fetchCodigoProducto.bind(this);\r\n        this.getCambioCantidadOferta    = this.getCambioCantidadOferta.bind(this);\r\n        this.getCambioNuevoPrecio       = this.getCambioNuevoPrecio.bind(this);\r\n        this.fetchAgregarOferta         = this.fetchAgregarOferta.bind(this);\r\n    }\r\n\r\n    modalAgregarOferta() {\r\n        this.setState({\r\n            estadoModalAgregarOferta: !this.state.estadoModalAgregarOferta\r\n        });\r\n    }\r\n\r\n    activarToast(message, color) {\r\n        this.setState({\r\n            mensajeToast : message,\r\n            colorToast   : color,\r\n            estadoToast  : true\r\n        });\r\n    }\r\n\r\n    getCambioCodigo(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            codigoProductoEscaneado : value\r\n        })\r\n        if (e.key === 'Enter') {\r\n            console.log(value);\r\n            this.fetchCodigoProducto(value);\r\n        }\r\n\r\n    }\r\n\r\n    fetchCodigoProducto(codigo){ \r\n        fetch(config.api+`/producto/buscar`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token'        : csrf_token,\r\n                    codigoProducto  : codigo\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(\"datos:\")\r\n            console.log(data)\r\n            if(data['response'] == true){\r\n               \r\n                var producto = data['producto'];\r\n                this.setState({\r\n                    idProductoEscaneado     : producto['id'],\r\n                    nombreProductoEscaneado : producto['nombre'],\r\n                    stockProductoEscaneado  : producto['cantidad'],\r\n                    precioProductoEscaneado : producto['precio'],\r\n                })\r\n\r\n\r\n            }else{\r\n                this.activarToast(\"Producto no encontrado\", \"rgba(205,55,55,0.7)\");\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    getCambioCantidadOferta(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            cantidadOferta : value\r\n        })\r\n    }\r\n    \r\n    getCambioNuevoPrecio(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            nuevoPrecioOferta : value\r\n        })\r\n    }\r\n\r\n    fetchAgregarOferta()\r\n    {\r\n        fetch(config.api+`/configuraciones/descuentos/crear`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token'            : csrf_token,\r\n                'idProducto'        : this.state.idProductoEscaneado,\r\n                'precioProducto'    : this.state.precioProductoEscaneado,\r\n                'nuevoPrecio'       : this.state.nuevoPrecioOferta,\r\n                'cantidad'          : this.state.cantidadOferta,\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            console.log(data['response'])\r\n            if(data['response'] == true){\r\n                this.activarToast(\"Oferta creada satisfactoriamente\", \"rgba(76,208,76,0.7)\");\r\n                this.modalAgregarOferta();\r\n            }else{\r\n                this.activarToast(\"Ocurrio un error al momento de agregar la oferta\", \"rgba(205,55,55,0.7)\");\r\n            }\r\n            \r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Acciones</h4>\r\n                            <button type=\"button\"\r\n                                onClick={()=>this.modalAgregarOferta()}\r\n                                className=\"btn btn-primary btn-rounded btn-fw\">Crear una oferta</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <TB_Descuentos \r\n\r\n                /> */}\r\n            \r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default CargaArchivos\r\n","import React, {Component} from 'react'\r\nimport '../../../Estilos/CargarData/CargarData.css'\r\nimport config from '../../../config'\r\nimport axios from 'axios'\r\n\r\nclass CargarData extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            subioArchivo     : false,\r\n            nombreArchivo    : '',\r\n            fileSeleccionado : null,\r\n            cargando         : false,\r\n            archivoExito     : false,\r\n            enviarCambios    : false,\r\n            guardarCambios   : false,\r\n        }\r\n        this.seleccionarFile = this.seleccionarFile.bind(this)\r\n        this.enviarCambios = this.enviarCambios.bind(this)\r\n    }\r\n\r\n    seleccionarFile(e) {\r\n        console.log(localStorage.getItem('usutoken'))\r\n        this.refs.subirArchivoInput.click();\r\n    }\r\n\r\n    async cambioInputFile(event){\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        this.state.fileSeleccionado = event.target.files[0];\r\n\r\n        this.setState({\r\n            subioArchivo  : true,\r\n            nombreArchivo : this.state.fileSeleccionado['name']\r\n        })\r\n    }\r\n\r\n    async enviarCambios(){\r\n        this.setState({\r\n            cargando : true\r\n        })\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',this.state.fileSeleccionado)\r\n        \r\n        let url = config.api+\"/api/versiondos/cargar-data/almacenv2\"\r\n        await axios.post(url, formData,{\r\n            mode:'cors',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'content-type': 'multipart/form-data',\r\n                'api-token': localStorage.getItem('usutoken'),\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        })\r\n        .then(rpta => {\r\n            let datos = rpta.data\r\n            if(datos.respuesta == true){\r\n                this.setState({\r\n                    archivoExito : true\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    archivoExito : false\r\n                })\r\n                // message.error(datos.mensaje);\r\n            }\r\n        })\r\n        .catch((error)=> {\r\n            console.log(error)\r\n            this.setState({\r\n                cargando : false,\r\n                archivoExito : false\r\n            })\r\n        });\r\n        \r\n\r\n        this.setState({\r\n            enviarCambios   : true,\r\n            guardarCambios  : false,\r\n            cargando        : false,\r\n            fileSeleccionado: null\r\n        })\r\n\r\n        this.eliminarArchivo()\r\n    }\r\n\r\n    eliminarArchivo(){\r\n        this.setState({\r\n            subioArchivo     : false,\r\n            nombreArchivo    : '',\r\n            fileSeleccionado : null\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input \r\n                    type=\"file\" \r\n                    id=\"file\" \r\n                    ref=\"subirArchivoInput\" \r\n                    style={{display: \"none\"}} \r\n                    onChange={(e) => this.cambioInputFile(e)} />\r\n\r\n                <div id=\"Contenedor-Card-CargarData\">\r\n                    <div id=\"Titulo-Card-CargarData\">Cargar Almacen</div>\r\n                    <div id=\"Botones-Card-CargarData\">\r\n                        <div>\r\n                            {\r\n                                this.state.fileSeleccionado\r\n                                ?<><div>{this.state.nombreArchivo}</div></>\r\n                                :null\r\n                            }\r\n                            {\r\n                                this.state.fileSeleccionado\r\n                                ?<div \r\n                                    id=\"Btn-EnviarArchivo-CargarData\"\r\n                                    onClick={this.enviarCambios}\r\n                                >Enviar Archivo</div>\r\n                                :<div \r\n                                    id=\"Btn-SeleccionarArchivo-CargarData\"\r\n                                    onClick={this.seleccionarFile}\r\n                                >Seleccionar Archivo</div>\r\n                            }\r\n                            <div id=\"Btn-DescargarFormato-CargarData\">Descargar Formato</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CargarData;\r\n","import React, {Component} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Top from './partials/topNav/top'\r\nimport Sidebar from './partials/sidebar'\r\nimport Footer from './partials/footer'\r\nimport Almacen from './almacenes/Almacen'\r\nimport Entrada from './almacenes/Entrada'\r\nimport Marca from './almacenes/Marca'\r\nimport Proveedores from './almacenes/Proveedores'\r\nimport Tipoproducto from './almacenes/Tipoproducto'\r\nimport Queso from './almacenes/queso'\r\nimport Descuentos from './Configuracion/descuentos/index'\r\nimport Usuarios from './Configuracion/Usuario'\r\nimport Reportes from './Configuracion/Reportes/Reportes'\r\nimport Ventas from './ventas/Venta'\r\nimport VentasDetalladas from './ventas/ventasDetalladas/index'\r\nimport indexTransferencias from './transferencias/index'\r\nimport indexCajaVenta from './caja/gestionarCajas/index'\r\nimport indexGasto from './caja/gestionarGastos/index'\r\nimport indexIngresos from './caja/gestionarIngresos/index'\r\nimport CargaArchivos from './Configuracion/cargaArchivos/index'\r\n\r\nimport CargarData from './almacenes/CargarData/CargarData'\r\n\r\n\r\nconst index = () => {    \r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <div className=\"preloader\">\r\n                <div className=\"lds-ripple\">\r\n                    <div className=\"lds-pos\"></div>\r\n                    <div className=\"lds-pos\"></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"main-wrapper\">\r\n                <Top/>\r\n                <Sidebar/>\r\n                <div className=\"page-wrapper\">\r\n                    <div className=\"page-breadcrumb bg-white\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 col-md-4 col-xs-12 align-self-center\">\r\n                                <h5 className=\"font-medium text-uppercase mb-0\">Dashboard</h5>\r\n                            </div>\r\n                            <div className=\"col-lg-9 col-md-8 col-xs-12 align-self-center\">\r\n                                <nav aria-label=\"breadcrumb\" className=\"mt-2 float-md-right float-left\">\r\n                                    <ol className=\"breadcrumb mb-0 justify-content-end p-0 bg-white\">\r\n                                        <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\r\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Dashboard</li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"page-content container-fluid\">\r\n                        <Switch>\r\n                        <Route exac path='/queso' component={Queso} />\r\n\r\n                        {/* <Route\r\n                            path=\"/almacen\"\r\n                            render={({ match: { url } }) => (\r\n                            <>\r\n                                \r\n                            </>\r\n                            )}\r\n                        /> */}\r\n\r\n                        <Route path={`/almacen`} component={Almacen} exact />\r\n                        <Route path={`/almacen-transferencias`} component={indexTransferencias} />\r\n                        <Route path={`/almacen-entrada`} component={Entrada} />\r\n                        <Route path={`/almacen-marcas`} component={Marca} />\r\n                        <Route path={`/almacen-proveedor`} component={Proveedores} />\r\n                        <Route path={`/almacen-tiposproductos`} component={Tipoproducto} />\r\n                        <Route path={`/almacen-cargar-data`} component={CargarData} />\r\n\r\n                        {/* <Route\r\n                            path=\"/configuracion\"\r\n                            render={({ match: { url } }) => (\r\n                            <>\r\n                                \r\n                            </>\r\n                            )}\r\n                        /> */}\r\n\r\n                        <Route path={`/configuracion-ofertas`}  component={Descuentos} />\r\n                        <Route path={`/configuracion-usuarios`} component={Usuarios} />\r\n                        <Route path={`/configuracion-carga-archivos`} component={CargaArchivos} />\r\n\r\n                        <Route exac path='/ventas' component={Ventas} />\r\n                        <Route exac path='/ventasdetalladas' component={VentasDetalladas} />\r\n                        <Route exac path={`/seguimientos`} component={Reportes} />\r\n                        {/* <Route\r\n                            path=\"/caja\"\r\n                            render={({ match: { url } }) => (\r\n                            <>\r\n                                \r\n                            </>\r\n                            )}\r\n                        /> */}\r\n                        <Route path={`/caja`}         component = {indexCajaVenta} exact />\r\n                        <Route path={`/caja-ingresos`} component = {indexIngresos} />\r\n                        <Route path={`/caja-gastos`}   component = {indexGasto} />\r\n                        </Switch>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n                </div>\r\n            </div>              \r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React, {useEffect} from 'react';\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport Login from '../Login/Login'\nimport { ToastProvider } from 'react-toast-notifications';\nimport Rutas from '../../Rutas/index'\nimport {ValidarUsuarioConectadoReducer} from '../../Redux/Actions/Login/Login'\n\nfunction App() {\n\n    const ComunesCargandoPagina = useSelector(({comunes}) => comunes.ComunesCargandoPagina)\n    const ComunesCargandoPaginaInicio = useSelector(({comunes}) => comunes.ComunesCargandoPaginaInicio)\n    const LoginUsuid = useSelector(({login}) => login.LoginUsuid)\n\n    const dispatch = useDispatch();\n\n    useEffect(async () => {\n\n        console.log('dispa')\n        await dispatch(ValidarUsuarioConectadoReducer())\n        // console.log(LoginUsuid)\n    }, [LoginUsuid]);\n\n\n    return (\n        <div style={{position:'relative'}}>\n            <ToastProvider>\n                <div style={{position:'absolute', width:'100%', height:'100vh'}}>\n                    <div style={{position:'relative'}}>\n                        \n                        {\n                            LoginUsuid != null\n                            // ?<div>rutas</div>\n                            ?<Rutas />\n                            :<Switch>\n                                <Route exact path='/login' component={Login}/>\n                            </Switch>\n                        }\n                        \n                        {\n                            LoginUsuid != null\n                            ?null\n                            :<Redirect to=\"/login\" />\n                        }\n\n                    </div>\n                </div>\n            </ToastProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport generateStore, {history} from './Redux/Store/index';\r\nimport App from \"./Container/App/App\";\r\n\r\nfunction SiguienteApp() {\r\n\r\n    const store = generateStore()\r\n    \r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <ConnectedRouter history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" component={App}/>\r\n                </Switch>\r\n            </ConnectedRouter>\r\n        </Provider>        \r\n    );\r\n}\r\n\r\nexport default SiguienteApp;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SiguienteApp from './SiguienteApp';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SiguienteApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}