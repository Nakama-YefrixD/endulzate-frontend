{"version":3,"sources":["Constantes/EstadoRequest/EstadoRequest.js","Redux/Reducers/EstadoRequest.js","Constantes/Login/Login.js","Redux/Reducers/Login/Login.js","Constantes/Comunes/Comunes.js","Redux/Reducers/Comunes/Comunes.js","Redux/Reducers/index.js","Redux/Store/index.js","Assets/assetsLogin/images/bg-01.jpg","config.js","Redux/Actions/Comunes/Comunes.js","Redux/Actions/EstadoRequest.js","Redux/Actions/Login/Login.js","Container/Login/BtnEnviarLogin.js","Container/Login/Login.js","Rutas/extras/loading.js","Rutas/partials/topNav/cerrarCajaVenta.js","Rutas/extras/confirmarFuncion.js","Assets/assetsAdminTemplate/assets/images/logos/logo-icon.png","Assets/assetsAdminTemplate/assets/images/logos/logo-light-icon.png","Assets/assetsAdminTemplate/assets/images/logos/logo-text.png","Assets/assetsAdminTemplate/assets/images/logos/logo-light-text.png","Assets/assetsAdminTemplate/assets/images/users/1.jpg","Rutas/partials/topNav/BtnCerrarSesion.js","Rutas/partials/topNav/top.js","Rutas/partials/sidebar.js","Rutas/partials/footer.js","Rutas/almacenes/componentsExtras/listProductComponent.js","Rutas/almacenes/EntradaCrear.js","Rutas/almacenes/componentsExtras/cerrarCaja.js","Rutas/almacenes/Almacen.js","Rutas/almacenes/Entrada.js","Rutas/almacenes/Marca.js","Rutas/almacenes/Proveedores.js","Rutas/almacenes/Tipoproducto.js","Rutas/almacenes/queso.js","Rutas/extras/agregarBotones.js","Rutas/Configuracion/descuentos/tabla/tb_descuentos.js","Rutas/Configuracion/descuentos/index.js","Rutas/Configuracion/Usuario.js","Rutas/Configuracion/Reportes/Botones.js","Rutas/Configuracion/Reportes/Tabla.js","Rutas/Configuracion/Reportes/Graficos.js","Rutas/Configuracion/Reportes/Reportes.js","Rutas/ventas/ventaBoleta.js","Rutas/ventas/ventaFactura.js","Rutas/ventas/venta/productoAddDetalle.js","Rutas/ventas/venta/nuevaVenta.js","Rutas/ventas/eliminarVenta.js","Rutas/ventas/ImprimirVenta.js","Rutas/ventas/Venta.js","Rutas/ventas/ventasDetalladas/index.js","Rutas/transferencias/modalDeclararTransferencia/index.js","Rutas/transferencias/tabla/tb_transferencias.js","Rutas/transferencias/tabla/buscadores_tb_transferencias.js","Rutas/transferencias/index.js","Rutas/caja/gestionarCajas/tabla/tb_filas_cajasVentas.js","Rutas/caja/gestionarCajas/tabla/tb_cajasVentas.js","Rutas/caja/gestionarCajas/index.js","Rutas/caja/gestionarGastos/tabla/tb_gastos.js","Rutas/caja/gestionarGastos/index.js","Rutas/caja/gestionarIngresos/tabla/tb_ingesos.js","Rutas/caja/gestionarIngresos/index.js","Rutas/Configuracion/cargaArchivos/index.js","Rutas/almacenes/CargarData/CargarData.js","Rutas/index.js","Container/App/App.js","SiguienteApp.js","serviceWorkerRegistration.ts","reportWebVitals.js","index.tsx"],"names":["ESTADO_REQUEST_EXITO","ESTADO_REQUEST_NO_AUTORIZADO","ESTADO_REQUEST_NO_EXISTE","ESTADO_REQUEST_ERROR_SERVIDOR","ESTADO_REQUEST_DESCONOCIDO","INIT_STATE","init_estadoRequest","init_request","state","action","type","payload","MOSTRAR_FORMULARIO_LOGIN","OBTENER_LOGIN","mostrarFormularioLogin","cargando","LoginUsuid","localStorage","getItem","LoginUsuario","usuid","usuario","COMUNES_CARGANDO_PAGINA","COMUNES_MOSTRAR_MENU","COMUNES_CARGANDO_PAGINA_INICIO","ComunesCargandoPagina","ComunesCargandoPaginaInicio","ComunesMostrarMenu","ComunesOcultarMenu","mostrarmenu","ocultarmenu","createRootReducer","history","combineReducers","router","connectRouter","estadoRequest","EstadoRequest","login","Login","comunes","Comunes","createBrowserHistory","require","routeMiddleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","CargandoPaginaReducer","accion","CargandoPaginaInicioReducer","estadoRequestReducer","estado","dispatch","LoginReducer","getState","a","respuesta","mensaje","fetch","config","mode","method","body","JSON","stringify","headers","then","res","status","json","data","setItem","contrasenia","datos","usutoken","usuusuario","pernombre","catch","error","console","log","BtnEnviarLogin","props","useDispatch","addToast","useToasts","enviarData","appearance","autoDismiss","location","reload","class","onClick","input_usuario","input_contrasenia","e","variable","target","name","this","setState","value","data-validate","id","placeholder","onChange","capturarCambioInput","href","style","backgroundImage","bg01","Component","Loading","color","height","width","timeout","React","CerrarCajaVentaComponente","totalCerro","observacionesCierre","colorToastDanger","colorToastSuccess","imprimir","mostrarErrorInput","getCambioTotalCerro","bind","getCambioObservacionCierre","activarConfirmacion","sendCierreCajaVenta","numeros","parseFloat","totalCierre","toFixed","numeroImpresion","titulo","descripcion","funcion","modalCerrarCajaVenta","confirmAlert","customUI","onClose","className","cogoToast","loading","position","idCajaVenta","response","success","url","getEstadoCajaVent","sucursalNombre","usuarioNombre","totalApertura","totalAperturo","loadModalCierreCajaVenta","autoFocus","rows","BtnCerrarSesion","removeItem","Top","observacionesApertura","registrarGastoIngreso","motivoGastoIngreso","estadoCajaVenta","cerrarAbrirCajaVenta","txt_btn_abriCerrarCaja","estadoModalAbrirCajaVenta","estadoModalCerrarCajaVenta","estadoModalRegistrarGasto","estadoModalRegistrarIngreso","estadoToast","mensajeToast","colorToast","modalAbrirCajaVenta","abrirCerrarCajaVenta","getCambioTotalAperturo","getCambioObservacion","sendAbrirCaja","sendRegistrarGasto","modalRegistrarGasto","getCambioGastoIngreso","getCambioMotivoGastoIngreso","sendRegistrarIngreso","modalRegistrarIngreso","activarToast","getTotalCierreCajaVenta","fetchImprimirAlmacen","texto","contenedor","document","querySelector","classList","remove","add","cajaVenta","message","src","LogoIcon","alt","LogoLightIcon","LogoText","LogoTextLight","data-sidebartype","data-toggle","data-target","aria-controls","aria-expanded","aria-label","background","aria-haspopup","User1","Modal","size","show","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Toast","top","right","zIndex","backgroundColor","delay","autohide","Sidebar","fetchLogout","to","Footer","ListProductComponent","precio","cantidad","importe","handleChange","onKeyDown","handleKeyDown","onFocus","handleScope","number","pattern","precioProductoChild","data-type","cantidadProductoChild","stock","importeChild","quitarOpcion","EntradaCrear","contador","contadorNumero","nada","numerox","modo","nombreProducto","precioProducto","scopeNumero","tasks","proveedores","code","estadoModalProducto","estadoToastRed","estadoToastGreen","messageRed","messageGreen","idProducto","nowday","idProveedor","idFactura","datepick","enviarCantidad","enviarPrecioProducto","enviarIdProducto","precio_array","cantidad_array","idProducto_array","idMarca","idTipo","precioVentaProducto","codigoProductoNuevo","nombreProductoNuevo","tasksM","tasksTP","tiposproductos_tb","marcas_tb","proveedores_t","nuevoTipoProducto","fetchDatos","handleKeyDown2","scope","sendAgregarEntrada","handleChangeTime","quitarScope","date","format","cambiarToastGreen","fetchAgregarTipo","cambiarToastRed","suprimirDatos","operacion","b","x","y","z","q","map","task","push","nombre","Map","obj","values","operacionScope2","operacionScope","marcaProducto","tipoProducto","generateComponents","cambiarModalProducto","numero","forEach","array","index","findIndex","i","splice","k","length","codigoProducto","producto","proveedor","factura","fecha","addContainer","operacionClean","key","comprobarCode","comprobarCodeProducto","p","calculo","locale","selected","defaultChecked","sendAgregarTipoProducto","element","sendAgregarProducto","CerrarCaja","estadoModalCerrarCaja","cambiarModalCerrarCaja","codigoCerrarCaja","handleKeyDown5","nombreCajaCerrarCaja","stockCajaCerrarCaja","cantidadProductosCerrarCaja","precioCajaCerrarCaja","nombreProductoCerrarCaja","stockProductoCerrarCaja","precioProductoCerrarCaja","cantidadCerrarCaja","sendCerrarCaja","registerLocale","es","Almacen","productos_tb","codigoP","nombreM","nombreT","nombreP","precioP","cantidadP","proveedores_tb","rucProveedor","RUCdatos","telefonoProveedor","nombreProveedor","direccionProveedor","tipoProveedor","estadoModalMarca","estadoModalProveedor","estadoModalEditarProducto","estadoModalCaja","estadoModalAbrirCaja","estadoBoton","estadoQuery","codigoCaja","codigoProductoCaja","idProductoCaja","nombreCaja","cantidadProductosCaja","precioCaja","codeC","codigoAbrirCaja","nombreCajaAbrirCaja","stockCajaAbrirCaja","cantidadProductosAbrirCaja","precioCajaAbrirCaja","nombreProductoAbrirCaja","stockProductoAbrirCaja","precioProductoAbrirCaja","cantidadAbrirCaja","codeAbrirCaja","codeCerrarCaja","paginaSeleccionadaTbVenta","fetchTasks","editTask","handleChangeRUC","handleChangeBuscador","handleKeyDown1","handleKeyDown3","handleKeyDown4","datosdeRUC","persona","telefonos","razonSocial","direccion","tipo","agregarBotones","idP","codeP","nameM","nameT","nameP","idM","idT","cantidadProducto","cleanInputs","fechAgregarTipo","codigoCajaProducto","existe","marca_id","tipo_id","nombreMarca","numAbrir","CAJA","PRODUCTO","editarIdProducto","editarCodigoProductoNuevo","editarMarcaProducto","editarTipoProducto","editarNombreProductoNuevo","editarPrecioVentaProducto","last_page","query","fetchQuery","fetchRUC","comprobarCodeProductoCaja","comprobarCodeCaja","comprobarCodeAbrirCaja","comprobarCodeCerrarCaja","cambiarModalCaja","addComponentEntrada","cambiarModalAbrirCaja","cambiarModalMarca","cambiarModalProveedor","nombreTipo","deleteProducto","cambiarModalEditarProducto","cambiarPaginate","sendAgregarCaja","sendAgregarMarca","sendAgregarProveedor","sendEditarProducto","Entrada","entrada_tb","estadoModalEntrada","fechaEntradaDataTabla","fetchEntradaDataTabla","nombreEntrada","codigo","eliminarEntrada","entradaId","cambiarModalEntrada","Marca","csrf_token","marca_tb","editarNombreMarca","editarIdMarca","estadoModalEditarMarca","fetchDataTable","textAlign","cambiarModalEditarMarca","deleteMarca","sendEditarMarca","Proveedores","editarRucProveedor","editarTelefonoProveedor","editarNombreProveedor","editarDireccionProveedor","editarIdProveedor","aRuc","aTipo","aTelefono","aNombreProveedor","aDireccion","estadoModalEditarProveedor","ruc","telf","telefono","cambiarModalEditarProveedor","sendEditarProveedor","Tipoproducto","tiposProductos_tb","nombreTipoProducto","editarNombreTipoProducto","editarIdTipoProducto","estadoModalTipoProducto","estadoModalEditarTipoProducto","cambiarModalTipoProducto","cambiarModalEditarTipoProducto","deleteTipoProducto","sendEditarTipoProducto","Queso","float","lastPage","TB_Descuentos","tb_descuentos","idDescuento","fetchDescuentos","fetchEliminarDescuento","cliente","numeroComprobante","numeroPagina","idDescuentos","title","buttons","label","posicion","codigoProductos","nombreProductos","cantidadDescuentos","porcentajeDescuentos","precioProductos","nuevoPrecioDescuentos","confirmarEliminarTransferencia","Descuento","estadoModalAgregarOferta","idProductoEscaneado","codigoProductoEscaneado","nombreProductoEscaneado","stockProductoEscaneado","precioProductoEscaneado","cantidadOferta","nuevoPrecioOferta","getCambioCodigo","fetchCodigoProducto","getCambioCantidadOferta","getCambioNuevoPrecio","fetchAgregarOferta","modalAgregarOferta","Usuario","usuario_tb","sucursales","sucursalesPArray","editarNombreUsuario","editarIdUsuario","estadoModalAgregarUsuario","estadoModalEditarUsuario","crearNombre","crearPassword","crearUsername","crearSucursales","crearSucursalPredeterminada","editarId","editarNombre","editarUsername","editarPassword","editarSucursales","editarSucursalPredeterminada","dniData","dniUsuario","handleChangeDni","addSucursal","predeterminarSucursal","op","username","predeterminada","pivot","sucursal_id","toString","password","predeterminado","checked","fetchDNI","dniOpe","nombres","apellidoMaterno","apellidoPaterno","cambiarModalAgregarUsuario","s","cambiarModalEditarUsuario","deleteUsuario","htmlFor","sendCrearUsuario","sendEditarUsuario","Botones","generateExcel","Tabla","reporte","movimientos","sucursal","registro","Graficos","quarter","earnings","Reportes","sucursalProducto","codigoProductoSpan","stockActual","entradaTotal","transferenciaEnviadas","transferenciaRecibidas","totalVendido","addBotones","addTabla","addGraficos","generateGraficos","entradasTotales","transferEnviadas","transferRecibidas","ventasTotales","crearRegistros","limpiarRegistros","descargar","blob","link","createElement","URL","createObjectURL","download","click","sendCodigoProducto","VentaBoleta","role","readonly","marginTop","VentaFactura","estadoa","estadob","cambiarb","cambiara","cambio","dataFactura","serie","correlativo","readOnly","data-dismiss","ProductoAddDetalleComponent","calcularSubTotalTotal","buscarCodigoProducto","calcularSubTotalTotalDetalle","autoComplete","cambiarCodigo","descuentoAplicado","descuento","subTotal","total","eliminarProductoDetalle","NuevaVenta","getDni","DNIRUCdatos","getCambioNumeroDocumento","getCambioNombreCliente","cambiarTipoDocumento","cambiarTipoPago","calcularDatosTotalesVenta","cambiarValorFormTemporales","fetchAgregarProductoTemporal","generarVentaInterna","fetchAgregarVenta","getCambioDescuentoVenta","getProductos","seleccionarProductoTb","modalBuscarProducto","cantidadProductosDetalle","observacionVenta","productosDetalleList","tipoDocumentoCliente","numeroDocumentoCliente","nombreCliente","tipoMoneda","fetchDNIRUC","numeroVentasRealizadas","totalVentasRealizadas","tipoDocumento","datosDNIRUC","btn_aceptar","agregarProductoDetalle","datoTemporal","codigoProductoTemporal","nombreProductoTemporal","precioProductoTemporal","numeroProductoDetalle","idLista","stockProducto","subTotalProducto","totalProducto","totalDescuento","arrayProductosDetalle","indexOf","arrayProductosDetalleList","agregarProducto","descuentoVentaRealizado","descuentoVenta","descuentoVentaRealizadoGuardado","precioCalcular","nuevaCantidadOferta","igvVenta","subTotalVenta","totalVenta","tipoComprobante","sucursalId","numeroVenta","fetchVentaDataTabla","addNuevaVenta","fechtDataNuevaVenta","variosDescuentos","disponiblesProducto","idVentas","cambiarPagina","EliminarVenta","txt_motivoCancelar","confirmarEliminarVenta","getCambioMotivoCancelar","fetchCancelarVenta","idVenta","ImprimirVenta","fetchImprimirVenta","marginLeft","Venta","venta_tb","addComponentFactura","addComponentBoleta","addComponentNuevaVenta","dataFacturaReady","dataBoletaReady","dataNuevaVentaReady","dataBoleta","dataNuevaVenta","txt_btn_venta","inp_cliente","inp_numeroVenta","addFactura","addBoleta","fechtDataFactura","fechtDataBoleta","getCambioNumeroVenta","btn_venta","txt_btn","defaultValue","colSpan","fechaVentas","nombreClientes","nombreTiposcomprobante","tipoMoneda_id","numeroVentas","estadoSunatVentas","subTotalVentas","totalVentas","VentasDetalladas","tb_venta_detallada","bcodProduct","bnumeroComprobante","bdateOne","bdateTwo","fetchTbVentaDetallada","getCambioCodProducto","getCambioDateOne","getCambioDateTwo","numeroPag","codProduct","dateOne","dateTwo","nombreSucursal","cantidadDetalleVenta","descuentoDetalleVenta","subtotalDetalleVenta","totalDetalleVenta","idDetalleVenta","ModalDeclararTransferencia","idOrigen","idDestino","cantidadTransferir","motivoTransferencia","stockDespuesOrigen","getCambioCantidadTransferir","getCambioMotivoTransferencia","getCambio","fetchCrearTransferencia","sucursalesUsuario","mostrarModalDeclararTransferencia","fetchSucursalesUsuario","fetchSucursales","TB_Transferencias","idTransferencia","fetchEliminarTransferencia","fetchImprimirTransferencia","fetchTransferencias","tb_transferencias","origenTransferencia","destinoTransferencia","cantidadTransferida","Buscadores_tb_transferencias","indexTransferencias","TB_filas_cajasVentas","fetchImprimirCaja","numeroCajaVenta","nombreSurcursal","nombreUsuario","cierreCajaVenta","aperturaCajaVenta","totalAperturaCajaVenta","totalAperturoCajaVenta","totalCierreCajaVenta","totalCerroCajaVenta","numeroVentasTarjetaCajaVenta","totalVentasTarjetaCajaVenta","numeroVentasEfectivoCajaVenta","totalVentasEfectivoCajaVenta","numeroVentasCanceladasCajaVenta","totalVentasCanceladasCajaVenta","numeroGastosCajaVenta","totalGastosCajaVenta","numeroIngresosCajaVenta","totalIngresosCajaVenta","numeroVentasCajaVenta","totalVentasCajaVenta","numeroItemsCajaVenta","numeroItemsCanceladosCajaVenta","observacionesAperturaCajaVenta","observacionesCierreCajaVenta","TB_CajasVentas","tb_cajaVenta","fetchCajasVentas","indexCajaVenta","TB_Gastos","tb_gastos","fetchGastos","fechaGasto","numeroGasto","gasto","motivoGasto","idGasto","indexGasto","TB_Ingresos","tb_ingresos","fetchIngresos","fechaIngreso","numeroIngreso","ingreso","motivoIngreso","idIngreso","CargaArchivos","CargarData","subioArchivo","nombreArchivo","fileSeleccionado","archivoExito","enviarCambios","guardarCambios","seleccionarFile","refs","subirArchivoInput","event","stopPropagation","preventDefault","files","formData","FormData","append","axios","post","rpta","eliminarArchivo","ref","display","cambioInputFile","aria-current","exac","path","component","exact","Descuentos","Usuarios","Ventas","indexIngresos","App","useSelector","useEffect","Rutas","SiguienteApp","store","createStore","applyMiddleware","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.58430cd4.chunk.js","sourcesContent":["// REQUEST\r\nexport const ESTADO_REQUEST_EXITO           = 'ESTADO_REQUEST_EXITO'\r\nexport const ESTADO_REQUEST_NO_AUTORIZADO   = 'ESTADO_REQUEST_NO_AUTORIZADO'\r\nexport const ESTADO_REQUEST_NO_EXISTE       = 'ESTADO_REQUEST_NO_EXISTE'\r\nexport const ESTADO_REQUEST_ERROR_SERVIDOR  = 'ESTADO_REQUEST_ERROR_SERVIDOR'\r\nexport const ESTADO_REQUEST_DESCONOCIDO     = 'ESTADO_REQUEST_DESCONOCIDO'\r\n","import {\r\n    ESTADO_REQUEST_EXITO,\r\n    ESTADO_REQUEST_NO_AUTORIZADO,\r\n    ESTADO_REQUEST_ERROR_SERVIDOR,\r\n    ESTADO_REQUEST_NO_EXISTE,\r\n    ESTADO_REQUEST_DESCONOCIDO\r\n} from \"../../Constantes/EstadoRequest/EstadoRequest\";\r\n\r\nconst INIT_STATE = {\r\n    init_estadoRequest  : 0,\r\n    init_request    : false\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case ESTADO_REQUEST_EXITO: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest : action.payload,\r\n            init_request       : true\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_NO_AUTORIZADO: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_NO_EXISTE: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_ERROR_SERVIDOR: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    case ESTADO_REQUEST_DESCONOCIDO: {\r\n        return {\r\n            ...state,\r\n            init_estadoRequest: action.payload,\r\n            init_request : false\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\nexport const MOSTRAR_FORMULARIO_LOGIN = 'MOSTRAR_FORMULARIO_LOGIN'\r\nexport const OBTENER_LOGIN = 'OBTENER_LOGIN'","import {\r\n    MOSTRAR_FORMULARIO_LOGIN,\r\n    OBTENER_LOGIN\r\n} from \"../../../Constantes/Login/Login\";\r\n\r\nconst INIT_STATE = {\r\n    mostrarFormularioLogin : false,\r\n    cargando     : false,\r\n    LoginUsuid   : localStorage.getItem('usuid'),\r\n    LoginUsuario : {},\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case MOSTRAR_FORMULARIO_LOGIN: {\r\n        return {\r\n            ...state,\r\n            mostrarFormularioLogin : action.payload\r\n        }\r\n    }\r\n    case OBTENER_LOGIN: {\r\n        return {\r\n            ...state,\r\n            LoginUsuid   : action.payload.usuid,\r\n            LoginUsuario : action.payload.usuario\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\nexport const COMUNES_CARGANDO_PAGINA = 'COMUNES_CARGANDO_PAGINA'\r\nexport const COMUNES_MOSTRAR_MENU = 'COMUNES_MOSTRAR_MENU'\r\nexport const COMUNES_CARGANDO_PAGINA_INICIO = 'COMUNES_CARGANDO_PAGINA_INICIO'","import {\r\n    COMUNES_CARGANDO_PAGINA,\r\n    COMUNES_MOSTRAR_MENU,\r\n    COMUNES_CARGANDO_PAGINA_INICIO,\r\n} from \"../../../Constantes/Comunes/Comunes\";\r\n\r\nconst INIT_STATE = {\r\n    ComunesCargandoPagina : true,\r\n    ComunesCargandoPaginaInicio : true,\r\n    ComunesMostrarMenu : false,\r\n    ComunesOcultarMenu : false\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case COMUNES_CARGANDO_PAGINA_INICIO : {\r\n        return {\r\n            ...state,\r\n            ComunesCargandoPaginaInicio : action.payload\r\n        }\r\n    }\r\n    case COMUNES_CARGANDO_PAGINA: {\r\n        return {\r\n            ...state,\r\n            ComunesCargandoPagina : action.payload\r\n        }\r\n    }\r\n    case COMUNES_MOSTRAR_MENU: {\r\n        return {\r\n            ...state,\r\n            ComunesMostrarMenu : action.payload.mostrarmenu,\r\n            ComunesOcultarMenu : action.payload.ocultarmenu,\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport EstadoRequest from './EstadoRequest'\r\nimport Login from './Login/Login'\r\nimport Comunes from './Comunes/Comunes'\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  estadoRequest : EstadoRequest,\r\n  login : Login,\r\n  comunes : Comunes,\r\n});\r\n\r\nexport default createRootReducer\r\n","import createSagaMiddleware from \"redux-saga\";\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../Reducers'\r\n\r\nconst createBrowserHistory = require('history').createBrowserHistory;\r\nexport const history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [thunk,sagaMiddleware, routeMiddleware];\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    composeEnhancers( \r\n      // applyMiddleware(thunk)\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        ...middlewares\r\n      ),\r\n    )\r\n  )\r\n\r\n  // sagaMiddleware.run(rootSaga);\r\n  return store\r\n}","export default __webpack_public_path__ + \"static/media/bg-01.a13f3587.jpg\";","export default {\r\n    // api: 'http://backend-endulzate.gavsistemas.com/',\r\n    // apiTicket: 'https://pre-back.leadsmartview.com/',\r\n\r\n    api: 'http://backend-endulzate.gavsistemas.com/',\r\n    apiTicket: 'http://localhost/',\r\n\r\n    basename: '/',\r\n    produccion: true\r\n};\r\n","import {\r\n    COMUNES_CARGANDO_PAGINA,\r\n    COMUNES_MOSTRAR_MENU,\r\n    COMUNES_CARGANDO_PAGINA_INICIO\r\n} from \"../../../Constantes/Comunes/Comunes\";\r\n\r\nexport const CargandoPaginaReducer = (accion) => {\r\n    return {\r\n        type: COMUNES_CARGANDO_PAGINA,\r\n        payload: accion\r\n    }\r\n}\r\n\r\nexport const CargandoPaginaInicioReducer = (accion) => {\r\n    return {\r\n        type: COMUNES_CARGANDO_PAGINA_INICIO,\r\n        payload: accion\r\n    }\r\n}\r\n\r\nexport const MostrarMenuReducer = (accion) => async (dispatch) => {\r\n\r\n    if(accion == true){\r\n        dispatch({\r\n            type: COMUNES_MOSTRAR_MENU,\r\n            payload: {\r\n                mostrarmenu : accion,\r\n                ocultarmenu : false\r\n            }\r\n        })\r\n    }else{\r\n        dispatch ({\r\n            type: COMUNES_MOSTRAR_MENU,\r\n            payload: {\r\n                mostrarmenu : true,\r\n                ocultarmenu : true\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch ({\r\n                type: COMUNES_MOSTRAR_MENU,\r\n                payload: {\r\n                    mostrarmenu : false,\r\n                    ocultarmenu : false\r\n                }\r\n            })\r\n        }, 1000);\r\n    }\r\n}","import {\r\n    ESTADO_REQUEST_EXITO,\r\n    ESTADO_REQUEST_NO_AUTORIZADO,\r\n    ESTADO_REQUEST_ERROR_SERVIDOR,\r\n    ESTADO_REQUEST_NO_EXISTE,\r\n    ESTADO_REQUEST_DESCONOCIDO\r\n} from \"../../Constantes/EstadoRequest/EstadoRequest\";\r\nimport {CargandoPaginaReducer} from './Comunes/Comunes'\r\n\r\n// REDUCER -> ENVIAR LA DATA DE FETCH A UNA CONSTANTE O ESTADO\r\nexport const estadoRequestReducer = (estado) => (dispatch) => {\r\n    dispatch(CargandoPaginaReducer(false))\r\n    if(estado === 200){\r\n        dispatch({\r\n            type: ESTADO_REQUEST_EXITO,\r\n            payload: estado\r\n        })\r\n    }else if(estado === 401){\r\n        dispatch ({\r\n            type: ESTADO_REQUEST_NO_AUTORIZADO,\r\n            payload: estado\r\n        })\r\n    }else if(estado === 404){\r\n        \r\n        dispatch({\r\n            type: ESTADO_REQUEST_NO_EXISTE,\r\n            payload: estado\r\n        })\r\n        \r\n    }else if(estado === 500){\r\n        dispatch({\r\n            type: ESTADO_REQUEST_ERROR_SERVIDOR,\r\n            payload: estado\r\n        })\r\n    }else{\r\n        dispatch({\r\n            type: ESTADO_REQUEST_DESCONOCIDO,\r\n            payload: estado\r\n        })\r\n    }\r\n};","import {\r\n    MOSTRAR_FORMULARIO_LOGIN,\r\n    OBTENER_LOGIN\r\n} from \"../../../Constantes/Login/Login\";\r\nimport config from '../../../config'\r\nimport { estadoRequestReducer } from \"../EstadoRequest\"\r\nimport { CargandoPaginaReducer, CargandoPaginaInicioReducer } from \"../Comunes/Comunes\"\r\n\r\nexport const MostrarFormularioReducer = (accion) => {\r\n    return {\r\n        type: MOSTRAR_FORMULARIO_LOGIN,\r\n        payload: accion\r\n    }\r\n}\r\n\r\nexport const LoginReducer = (usuario) => async (dispatch, getState) => {\r\n\r\n    let respuesta = false\r\n    let mensaje = \"\"\r\n\r\n    dispatch(CargandoPaginaReducer(true))\r\n    dispatch(CargandoPaginaInicioReducer(true))\r\n\r\n    await fetch(config.api+'api/versiondos/login',\r\n\t\t{\r\n\t\t\tmode:'cors',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(usuario),\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept' : 'application/json',\r\n\t\t\t\t'Content-type' : 'application/json'\r\n\t\t\t}\r\n      \t}\r\n    )\r\n    .then( async res => {\r\n\t\tawait dispatch(estadoRequestReducer(res.status))\r\n\t\treturn res.json()\r\n    })\r\n    .then(data => {\r\n\t\tconst estadoRequest = getState().estadoRequest.init_request\r\n\t\tif(estadoRequest === true){\r\n            respuesta = data.respuesta\r\n            mensaje = data.mensaje\r\n\t\t\tif(data.respuesta === true){\r\n\t\t\t\tlocalStorage.setItem('usuario', usuario.usuario)\r\n\t\t\t\tlocalStorage.setItem('contrasenia', usuario.contrasenia)\r\n\r\n\t\t\t\tlocalStorage.setItem('usuid', data.datos.usuid)\r\n\t\t\t\tlocalStorage.setItem('usutoken', data.datos.usutoken)\r\n\t\t\t\tlocalStorage.setItem('usuusuario', data.datos.usuusuario)\r\n\t\t\t\tlocalStorage.setItem('pernombre', data.datos.pernombre)\r\n\t\t\t\t// localStorage.setItem('tpuprivilegio', data.datos.tpuprivilegio)\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: OBTENER_LOGIN,\r\n\t\t\t\t\tpayload: {\r\n                        usuid   : data.datos.usuid,\r\n                        usuario : data.datos\r\n                    }\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: OBTENER_LOGIN,\r\n\t\t\t\t\tpayload: {\r\n                        usuid   : null,\r\n                        usuario : {}\r\n                    }\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}else{\r\n            respuesta = false\r\n            mensaje = \"Lo sentimos, login corrupto\"\r\n\r\n            dispatch({\r\n                type: OBTENER_LOGIN,\r\n                payload: {\r\n                    usuid   : null,\r\n                    usuario : {}\r\n                }\r\n            });\r\n        }\r\n    }).catch((error)=> {\r\n        respuesta = false\r\n        mensaje = error\r\n\r\n        console.log(error)\r\n        dispatch({\r\n            type: OBTENER_LOGIN,\r\n            payload: {\r\n                usuid   : null,\r\n                usuario : {}\r\n            }\r\n        });\r\n    });\r\n\r\n    return {\r\n        respuesta : respuesta,\r\n        mensaje : mensaje\r\n    }\r\n}\r\n\r\nexport const CerrarSesionReducer = () => async (dispatch, getState) => {\r\n    localStorage.removeItem('usuario')\r\n    localStorage.removeItem('contrasenia')\r\n    localStorage.removeItem('usuid')\r\n    localStorage.removeItem('usutoken')\r\n    localStorage.removeItem('usuusuario')\r\n    localStorage.removeItem('pernombre')\r\n    // localStorage.removeItem('tpuprivilegio')\r\n    dispatch ({\r\n        type: OBTENER_LOGIN,\r\n        payload: {\r\n            usuid   : null,\r\n            usuario : {}\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const ValidarUsuarioConectadoReducer = () => async (dispatch, getState) => {\r\n\r\n    // console.log(\"LOCAL STORAGE:\")\r\n    // console.log(localStorage.getItem('otros'))\r\n\r\n    if(localStorage.getItem('usuid')){\r\n        console.log('SI EXISTE')\r\n        // console.log(localStorage.getItem('usuid'))\r\n        // console.log(localStorage.getItem('contrasenia'))\r\n        await dispatch(LoginReducer({usuario: localStorage.getItem('usuario'), contrasenia: localStorage.getItem('contrasenia')}))\r\n\r\n    }else{\r\n        console.log('no existe')\r\n        \r\n    }\r\n\r\n    dispatch(CargandoPaginaInicioReducer(false))\r\n    dispatch(CargandoPaginaReducer(false))\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport { LoginReducer } from \"../../Redux/Actions/Login/Login\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst BtnEnviarLogin = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n\r\n    const enviarData = async () => {\r\n        \r\n        let login = await dispatch(LoginReducer({\r\n            \"usuario\" : props.usuario,\r\n            \"contrasenia\" : props.contrasenia,\r\n        }))\r\n        if(login.respuesta === true){\r\n            addToast(login.mensaje, { appearance: 'success', autoDismiss: true});\r\n            window.location.reload(true);\r\n        }else{\r\n            addToast(login.mensaje, { appearance: 'error', autoDismiss: true});\r\n        }\r\n        console.log(login)\r\n        \r\n    };\r\n\r\n    return (\r\n        <div class=\"container-login100-form-btn\">\r\n            <button \r\n                type=\"submit\" class=\"login100-form-btn\"\r\n                onClick={enviarData}\r\n                // onClick={() => this.enviarData()}\r\n            >\r\n                Iniciar Sesións\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnEnviarLogin\r\n","import React, {Component} from 'react';\r\nimport '../../Estilos/Login/Login.css'\r\nimport bg01 from '../../Assets/assetsLogin/images/bg-01.jpg'\r\nimport BtnEnviarLogin from './BtnEnviarLogin'\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            input_usuario : \"\",\r\n            input_contrasenia : \"\"\r\n        };\r\n    }\r\n\r\n    capturarCambioInput(e){\r\n        let variable = e.target.name\r\n        this.setState({\r\n            [variable] : e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"limiter\">\r\n                    <div class=\"container-login100\">\r\n                        <div class=\"wrap-login100\">\r\n                            <div class=\"login100-form validate-form\">\r\n                                <span class=\"login100-form-title p-b-34\">\r\n                                    Endulzate | Iniciar Sesión\r\n                                </span>\r\n                                \r\n                                <div class=\"wrap-input100 rs1-wrap-input100 validate-input m-b-20\" data-validate=\"Type user name\">\r\n                                    <input \r\n                                        id=\"first-name\" class=\"input100\" type=\"text\" name=\"input_usuario\" placeholder=\"User name\" \r\n                                        onChange={(e) => this.capturarCambioInput(e)}\r\n                                    />\r\n                                    <span class=\"focus-input100\"></span>\r\n                                </div>\r\n                                <div class=\"wrap-input100 rs2-wrap-input100 validate-input m-b-20\" data-validate=\"Type password\">\r\n                                    <input \r\n                                        class=\"input100\" type=\"password\" name=\"input_contrasenia\" placeholder=\"Contraseña\" \r\n                                        onChange={(e) => this.capturarCambioInput(e)}\r\n                                    />\r\n                                    <span class=\"focus-input100\"></span>\r\n                                </div>\r\n                                \r\n                                <BtnEnviarLogin \r\n                                    usuario = {this.state.input_usuario}\r\n                                    contrasenia = {this.state.input_contrasenia}\r\n                                />\r\n                                <div class=\"w-full text-center p-t-27 p-b-239\">\r\n                                    <a href=\"#\" class=\"txt2\">\r\n                                        Usuario / contraseña?\r\n                                    </a>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"login100-more\" style={{backgroundImage: \"url(\"+bg01+\")\"}}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }}\r\nexport default Login\r\n","import React, { Component } from 'react'\r\nimport Loader from 'react-loader-spinner'\r\n\r\n export default class Loading extends React.Component {\r\n  //other logic\r\n    render() {\r\n     return(\r\n      <Loader\r\n         type       = \"ThreeDots\"\r\n         color      = \"#00BFFF\"\r\n         height     = {50}\r\n         width      = {50}\r\n         timeout    = {3000} //3 secs\r\n\r\n      />\r\n     );\r\n    }\r\n }","import React from 'react'\r\nimport {Component} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './cerrarCaja.css'\r\n// Confirmar\r\nimport confirmarFuncion from '../../extras/confirmarFuncion'\r\n\r\n// Loading\r\nimport Loading from '../../extras/loading'\r\n\r\n// TOAST\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../../config'\r\n\r\nclass CerrarCajaVentaComponente extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            totalCerro            : '',\r\n            observacionesCierre   : '',\r\n\r\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\r\n            colorToastSuccess   : 'rgba(76,208,76,0.7)',\r\n            \r\n            imprimir            : 0,\r\n\r\n            mostrarErrorInput : false\r\n\r\n        }\r\n        this.getCambioTotalCerro        = this.getCambioTotalCerro.bind(this);\r\n        this.getCambioObservacionCierre = this.getCambioObservacionCierre.bind(this);\r\n        this.activarConfirmacion        = this.activarConfirmacion.bind(this);\r\n        this.sendCierreCajaVenta        = this.sendCierreCajaVenta.bind(this);\r\n\r\n    }\r\n\r\n    getCambioTotalCerro(e){\r\n\r\n        let numeros = parseFloat(this.props.totalCierre).toFixed(2)\r\n\r\n        const {name , value} = e.target;\r\n        \r\n        if(numeros != value){\r\n            this.setState({\r\n                mostrarErrorInput : true\r\n            })\r\n        }else{\r\n            this.setState({\r\n                mostrarErrorInput : false\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            totalCerro  : value\r\n        })\r\n    }\r\n\r\n    getCambioObservacionCierre(e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            observacionesCierre : value\r\n        })\r\n\r\n    }\r\n\r\n    activarConfirmacion(numeroImpresion){\r\n        this.setState({\r\n            imprimir : numeroImpresion\r\n        })\r\n\r\n        this.props.modalCerrarCajaVenta();\r\n        confirmarFuncion(\r\n            \"CERRAR CAJA\",\r\n            \"Al confirmar esta acción no podremos realizar mas ventas, hasta volver abrir caja\",\r\n            this.sendCierreCajaVenta\r\n        );\r\n    }\r\n\r\n    sendCierreCajaVenta(){ //SI IMPRIMIR ES 1 IMPRIMIR, SI NO, NO IMPRIMIR\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>CERRANDO CAJA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        ).then(() => {\r\n                fetch(config.api+`/caja/venta/cierre`,\r\n                    {\r\n                        method: 'POST',\r\n                        body: JSON.stringify({\r\n                            // '_token'                 : csrf_token,\r\n                            'idCajaVenta'            : this.props.idCajaVenta,    \r\n                            'totalCerro'             : this.state.totalCerro,\r\n                            'observacionCierre'      : this.state.observacionesCierre,\r\n                        }),\r\n                        headers: {\r\n                            'Accept'        : 'application/json',\r\n                            'Content-Type'  : 'application/json',\r\n                            'usuid'         : localStorage.getItem('usuid')\r\n                        }\r\n                    }\r\n                )\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    \r\n                    console.log(data)\r\n                    if(data['respuesta']){\r\n                        cogoToast.success(\r\n                            <div>\r\n                                <h4>LA CAJA SE CERRO SATISFACTORIAMENTE</h4>\r\n                            </div>, \r\n                            {\r\n                              position: 'top-right'\r\n                            }\r\n                        );\r\n                        // this.props.activarToast('El cierre de caja fue exitoso', this.state.colorToastSuccess);\r\n                        this.setState({\r\n                            totalCerro              : '',\r\n                            observacionesCierre     : '',\r\n                        });\r\n\r\n                        if(this.state.imprimir == 1){\r\n                            let url = `http://localhost/api/imprimir/cierreCaja/`+data['idCaja'];\r\n                            cogoToast.loading(\r\n                                <div>\r\n                                    <h4>IMPRIMIENDO CIERRE DE CAJA</h4>\r\n                                </div>, \r\n                                {\r\n                                    position: 'top-right'\r\n                                }\r\n                                \r\n                            )\r\n                            .then(() => {\r\n                                fetch(\r\n                                    url\r\n                                )\r\n                                .then(\r\n                                    res => res.json()\r\n                                )\r\n                                .then(\r\n                                    data => {\r\n                                        if(data['respuesta']){\r\n                                            cogoToast.success(\r\n                                                <div>\r\n                                                    <h4>COPIA DE CIERRE DE CAJA FINALIZADA</h4>\r\n                                                </div>, \r\n                                                {\r\n                                                position: 'top-right'\r\n                                                }\r\n                                            );\r\n                                        }else{\r\n                                            cogoToast.error(\r\n                                                <div>\r\n                                                    <h4>NO SE PUDO CONECTAR CON LA IMPRESORA</h4>\r\n                                                </div>, \r\n                                                {\r\n                                                position: 'top-right'\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                )\r\n                            });\r\n                        }\r\n\r\n                        this.props.getEstadoCajaVent();\r\n\r\n                    }else{\r\n                        cogoToast.error(\r\n                            <div>\r\n                                <h4>HUBO UN PROBLEMA AL MOMENTO DE CERRAR CAJA</h4>\r\n                            </div>, \r\n                            {\r\n                              position: 'top-right'\r\n                            }\r\n                        );\r\n                        // this.props.activarToast('Hubo un problema al momento de cerrar caja', this.state.colorToastDanger)\r\n                    }\r\n                    \r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"card card-default\">\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <label>SUCURSAL</label>\r\n                                    <h4 className=\"card-title\">{this.props.sucursalNombre} </h4>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <label>USUARIO CONECTADO</label>\r\n                                    <h4 className=\"card-title\"> {this.props.usuarioNombre} </h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\" >\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <label>DINERO APERTURADO</label>\r\n                                    <h4 className=\"card-title\">{this.props.totalApertura } </h4>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <label>DINERO CON EL QUE SE APERTURO</label>\r\n                                    <h4 className=\"card-title\">{this.props.totalAperturo } </h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\" >\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <label>DINERO DE CIERRE DE CAJA</label>\r\n                                    {\r\n                                        this.props.loadModalCierreCajaVenta\r\n                                        ?<Loading\r\n                                        />\r\n                                        :<h4 className=\"card-title\">{parseFloat(this.props.totalCierre).toFixed(2) } </h4>\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\" >\r\n                            <div className=\"row\"> \r\n                                <div className=\"col-12\">\r\n                                    <label>Dinero para cerrar caja</label><br/>\r\n                                    <input \r\n                                        type        = \"number\" \r\n                                        \r\n                                        onChange    = {this.getCambioTotalCerro}\r\n                                        value       = {this.state.totalCerro}\r\n                                        autoFocus\r\n                                        id={\r\n                                            this.state.mostrarErrorInput == true\r\n                                            ?\"Input-Cerrar-Caja-Error\"\r\n                                            :\"Input-Cerrar-Caja\"\r\n                                            \r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <label>Comentario (opcional)</label>\r\n                                    <textarea \r\n                                        className   = \"form-control\" \r\n                                        rows        = \"3\" \r\n                                        placeholder = \"Comentario\"\r\n                                        onChange    = {this.getCambioObservacionCierre}\r\n                                        value       = {this.state.observacionesCierre}\r\n                                    >\r\n\r\n                                    </textarea>\r\n                                </div>                                        \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <h4 className=\"card-title\">Si el dinero en la caja no cuadra con el del sistema, ingresar sin preocupaciones, dejando un comentario del asunto o acción realizada</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group boton\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"addexis form-control btn btn-block btn-danger btn-lg\" \r\n                                        id=\"crearProducto\" \r\n                                        onClick     = {\r\n                                            () => this.activarConfirmacion(1)\r\n                                        }\r\n                                    >\r\n                                        CERRAR E IMPRIMIR CAJA</button>\r\n                                </div>\r\n\r\n                                <div className=\"col-6\">\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"addexis form-control btn btn-block btn-danger btn-lg\" \r\n                                        onClick     = {\r\n                                            () => this.activarConfirmacion(0)\r\n                                        }\r\n                                    >\r\n                                        CERRAR CAJA</button>\r\n                                </div>\r\n                                {/* <div className=\"col-6\">\r\n                                    <Link to=\"/almacen\">\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"addexis form-control btn btn-block btn-info btn-lg\" \r\n                                            \r\n                                            >\r\n                                            VISUALIZAR CAJA</button>\r\n                                    </Link>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         ) \r\n    }\r\n\r\n}\r\n\r\nexport default CerrarCajaVentaComponente","import React from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nexport default function(titulo, descripcion, funcion)\r\n{\r\n\r\n    confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className=\"page-content container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className='card'>\r\n                                <div className=\"card-body\">\r\n                                    <h1>{titulo}</h1>\r\n                                    <p>{descripcion}</p>\r\n                                    <div className=\"form-group boton\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <button \r\n                                                    type=\"button\"\r\n                                                    onClick={() => {\r\n                                                        funcion();\r\n                                                        onClose();\r\n                                                    }}\r\n                                                    className=\"btn waves-effect waves-light btn-block btn-info\">\r\n                                                        ACEPTAR\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <button \r\n                                                    type=\"button\" \r\n                                                    onClick={() => {\r\n                                                        onClose();\r\n                                                    }}\r\n                                                    className=\"btn waves-effect waves-light btn-block btn-danger\">\r\n                                                        CANCELAR\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n\r\n} \r\n","export default __webpack_public_path__ + \"static/media/logo-icon.aa66cde1.png\";","export default __webpack_public_path__ + \"static/media/logo-light-icon.99704e51.png\";","export default __webpack_public_path__ + \"static/media/logo-text.ebec6fa3.png\";","export default __webpack_public_path__ + \"static/media/logo-light-text.981f470a.png\";","export default __webpack_public_path__ + \"static/media/1.af3753e4.jpg\";","import React from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport { CerrarSesionReducer } from \"../../../Redux/Actions/Login/Login\"\r\n\r\nconst BtnCerrarSesion = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <a \r\n            onClick={() => dispatch(CerrarSesionReducer())}\r\n            className=\"dropdown-item\" href=\"#\">\r\n                <i className=\"fa fa-power-off mr-1 ml-1\"></i> \r\n                Salir\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default BtnCerrarSesion\r\n","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport CerrarCajaVentaComponente from './cerrarCajaVenta'\r\nimport { Link } from 'react-router-dom'\r\nimport cogoToast from 'cogo-toast';\r\nimport LogoIcon from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-icon.png'\r\nimport LogoLightIcon from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-light-icon.png'\r\nimport LogoText from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-text.png'\r\nimport LogoTextLight from '../../../Assets/assetsAdminTemplate/assets/images/logos/logo-light-text.png'\r\nimport User1 from '../../../Assets/assetsAdminTemplate/assets/images/users/1.jpg'\r\nimport config from '../../../config'\r\nimport BtnCerrarSesion from './BtnCerrarSesion'\r\n\r\nclass Top extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            // variables de la apertura de la caja\r\n            idCajaVenta             : '',\r\n            sucursalNombre          : '',\r\n            usuarioNombre           : '',\r\n            totalApertura           : '',\r\n            totalAperturo           : '',\r\n            observacionesApertura   : '',\r\n            totalCierre             : '',\r\n\r\n            registrarGastoIngreso   : '',\r\n            motivoGastoIngreso      : '',\r\n\r\n            // Estado de la caja\r\n            estadoCajaVenta              : true,  // false = NO SE SABE EL ESTADO DE LA CAJA DE VENTA, TRUE = SI SABEMOS\r\n            cerrarAbrirCajaVenta         : false, // false = ABRIR CAJARA, TRUE = CERRAR CAJA\r\n            txt_btn_abriCerrarCaja       : 'ABRIR CAJA',\r\n\r\n            //modal\r\n            estadoModalAbrirCajaVenta    : false,\r\n            estadoModalCerrarCajaVenta   : false,\r\n            estadoModalRegistrarGasto    : false,\r\n            estadoModalRegistrarIngreso  : false,\r\n\r\n            // \r\n\r\n            // TOAST\r\n            estadoToast         : false,\r\n            mensajeToast        : '',\r\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\r\n            colorToastSuccess   : 'rgba(76,208,76,0.7)',\r\n            colorToast          : '',\r\n\r\n            // LOADING\r\n            loadModalCierreCajaVenta    : true,\r\n        }\r\n        this.modalAbrirCajaVenta    = this.modalAbrirCajaVenta.bind(this);\r\n        this.modalCerrarCajaVenta   = this.modalCerrarCajaVenta.bind(this);\r\n        this.getEstadoCajaVent      = this.getEstadoCajaVent.bind(this);\r\n        this.abrirCerrarCajaVenta   = this.abrirCerrarCajaVenta.bind(this);\r\n        this.getCambioTotalAperturo = this.getCambioTotalAperturo.bind(this);\r\n        this.getCambioObservacion   = this.getCambioObservacion.bind(this);\r\n        this.sendAbrirCaja          = this.sendAbrirCaja.bind(this);\r\n        this.sendRegistrarGasto     = this.sendRegistrarGasto.bind(this);\r\n        this.modalRegistrarGasto    = this.modalRegistrarGasto.bind(this);\r\n        this.getCambioGastoIngreso          = this.getCambioGastoIngreso.bind(this);\r\n        this.getCambioMotivoGastoIngreso    = this.getCambioMotivoGastoIngreso.bind(this);\r\n        this.sendRegistrarIngreso           = this.sendRegistrarIngreso.bind(this);\r\n        this.modalRegistrarIngreso          = this.modalRegistrarIngreso.bind(this);\r\n        this.activarToast                   = this.activarToast.bind(this);\r\n        this.getTotalCierreCajaVenta        = this.getTotalCierreCajaVenta.bind(this);\r\n        this.fetchImprimirAlmacen        = this.fetchImprimirAlmacen.bind(this);\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.getEstadoCajaVent()\r\n\r\n    }\r\n\r\n    getEstadoCajaVent(){\r\n        fetch(config.api+`/caja/venta/estado`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            \r\n            console.log(data)\r\n            let texto;\r\n            let contenedor  = document.querySelector(\"#btn_abrirCerrarCaja\");\r\n            \r\n            if(data['respuesta'] == true){\r\n                contenedor.classList.remove(\"btn-primary\");\r\n                contenedor.classList.add(\"btn-danger\");\r\n                texto = \"CERRAR CAJA\"\r\n\r\n                let cajaVenta   = data['cajaVenta'];\r\n                this.setState({\r\n                    idCajaVenta             : cajaVenta['idCajaVenta'],\r\n                    totalAperturo           : cajaVenta['totalAperturo'],\r\n                    totalCierre             : cajaVenta['totalCierre'],\r\n                })\r\n\r\n            }else{\r\n                contenedor.classList.remove(\"btn-danger\");\r\n                contenedor.classList.add(\"btn-primary\");\r\n                texto = \"ABRIR CAJA\";\r\n                console.log(\"abrirrrr caja\")\r\n\r\n            }\r\n            \r\n            this.setState({\r\n                cerrarAbrirCajaVenta    : data['respuesta'],\r\n                usuarioNombre           : data['nombreUsuario'],\r\n                sucursalNombre          : data['sucursalNombre'],\r\n                totalApertura           : data['totalApertura'],\r\n\r\n                estadoCajaVenta         : true,\r\n                txt_btn_abriCerrarCaja  : texto,\r\n\r\n                loadModalCierreCajaVenta    : false\r\n            });\r\n            \r\n        })\r\n    }\r\n\r\n    getTotalCierreCajaVenta(){\r\n        fetch(config.api+`/caja/venta/estado/totalcierre`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token'        : csrf_token,\r\n                    'idCajaVenta'   : this.state.idCajaVenta\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            \r\n            \r\n            this.setState({\r\n                \r\n                totalCierre               : data['totalCierre'],\r\n                loadModalCierreCajaVenta  : false\r\n            });\r\n            \r\n        })\r\n    }\r\n\r\n    abrirCerrarCajaVenta(){\r\n        console.log(this.state.cerrarAbrirCajaVenta)\r\n        if(this.state.cerrarAbrirCajaVenta){\r\n            this.modalCerrarCajaVenta();\r\n        }else{\r\n            this.modalAbrirCajaVenta()\r\n        }\r\n\r\n    }\r\n\r\n    modalAbrirCajaVenta() {\r\n        let texto;\r\n        let contenedor = document.querySelector(\"#btn_abrirCerrarCaja\");\r\n                \r\n        if(this.state.estadoModalAbrirCajaVenta){\r\n            contenedor.classList.remove(\"btn-info\");\r\n            contenedor.classList.add(\"btn-primary\");\r\n            texto = \"ABRIR CAJA\"\r\n\r\n        }else{\r\n            contenedor.classList.remove(\"btn-primary\");\r\n            contenedor.classList.add(\"btn-info\");\r\n            texto = \"CONFIGURANDO CAJA\"\r\n            \r\n        }\r\n\r\n        this.setState({\r\n            estadoModalAbrirCajaVenta  : !this.state.estadoModalAbrirCajaVenta,\r\n            txt_btn_abriCerrarCaja      : texto\r\n        });\r\n        \r\n    }\r\n\r\n    modalCerrarCajaVenta() {\r\n        this.getTotalCierreCajaVenta();\r\n        let texto;\r\n        let contenedor = document.querySelector(\"#btn_abrirCerrarCaja\");\r\n                \r\n        if(this.state.estadoModalCerrarCajaVenta){\r\n            contenedor.classList.remove(\"btn-info\");\r\n            contenedor.classList.add(\"btn-danger\");\r\n            texto = \"CERRAR CAJA\"\r\n\r\n        }else{\r\n            contenedor.classList.remove(\"btn-danger\");\r\n            contenedor.classList.add(\"btn-info\");\r\n            texto = \"VISUALIZANDO CAJA\"\r\n            \r\n        }\r\n\r\n        this.setState({\r\n            estadoModalCerrarCajaVenta  : !this.state.estadoModalCerrarCajaVenta,\r\n            txt_btn_abriCerrarCaja      : texto,\r\n\r\n            loadModalCierreCajaVenta    : true\r\n        });\r\n        \r\n    }\r\n\r\n    getCambioTotalAperturo(e){\r\n        const {name , value} = e.target;\r\n        \r\n        this.setState({\r\n            totalAperturo  : value\r\n        })\r\n    }\r\n\r\n    getCambioObservacion(e){\r\n        const {name , value} = e.target;\r\n        \r\n        this.setState({\r\n            observacionesApertura  : value\r\n        })\r\n    }\r\n\r\n    sendAbrirCaja(imprimir){ //SI IMPRIMIR ES 1 IMPRIMIR, SI NO, NO IMPRIMIR\r\n        this.modalAbrirCajaVenta();\r\n        \r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>APERTURANDO CAJA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(config.api+`/caja/venta/aperturar`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token'                    : csrf_token,\r\n                        'observacionesApertura'     : this.state.observacionesApertura,    \r\n                        'totalApertura'             : this.state.totalApertura,\r\n                        'totalAperturo'             : this.state.totalAperturo,\r\n                    }),\r\n                    headers: {\r\n                        'Accept'        : 'application/json',\r\n                        'Content-Type'  : 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                \r\n                if(data['respuesta']){\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>LA APERTURA DE CAJA FUE EXITOSA</h4>\r\n                        </div>, \r\n                        {\r\n                        position: 'top-right'\r\n                        }\r\n                    );\r\n                    this.setState({\r\n                        // estadoModalAbrirCajaVenta  : !this.state.estadoModalAbrirCajaVenta,\r\n                        totalAperturo              : '',\r\n                        observacionesApertura      : '',\r\n                    });\r\n\r\n                    if(imprimir == 1){\r\n                        let url = `http://localhost/api/imprimir/aperturarCaja/`+data['idCaja'];\r\n                        cogoToast.loading(\r\n                            <div>\r\n                                <h4>IMPRIMIENDO APERTURA DE CAJA</h4>\r\n                            </div>, \r\n                            {\r\n                                position: 'top-right'\r\n                            }\r\n                            \r\n                        )\r\n                        .then(() => {\r\n                            fetch(\r\n                                url\r\n                            )\r\n                            .then(\r\n                                res => res.json()\r\n                            )\r\n                            .then(\r\n                                data => {\r\n                                    if(data['respuesta']){\r\n                                        cogoToast.success(\r\n                                            <div>\r\n                                                <h4>COPIA DE APERTURA DE CAJA FINALIZADA</h4>\r\n                                            </div>, \r\n                                            {\r\n                                            position: 'top-right'\r\n                                            }\r\n                                        );\r\n                                    }else{\r\n                                        cogoToast.error(\r\n                                            <div>\r\n                                                <h4>NO SE PUDO CONECTAR CON LA IMPRESORA</h4>\r\n                                            </div>, \r\n                                            {\r\n                                            position: 'top-right'\r\n                                            }\r\n                                        );\r\n                                    }\r\n                                }\r\n                            )\r\n                        });\r\n                    }\r\n\r\n                    this.getEstadoCajaVent();\r\n\r\n                }else{\r\n                    this.modalAbrirCajaVenta()\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>HUBO UN PROBLEMA AL MOMENTO DE APERTURAR CAJA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    modalRegistrarGasto(){\r\n        console.log(this.state.estadoModalRegistrarGasto)\r\n        this.setState({\r\n            estadoModalRegistrarGasto  : !this.state.estadoModalRegistrarGasto,\r\n        })\r\n    }\r\n\r\n    modalRegistrarIngreso(){\r\n        this.setState({\r\n            estadoModalRegistrarIngreso  : !this.state.estadoModalRegistrarIngreso,\r\n        })\r\n    }\r\n\r\n    getCambioGastoIngreso(e){\r\n        const {name , value} = e.target;\r\n        \r\n        this.setState({\r\n            registrarGastoIngreso  : value\r\n        })\r\n    }\r\n\r\n    getCambioMotivoGastoIngreso(e){\r\n        const {name , value} = e.target;\r\n        \r\n        this.setState({\r\n            motivoGastoIngreso  : value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    sendRegistrarGasto(){\r\n        console.log(\"Datos enviados:\");\r\n        console.log(this.state.idCajaVenta);\r\n        console.log(this.state.registrarGastoIngreso);\r\n        console.log(this.state.motivoGastoIngreso);\r\n\r\n\r\n\r\n        fetch(config.api+`/gasto/registrar`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token'          : csrf_token,\r\n                    'idCajaVenta'     : this.state.idCajaVenta,    \r\n                    'gasto'           : this.state.registrarGastoIngreso,\r\n                    'motivo'          : this.state.motivoGastoIngreso,\r\n                }),\r\n                headers: {\r\n                    'Accept'        : 'application/json',\r\n                    'Content-Type'  : 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            \r\n            console.log(data)\r\n            if(data['respuesta']){\r\n                this.activarToast('El gasto fue registrado correctamente', this.state.colorToastSuccess);\r\n                this.setState({\r\n                    estadoModalRegistrarGasto  : !this.state.estadoModalRegistrarGasto,\r\n                    registrarGastoIngreso              : '',\r\n                    motivoGastoIngreso                : '',\r\n                });\r\n\r\n            }else{\r\n                this.activarToast('Hubo un problema al momento de registrar el gasto', this.state.colorToastDanger)\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    sendRegistrarIngreso(){\r\n        fetch(config.api+`/ingreso/registrar`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token'          : csrf_token,\r\n                    'idCajaVenta'     : this.state.idCajaVenta,    \r\n                    'ingreso'         : this.state.registrarGastoIngreso,\r\n                    'motivo'          : this.state.motivoGastoIngreso,\r\n                }),\r\n                headers: {\r\n                    'Accept'        : 'application/json',\r\n                    'Content-Type'  : 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            \r\n            console.log(data)\r\n            if(data['respuesta']){\r\n                this.activarToast('El ingreso fue registrado correctamente', this.state.colorToastSuccess);\r\n                this.setState({\r\n                    estadoModalRegistrarIngreso  : !this.state.estadoModalRegistrarIngreso,\r\n                    registrarGastoIngreso      : '',\r\n                    motivoGastoIngreso         : '',\r\n                });\r\n\r\n            }else{\r\n                this.activarToast('Hubo un problema al momento de registrar el ingreso', this.state.colorToastDanger)\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    activarToast(message, color) {\r\n        this.setState({\r\n            mensajeToast : message,\r\n            colorToast   : color,\r\n            estadoToast  : true\r\n        });\r\n    }\r\n\r\n    fetchImprimirAlmacen(){\r\n        let url = config.apiTicket+`/api/imprimir/almacen/`+localStorage.getItem('usuid');\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>IMPRIMIENDO ALMACEN</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'GET',\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>IMPRESIÓN CORRECTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>HUBO UN PROBLEMA AL IMPRIMIR LA VENTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"topbar\">\r\n                <nav className=\"navbar top-navbar navbar-expand-md navbar-dark\">\r\n                    <div className=\"navbar-header\">\r\n                        <a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"#\"><i className=\"ti-menu ti-close\"></i></a>\r\n                        <a className=\"navbar-brand d-block d-md-none\" href=\"#\">\r\n                            <b className=\"logo-icon\">\r\n                                <i className=\"wi wi-sunset\"></i> \r\n                                <img src={LogoIcon} alt=\"homepage\" className=\"dark-logo\" />\r\n                                <img src={LogoLightIcon} alt=\"homepage\" className=\"light-logo\" />\r\n                            </b>\r\n                            <span className=\"logo-text\">\r\n                                <img src={LogoText} alt=\"homepage\" className=\"dark-logo\" />\r\n                                <img src={LogoTextLight} className=\"light-logo\" alt=\"homepage\" />\r\n                            </span>\r\n                        </a>\r\n                        <div className=\"d-none d-md-block text-center\">\r\n                            <a className=\"sidebartoggler waves-effect waves-light d-flex align-items-center side-start\" href=\"#\" data-sidebartype=\"mini-sidebar\">\r\n                                <i className=\"mdi mdi-menu\"></i>\r\n                                <span className=\"navigation-text ml-3\"> Navegador</span>\r\n                            </a>\r\n                        </div>\r\n                        <a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"#\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"ti-more\"></i></a>\r\n                    </div>\r\n                    <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav float-left mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link navbar-brand d-none d-md-block\" href=\"#\">\r\n                                    <b className=\"logo-icon\">\r\n                                        <i className=\"wi wi-sunset\"></i>\r\n                                        <img src={LogoIcon} alt=\"homepage\" className=\"dark-logo\" />\r\n                                        <img src={LogoLightIcon} alt=\"homepage\" className=\"light-logo\" />\r\n                                    </b>\r\n                                    <span className=\"logo-text\">\r\n                                            <img src={LogoText} alt=\"homepage\" className=\"dark-logo\" />\r\n                                            <img src={LogoTextLight} className=\"light-logo\" alt=\"homepage\" />\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav float-right\">\r\n                            <li className=\"nav-item \">\r\n                                <div className=\"nav-link dropdown-toggle waves-effect waves-dark\" aria-expanded=\"false\">\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"btn waves-effect waves-light btn-rounded btn-warning\"\r\n                                        onClick={\r\n                                            this.fetchImprimirAlmacen\r\n                                        }\r\n                                        style={{\r\n                                            background:'green',\r\n                                            color:'white'\r\n                                        }}\r\n                                    >\r\n                                            Imprimir Almacen\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item \">\r\n                                <div className=\"nav-link dropdown-toggle waves-effect waves-dark\" aria-expanded=\"false\">\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"btn waves-effect waves-light btn-rounded btn-warning\"\r\n                                        onClick={\r\n                                            this.modalRegistrarIngreso\r\n                                        }\r\n                                        >\r\n                                            Registrar Ingreso\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item \">\r\n                                <div className=\"nav-link dropdown-toggle waves-effect waves-dark\" aria-expanded=\"false\">\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"btn waves-effect waves-light btn-rounded btn-warning\"\r\n                                        onClick={\r\n                                            this.modalRegistrarGasto\r\n                                        }\r\n                                    >\r\n                                            Registrar Gasto\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown mega-dropdown\">\r\n                                <div className=\"nav-link dropdown-toggle waves-effect waves-dark\" aria-expanded=\"false\">\r\n                                    {\r\n                                        this.state.estadoCajaVenta == true\r\n                                        ?<button \r\n                                            type=\"button\" \r\n                                            id=\"btn_abrirCerrarCaja\"\r\n                                            className=\"btn waves-effect waves-light btn-rounded btn-primary\"\r\n                                            onClick={this.abrirCerrarCajaVenta}\r\n                                            >\r\n                                                {this.state.txt_btn_abriCerrarCaja}\r\n                                        </button>\r\n                                        :<button>asd</button>\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle waves-effect waves-dark pro-pic\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <img src={User1} alt=\"user\" className=\"rounded-circle\" width=\"31\"/>\r\n                                    <span className=\"ml-2 user-text font-medium\">Endulzate</span><span className=\"fas fa-angle-down ml-2 user-text\"></span></a>\r\n\r\n                                <div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\r\n                                    <div className=\"d-flex no-block align-items-center p-3 mb-2 border-bottom\">\r\n                                        <div className=\"\"><img src={User1} alt=\"user\" className=\"rounded\" width=\"80\" /></div>\r\n                                        <div className=\"ml-2\">\r\n                                            <h4 className=\"mb-0\">Endulzate</h4>\r\n                                            <a href=\"#\" className=\"btn btn-sm btn-danger text-white mt-2 btn-rounded\">Ver perfil</a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <a className=\"dropdown-item\" href=\"#\"><i className=\"ti-user mr-1 ml-1\"></i> Mi perfil</a>\r\n\r\n                                    <BtnCerrarSesion />\r\n                                    \r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n            {/* MODAL DE ABRIR CAJA */}\r\n            <Modal\r\n                size=\"lg\"\r\n                show={this.state.estadoModalAbrirCajaVenta}\r\n                onHide={() => this.modalAbrirCajaVenta()}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        {this.state.txt_btn_abriCerrarCaja}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"card card-default\">\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <label>SUCURSAL</label>\r\n                                            <h4 className=\"card-title\">{this.state.sucursalNombre} </h4>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <label>USUARIO CONECTADO</label>\r\n                                            <h4 className=\"card-title\"> {this.state.usuarioNombre} </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\" >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <label>DINERO EN LA CAJA</label>\r\n                                            <h4 className=\"card-title\">{this.state.totalApertura } </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\" >\r\n                                    <div className=\"row\"> \r\n                                        <div className=\"col-12\">\r\n                                            <label>Dinero para abrir caja</label>\r\n                                            <input \r\n                                                type        = \"text\" \r\n                                                className   = \"form-control\" \r\n                                                onChange    = {this.getCambioTotalAperturo}\r\n                                                autoFocus\r\n                                                value       = {this.state.totalAperturo} \r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <label>Comentario (opcional)</label>\r\n                                            <textarea \r\n                                                className   = \"form-control\" \r\n                                                rows        = \"3\" \r\n                                                placeholder = \"Comentario\"\r\n                                                onChange    = {this.getCambioObservacion}\r\n                                                value       = {this.state.observacionesApertura}\r\n                                            >\r\n\r\n                                            </textarea>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <h4 className=\"card-title\">Si el dinero en la caja no cuadra con el del sistema, ingresar sin preocupaciones, dejando un comentario del asunto o acción realiza</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group boton\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <button \r\n                                                type=\"button\" \r\n                                                className=\"addexis form-control btn btn-block btn-success btn-lg\" \r\n                                                id=\"crearProducto\" \r\n                                                onClick={()=>this.sendAbrirCaja(1)}>\r\n                                                APERTURAR E IMPRIMIR CAJA</button>        \r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <button \r\n                                                type=\"button\" \r\n                                                className=\"addexis form-control btn btn-block btn-success btn-lg\" \r\n                                                id=\"crearProducto\" \r\n                                                onClick={()=>this.sendAbrirCaja(0)}>\r\n                                                APERTURAR CAJA</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n                \r\n\r\n\r\n                {/* MODAL DE CERRAR CAJA */}\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.estadoModalCerrarCajaVenta}\r\n                    onHide={() => this.modalCerrarCajaVenta()}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            {this.state.txt_btn_abriCerrarCaja}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {\r\n                            \r\n                            <CerrarCajaVentaComponente \r\n                                idCajaVenta     = {this.state.idCajaVenta}\r\n                                sucursalNombre  = {this.state.sucursalNombre}\r\n                                usuarioNombre   = {this.state.usuarioNombre}\r\n                                totalApertura   = {this.state.totalApertura}\r\n                                totalAperturo   = {this.state.totalAperturo}\r\n                                totalCierre     = {this.state.totalCierre}\r\n\r\n                                mensajeToast    = {this.state.mensajeToast}\r\n                                colorToast      = {this.state.colorToast}\r\n                                estadoToast     = {this.state.estadoToast}\r\n\r\n                                modalCerrarCajaVenta     = {this.modalCerrarCajaVenta}\r\n                                activarToast             = {this.activarToast}\r\n                                getEstadoCajaVent        = {this.getEstadoCajaVent}\r\n\r\n                                loadModalCierreCajaVenta =   {this.state.loadModalCierreCajaVenta}\r\n                            />\r\n                            \r\n                        }\r\n                        \r\n                        \r\n                    </Modal.Body>\r\n                </Modal>\r\n                \r\n                {/* MODAL DE REGISTRAR GASTO O INGRESO*/}\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.estadoModalRegistrarGasto}\r\n                    onHide={() => this.modalRegistrarGasto()}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            Registrar Gasto\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"card card-default\">\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"form-group\" >\r\n                                        <div className=\"row\"> \r\n                                            <div className=\"col-12\">\r\n                                                <label>Gasto en soles </label>\r\n                                                <input \r\n                                                    type        = \"text\" \r\n                                                    className   = \"form-control\" \r\n                                                    onChange    = {this.getCambioGastoIngreso}\r\n                                                    autoFocus\r\n                                                    value       = {this.state.registrarGastoIngreso} \r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Motivo del gasto</label>\r\n                                                <textarea \r\n                                                    className   = \"form-control\" \r\n                                                    rows        = \"3\" \r\n                                                    placeholder = \"Motivo del gasto\"\r\n                                                    onChange    = {this.getCambioMotivoGastoIngreso}\r\n                                                    value       = {this.state.motivoGastoIngreso}\r\n                                                >\r\n\r\n                                                </textarea>\r\n                                            </div>                                        \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group boton\">\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"addexis form-control btn btn-block btn-success btn-lg\" \r\n                                            onClick={()=>this.sendRegistrarGasto()}>\r\n                                            Registrar Gasto</button>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    </Modal>\r\n                    {/* MODAL DE REGISTRAR INGRESO*/}\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.estadoModalRegistrarIngreso}\r\n                        onHide={() => this.modalRegistrarIngreso()}\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        centered\r\n                        >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                                Registrar Ingreso\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"card card-default\">\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"form-group\" >\r\n                                            <div className=\"row\"> \r\n                                                <div className=\"col-12\">\r\n                                                    <label>Ingreso en soles </label>\r\n                                                    <input \r\n                                                        type        = \"text\" \r\n                                                        className   = \"form-control\" \r\n                                                        onChange    = {this.getCambioGastoIngreso}\r\n                                                        autoFocus\r\n                                                        value       = {this.state.registrarGastoIngreso} \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12\">\r\n                                                    <label>Motivo del ingreso de dinero</label>\r\n                                                    <textarea \r\n                                                        className   = \"form-control\" \r\n                                                        rows        = \"3\" \r\n                                                        placeholder = \"Motivo del gasto\"\r\n                                                        onChange    = {this.getCambioMotivoGastoIngreso}\r\n                                                        value       = {this.state.motivoGastoIngreso}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n                                                </div>                                        \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group boton\">\r\n                                            <button \r\n                                                type=\"button\" \r\n                                                className=\"addexis form-control btn btn-block btn-success btn-lg\" \r\n                                                onClick={()=>this.sendRegistrarIngreso()}>\r\n                                                Registrar Ingreso</button>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                        </Modal>\r\n\r\n                <Toast\r\n                    style={{\r\n                        position        : 'fixed',\r\n                        top             : 20,\r\n                        right           : 20,\r\n                        zIndex          :1060,\r\n                        backgroundColor : this.state.colorToast,\r\n                        color           :'white'\r\n                    }}\r\n                    onClose={() => this.setState({\r\n                        estadoToast: false\r\n                    })}\r\n                    show    ={this.state.estadoToast}\r\n                    delay   ={2500}\r\n                    autohide\r\n                    >\r\n                    <Toast.Body>\r\n                    <h3>{this.state.mensajeToast}</h3>\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </header>\r\n            \r\n        )\r\n    }  \r\n}\r\n\r\nexport default Top\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport User1 from '../../Assets/assetsAdminTemplate/assets/images/users/1.jpg'\r\nimport config from '../../config'\r\n\r\nclass Sidebar extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n\r\n\r\n        }\r\n        this.fetchLogout               = this.fetchLogout.bind(this);\r\n\r\n    }\r\n    fetchLogout(){\r\n        fetch(config.api+`/logout`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            window.location.href = window.location.href;\r\n\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <aside className=\"material left-sidebar\">\r\n                <div className=\"scroll-sidebar\">\r\n                    <nav className=\"sidebar-nav\">\r\n                        <ul id=\"sidebarnav\">\r\n                            <li className=\"sidebar-item\">\r\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark profile-dd\" href=\"javascript:void(0)\" aria-expanded=\"false\">\r\n                                    <img src={User1} className=\"rounded-circle ml-2\" width=\"30\" />\r\n                                    <span className=\"hide-menu\">Endulzate</span>\r\n                                </a>\r\n                                <ul aria-expanded=\"false\" className=\"collapse  first-level\">\r\n                                    <li className=\"sidebar-item\">\r\n                                        <a href=\"javascript:void(0)\" className=\"sidebar-link\">\r\n                                            <i className=\"ti-user\"></i>\r\n                                            <span className=\"hide-menu\"> Mi perfil </span>\r\n                                        </a>\r\n                                    </li>\r\n\r\n                                    <li className=\"sidebar-item\">\r\n                                        <a href=\"javascript:void(0)\" className=\"sidebar-link\" onClick={this.fetchLogout}>\r\n                                            <i className=\"fas fa-power-off\"></i>\r\n                                            <span className=\"hide-menu\"> Logout </span>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n\r\n                            <li className=\"sidebar-item\">\r\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\r\n                                    <i className=\"mdi mdi-apps\"></i>\r\n                                    <span className=\"hide-menu\">ALMACÉN</span>\r\n                                </a>\r\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                                <span className=\"hide-menu\" >\r\n                                                    Almacén\r\n                                                </span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-transferencias\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\" >Transferencias</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-entrada\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\" >Entradas</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-proveedor\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\" >Proveedores</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-tiposproductos\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\">Tipos de producto</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-marcas\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\" >Marcas</span>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/almacen-cargar-data\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\" >Carga de Data</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n\r\n                            \r\n\r\n\r\n\r\n\r\n                            <li className=\"sidebar-item\">\r\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\r\n                                    <i className=\"mdi mdi-shopping\"></i>\r\n                                    <span className=\"hide-menu\">VENTAS</span>\r\n                                </a>\r\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/ventas\">\r\n                                            <i className=\"mdi mdi-calendar-check\"></i>\r\n                                            <span className=\"hide-menu\">Ventas</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/ventasdetalladas\">\r\n                                            <i className=\"mdi mdi-calendar-check\"></i>\r\n                                            <span className=\"hide-menu\">Ventas Detalladas</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n\r\n                            <li className=\"sidebar-item\">\r\n                                <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/seguimientos\">\r\n                                    <i className=\"mdi mdi-notification-clear-all\"></i>\r\n                                    <span className=\"hide-menu\" >SEGUIMIENTO DE PRODUCTO</span>\r\n                                </Link>\r\n                            </li>\r\n                            \r\n                            \r\n                            <li className=\"sidebar-item\">\r\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\r\n                                    <i className=\"mdi mdi-table\"></i>\r\n                                    <span className=\"hide-menu\">CAJAS</span>\r\n                                </a>\r\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/caja\">\r\n                                            <i className=\"mdi mdi-calendar-check\"></i>\r\n                                            <span className=\"hide-menu\">Gestionar Caja</span>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/caja-ingresos\">\r\n                                            <i className=\"mdi mdi-calendar-check\"></i>\r\n                                            <span className=\"hide-menu\">Gestionar Ingresos</span>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link className=\"sidebar-link waves-effect waves-dark sidebar-link\" href=\"#\" aria-expanded=\"false\"  to=\"/caja-gastos\">\r\n                                            <i className=\"mdi mdi-calendar-check\"></i>\r\n                                            <span className=\"hide-menu\">Gestionar Gastos</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                            \r\n                            <li className=\"sidebar-item\">\r\n                                <a className=\"sidebar-link has-arrow waves-effect waves-dark\" href=\"javascript:void(0)\" aria-expanded=\"false\">\r\n                                    <i className=\"mdi mdi-settings\"></i>\r\n                                    <span className=\"hide-menu\">CONFIGURACIÓN</span>\r\n                                </a>\r\n                                <ul aria-expanded=\"false\" className=\"collapse first-level\">\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/configuracion-usuarios\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\" >Usuarios</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"sidebar-item\">\r\n                                        <Link href=\"app-chats.html\" className=\"sidebar-link\" to=\"/configuracion-ofertas\">\r\n                                            <i className=\"mdi mdi-comment-processing-outline\"></i>\r\n                                            <span className=\"hide-menu\" >Ofertas</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </aside>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => (\r\n\r\n    <footer className=\"footer text-center\">\r\n        Todos los derechos reservados para:\r\n        <a href=\"#\">Endulzate</a>.\r\n    </footer>\r\n\r\n)\r\n\r\nexport default Footer\r\n","\r\nimport React from 'react'\r\nimport {Component} from 'react';\r\n\r\n\r\nclass ListProductComponent extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            precio: '',\r\n            cantidad:'',\r\n            importe:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange (e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            [name] : value\r\n\r\n        })\r\n        console.log(name);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"row\">\r\n                      <div className=\"col-2\">\r\n                         <label>Producto de entrada</label><br/>\r\n                         <input type=\"text\" name=\"productoEntradaChild\" className=\"form-control\" onKeyDown={this.props.handleKeyDown} onFocus={()=>this.props.handleScope(this.props.number)} autoFocus />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <label>Nombre</label><br/>\r\n                            <input type=\"text\" name=\"productoEntrada\" className=\"form-control\" value={this.props.name}/>\r\n                        </div>\r\n                        <div className=\"col-2 precioCompraContainer\">\r\n                              <label>Precio de compra</label>\r\n                              <input type=\"number\" name=\"precioProductoChild\" id=\"precio\" className=\"form-control precioCompra\"\r\n                                 pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.props.precioProductoChild} data-type=\"currency\" placeholder=\"S/\" onChange={this.props.handleChange} onFocus={()=>this.props.handleScope(this.props.number)}/>\r\n                        </div>\r\n                        <div className=\"col-2 cantidadCompraContainer\">\r\n                              <label>Cantidad</label>\r\n                              <input type=\"number\" className=\"form-control cantidadProductoEntrada\" name=\"cantidadProductoChild\" id=\"cantidad\" value={this.props.cantidadProductoChild} onChange={this.props.handleChange} onFocus={()=>this.props.handleScope(this.props.number)}/>\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <label>Stock</label>\r\n                            <input type=\"text\" className=\"form-control cantidadProductoEntrada\" name=\"stock\" value={this.props.stock} />\r\n                        </div>\r\n                        <div className=\"col-2 importeCompraContainer\">\r\n                                <label>Importe</label>\r\n                                 <input type=\"text\" name=\"importe[]\" id=\"importe\" className=\"form-control \" pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.props.importeChild} data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange}/>\r\n                         </div>\r\n                         <div className=\"col-1\">\r\n                                  <br/>\r\n                                <button type=\"button\" className=\"btn btn-danger btn-rounded btn-icon remove\" onClick={()=>this.props.quitarOpcion(this.props.number)}><i className=\"mdi mdi-close\"></i></button>\r\n                         </div>\r\n\r\n              </div>\r\n        </div>\r\n         ) }}\r\n\r\n    export default ListProductComponent\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\nimport ListProductComponent from './componentsExtras/listProductComponent';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport format from 'date-fns/format';\r\nimport es from 'date-fns/locale/es';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport config from '../../config'\r\n\r\nclass EntradaCrear extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            contador:[],\r\n            contadorNumero:0,\r\n            nada:'',\r\n\r\n            numerox:0,\r\n            modo:0,\r\n            nombreProducto:'',\r\n            precioProducto:'',\r\n            scopeNumero:'',\r\n            cantidad:'',\r\n            stock:'',\r\n            importe:'',\r\n\r\n            tasks:'',\r\n            proveedores:[],\r\n            //code\r\n            code:'',\r\n            //modales\r\n            estadoModalProducto:false,\r\n            //toasts\r\n            estadoToastRed:false,\r\n            estadoToastGreen:false,\r\n            messageRed:'',\r\n            messageGreen:'',\r\n\r\n            //---ac\r\n            idProducto:'',\r\n            //\r\n            nowday:'',\r\n\r\n            //emitir\r\n            idProveedor:'',\r\n            idFactura:'',\r\n            datepick:'',\r\n\r\n            enviarCantidad:'',\r\n            enviarPrecioProducto:'',\r\n            enviarIdProducto:'',\r\n\r\n            precio_array:[],\r\n            cantidad_array:[],\r\n            idProducto_array:[],\r\n            //modal agregar productos\r\n            idMarca:'',\r\n            idTipo:'',\r\n            precioVentaProducto:'',\r\n            codigoProductoNuevo:'',\r\n            nombreProductoNuevo:'',\r\n            tasksM:[],\r\n            tasksTP:[],\r\n            tiposproductos_tb:[],\r\n            marcas_tb:[],\r\n\r\n            proveedores_t:[],\r\n            nuevoTipoProducto:''\r\n          }\r\n        this.quitarOpcion = this.quitarOpcion.bind(this);\r\n        this.fetchDatos = this.fetchDatos.bind(this);\r\n        this.handleKeyDown=this.handleKeyDown.bind(this);\r\n        this.handleKeyDown2=this.handleKeyDown2.bind(this);\r\n        this.scope=this.scope.bind(this);\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.sendAgregarEntrada=this.sendAgregarEntrada.bind(this);\r\n        this.handleChangeTime=this.handleChangeTime.bind(this);\r\n        this.quitarScope=this.quitarScope.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleChangeTime (date){\r\n        this.setState({\r\n            datepick: format(date, 'yyyy-MM-dd'),\r\n            nowday: date\r\n        });\r\n        console.log(this.state.datepick);\r\n    };\r\n\r\n\r\n\r\n//tiposProductos del modal\r\n      sendAgregarTipoProducto(){\r\n\r\n              fetch(config.api+`/almacen/tipo/crear`,\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                      // '_token': csrf_token,\r\n                      nuevoTipoProducto: this.state.nuevoTipoProducto\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n\r\n                  }\r\n              }\r\n          )\r\n          .then(res =>res.json())\r\n          .then(data => {\r\n                if(data.response==true){\r\n                  console.log(\"exito\");\r\n                  this.cambiarToastGreen(\"el tipo de producto\",'true');\r\n                  this.fetchAgregarTipo();\r\n                }\r\n                else{\r\n                  console.log(\"error\");\r\n                  this.cambiarToastRed(\"en agregar Tipo producto\",'true');\r\n                }\r\n\r\n          }).catch((error)=> {\r\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n            this.cambiarToastRed(\"en agregar Tipo producto\",'true');\r\n          });  }\r\n\r\n    fetchAgregarTipo(){\r\n              fetch(\r\n                config.api+'/almacen/tiposproductos/tb_tiposProductos',\r\n                {\r\n                  method: 'GET',\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n              }\r\n              )\r\n                      .then(res => res.json())\r\n                      .then(data => {\r\n                          this.setState({tiposproductos_tb: data}, () => {\r\n                              this.suprimirDatos();\r\n                          });\r\n              })\r\n          }\r\n\r\n\r\n//modall\r\nsuprimirDatos(operacion){\r\n        let x = [];\r\n        let y = [] ;\r\n        let z = [];\r\n        let b = [];\r\n        let q = [];\r\n        let r = [];\r\n        \r\n        if(this.state.marcas_tb.data){\r\n          this.state.marcas_tb.data.map(task=>{\r\n              x.push({\r\n                  nombre: task.nombre,\r\n                  id: task.id\r\n              });\r\n          })\r\n        }\r\n        b = [ ...new Map(x.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\r\n\r\n        if(this.state.tiposproductos_tb.data){\r\n            this.state.tiposproductos_tb.data.map(task=>{\r\n               y.push({\r\n                  nombre: task.nombre,\r\n                  id: task.id\r\n                });\r\n            })\r\n            q = [ ...new Map(y.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\r\n        }\r\n        \r\n        if(this.state.proveedores.data){\r\n          this.state.proveedores.data.map(task=>{\r\n              z.push(\r\n                task.id\r\n                );\r\n          })\r\n        }\r\n\r\n        if(operacion=='op2'){\r\n          this.setState({\r\n              proveedores_t: z\r\n          },()=>this.operacionScope2())\r\n        }\r\n        else{\r\n        this.setState({\r\n            tasksM: b,\r\n            tasksTP: q,\r\n        },()=>this.operacionScope())\r\n      }\r\n    }\r\n      operacionScope(){\r\n\r\n        let x = this.state.tasksM[0];\r\n        let y = this.state.tasksTP[0];\r\n\r\n        if(x && y){\r\n        let idMarca = x.id;\r\n        let idTipo = y.id;\r\n\r\n        this.setState({\r\n          idMarca: idMarca,\r\n          idTipo: idTipo\r\n        },()=>console.log(this.state.idMarca, this.state.idTipo))\r\n      }\r\n\r\n\r\n      }\r\n      operacionScope2(){\r\n\r\n        let x = this.state.proveedores_t[0];\r\n\r\n        let idProveedor = x;\r\n        console.log(idProveedor);\r\n        this.setState({\r\n          idProveedor: idProveedor,\r\n        },()=>console.log(this.state.idProveedor))\r\n\r\n\r\n      }\r\n\r\n//toasts y modales\r\n      cambiarToastRed(message,accion) {\r\n          if(accion=='true'){\r\n          this.setState({\r\n              messageRed: message,\r\n              estadoToastRed: true\r\n          });}\r\n          else{\r\n            this.setState({\r\n                estadoToastRed: false\r\n            });\r\n          }\r\n\r\n      }\r\n      cambiarToastGreen(message,accion) {\r\n          if(accion=='true'){\r\n          this.setState({\r\n              messageGreen: message,\r\n              estadoToastGreen: true\r\n          });}\r\n          else{\r\n            this.setState({\r\n                estadoToastGreen: false\r\n            });}\r\n          }\r\n\r\n      cambiarModalProducto() {\r\n          this.setState({\r\n              estadoModalProducto: !this.state.estadoModalProducto\r\n          });\r\n      }\r\n      sendAgregarProducto(name){\r\n\r\n          fetch(config.api+`/almacen/producto/crear`,\r\n          {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                  // '_token': csrf_token,\r\n                  precioVentaProducto:this.state.precioVentaProducto,\r\n                  codigoProductoNuevo:this.state.codigoProductoNuevo,\r\n                  marcaProducto:this.state.idMarca,\r\n                  tipoProducto:  this.state.idTipo,\r\n                  nombreProductoNuevo: this.state.nombreProductoNuevo\r\n              }),\r\n              headers: {\r\n                  'Accept' : 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                  'usuid'         : localStorage.getItem('usuid')\r\n\r\n              }\r\n            }\r\n            )\r\n            .then(res =>res.json())\r\n            .then(data => {\r\n                if(data.response==true){\r\n                  console.log(\"exito\");\r\n                  this.cambiarToastGreen(\"el producto\",'true');\r\n                  if(this.state.scopeNumero){\r\n                    this.generateComponents(\r\n                      this.state.nombreProductoNuevo,\r\n                      this.state.scopeNumero,\r\n                      0,\r\n                      0,\r\n                      data.idProducto,\r\n                    );\r\n                    this.cambiarModalProducto();\r\n                  }\r\n                  else{\r\n                  this.generateComponents(\r\n                      this.state.nombreProductoNuevo,\r\n                      this.state.numerox,\r\n                      0,\r\n                      0,\r\n                      data.idProducto,);\r\n                  this.cambiarModalProducto();\r\n                }\r\n\r\n                }\r\n                else{\r\n                  console.log(\"error\");\r\n                  this.cambiarToastRed(\"en agregar producto\",'true');\r\n                }\r\n\r\n\r\n            }).catch((error)=> {\r\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n              this.cambiarToastRed(\"en agregar producto\",'true');\r\n            });  }\r\n\r\n\r\n//-----------------------------------------------------------|\r\n\r\n\r\n\r\n    generateComponents(nombre,numero,precio,stock,idProducto){\r\n\r\n        var a = [...this.state.contador];\r\n        if(numero==0){\r\n          console.log(a);\r\n          a.push({\r\n              numero: this.state.contadorNumero+1,\r\n              nombre: '',\r\n              precio: 0,\r\n              stock:'',\r\n              cantidad:'',\r\n              idProducto:'',\r\n              importe:''\r\n          });\r\n          this.setState({\r\n            contador: a,\r\n            nombreProducto: nombre,\r\n            precioProducto: precio,\r\n            stock: stock,\r\n            cantidad: 0,\r\n            idProducto: idProducto,\r\n            contadorNumero: this.state.contadorNumero+1,\r\n            numerox: this.state.numerox+1,\r\n            modo: this.state.modo+1\r\n          })\r\n\r\n      }\r\n\r\n        if(numero!==0){\r\n          console.log(numero);\r\n          a.push({\r\n              numero: this.state.contadorNumero+1,\r\n              nombre: '',\r\n              precio: 0,\r\n              stock:'',\r\n              cantidad: '',\r\n              idProducto:'',\r\n              importe:''\r\n          });\r\n          a.forEach(function(obj){\r\n            if(obj.numero == numero){\r\n              obj.nombre = nombre;\r\n              obj.precio = precio;\r\n              obj.stock= stock;\r\n              obj.idProducto = idProducto;\r\n            }\r\n          })\r\n          console.log(a);\r\n          this.setState({\r\n            contador: a,\r\n            contadorNumero: this.state.contadorNumero+1\r\n          })\r\n\r\n      }\r\n    }\r\n\r\n    quitarOpcion(numero){\r\n        console.log(numero);\r\n\r\n        var array =[...this.state.contador];\r\n        var index = this.state.contador.findIndex(i=> i.numero === numero)\r\n        if(index>-1){\r\n          array.splice(index,1)\r\n          var k = array.length;\r\n          console.log(k);\r\n          console.log(array)\r\n          if(k==0){\r\n            this.setState({\r\n              numerox: 0,\r\n              modo:0\r\n            })\r\n          }\r\n          this.setState({\r\n            contador: array,\r\n          })\r\n        }\r\n    }\r\n\r\n    fetchDatos(){\r\n        fetch(\r\n          config.api+'/almacen/tb_almacen',\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n        )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    this.setState({tasks: data},()=> console.log(this.state.tasks));\r\n\r\n            })\r\n\r\n        fetch(\r\n          config.api+'/almacen/proveedores/tb_proveedores',\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n        )\r\n                 .then(res => res.json())\r\n                .then(data => {\r\n                    this.setState({proveedores: data},()=> {\r\n                      console.log(data);\r\n                      this.suprimirDatos('op2');\r\n                    });\r\n\r\n            })\r\n        fetch(\r\n          config.api+'/almacen/tiposproductos/tb_tiposProductos',\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n        )\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            this.setState({tiposproductos_tb: data});\r\n                })\r\n\r\n        fetch(\r\n          config.api+'/almacen/marcas/tb_marcas',\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n        )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                this.setState({marcas_tb: data});\r\n            })\r\n    }\r\n    scope(numero){\r\n      console.log(numero);\r\n      this.setState({\r\n        scopeNumero: numero\r\n      })\r\n    }\r\n    quitarScope(){\r\n        this.setState({\r\n          scopeNumero: 0\r\n        })\r\n    }\r\n    comprobarCode(name){\r\n      fetch(config.api+'/producto/buscar',\r\n          {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                  // '_token': csrf_token,\r\n                  codigoProducto: this.state.code\r\n              }),\r\n              headers: {\r\n                  'Accept' : 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                  'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n                )\r\n\r\n              .then(res => res.json())\r\n              .then(data => {\r\n\r\n                if(data.response == true){\r\n                  console.log(data);\r\n                  this.cambiarToastGreen(\"El producto ya existe\",'true');\r\n                  if(name==\"productoEntradaChild\"){\r\n                    this.generateComponents(data.producto.nombre,this.state.scopeNumero,0,data.producto.cantidad\r\n                    ,data.producto.id);\r\n                  }\r\n                  else{\r\n                  this.generateComponents(data.producto.nombre,this.state.numerox,0,data.producto.cantidad\r\n                  ,data.producto.id);\r\n                }\r\n              }\r\n                else{\r\n                  if(name==\"productoEntradaChild\"){\r\n                    this.suprimirDatos();\r\n                    this.cambiarModalProducto();\r\n                  }\r\n                  else{\r\n                    this.quitarScope();\r\n                    this.suprimirDatos();\r\n                    this.cambiarModalProducto();\r\n                  }\r\n\r\n                }\r\n\r\n          })\r\n    }\r\n    comprobarCodeProducto(){\r\n      fetch(config.api+'/producto/buscar',\r\n          {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                  // '_token': csrf_token,\r\n                  codigoProducto: this.state.code\r\n              }),\r\n              headers: {\r\n                  'Accept' : 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                  'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n                )\r\n\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                if(data.response == true){\r\n                  console.log(data);\r\n                  this.cambiarToastRed(\"El producto ya existe\",'true');\r\n                }\r\n                else{\r\n                  console.log(data)\r\n                  this.cambiarToastGreen(\"El producto no existe\",'true');\r\n                }\r\n\r\n          })\r\n    }\r\n    operacionClean(){\r\n      if(this.state.numerox==0){\r\n                fetch(config.api+`/almacen/entrada/crear`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token': csrf_token,\r\n                        proveedor: this.state.idProveedor,\r\n                        factura: this.state.idFactura,\r\n                        fecha: this.state.datepick,\r\n\r\n                        precio: this.state.enviarPrecioProducto,\r\n                        cantidad: this.state.enviarCantidad,\r\n                        producto: this.state.enviarIdProducto,\r\n\r\n\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n\r\n                    }\r\n                }\r\n            )\r\n            .then(res =>res.json())\r\n            .then(data => {\r\n                if(data.response==true){\r\n                  console.log(\"exito\");\r\n                  this.cambiarToastGreen(\"la entrada\",'true');\r\n                  this.fetchDatos();\r\n                  this.props.addContainer();\r\n                }\r\n                else{\r\n                  console.log(\"error\");\r\n                  this.cambiarToastRed(\"en agregar entrada\",'true');\r\n                }\r\n\r\n            }).catch((error)=> {\r\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n              this.cambiarToastRed(\"en agregar entrada\",'true');\r\n            });  }\r\n      else{\r\n              fetch(config.api+`/almacen/entrada/crear`,\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                      // '_token': csrf_token,\r\n                      proveedor: this.state.idProveedor,\r\n                      factura: this.state.idFactura,\r\n                      fecha: this.state.datepick,\r\n                      precio: this.state.precio_array,\r\n                      cantidad: this.state.cantidad_array,\r\n                      producto: this.state.idProducto_array,\r\n\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n\r\n                  }\r\n              }\r\n          )\r\n          .then(res =>res.json())\r\n          .then(data => {\r\n              if(data.response==true){\r\n                console.log(\"exito\");\r\n                this.cambiarToastGreen(\"la entrada\",'true');\r\n                this.fetchDatos();\r\n                this.props.addContainer();\r\n\r\n              }\r\n              else{\r\n                console.log(\"error\");\r\n                this.cambiarToastRed(\"en agregar entrada\",'true');\r\n              }\r\n\r\n          }).catch((error)=> {\r\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n            this.cambiarToastRed(\"en agregar entrada\",'true');\r\n          });  }\r\n\r\n    }\r\n\r\n    sendAgregarEntrada(){\r\n\r\n      var x= [this.state.precioProducto];\r\n      var y= [this.state.cantidad];\r\n      var z= [this.state.idProducto];\r\n\r\n      if(this.state.numerox==0){\r\n        this.setState({\r\n          enviarPrecioProducto: x,\r\n          enviarCantidad: y,\r\n          enviarIdProducto: z,\r\n        }, ()=>{\r\n          console.log(this.state.enviarPrecioProducto,this.state.enviarCantidad,this.state.enviarIdProducto);\r\n          this.operacionClean();\r\n        })\r\n      }\r\n      else{\r\n        var data= [...this.state.contador];\r\n        data.map((e)=>{\r\n          if(e.idProducto!=''){\r\n            x.push(e.precio);\r\n            y.push(e.cantidad);\r\n            z.push(e.idProducto);\r\n          }\r\n        })\r\n        console.log(x,y,z);\r\n        this.setState({\r\n          precio_array: x,\r\n          cantidad_array:y,\r\n          idProducto_array:z\r\n        },()=>{\r\n          this.operacionClean();\r\n        }\r\n        )\r\n      }\r\n     }\r\n\r\n\r\n    handleKeyDown(e){\r\n      if(e.key === 'Enter'){\r\n        console.log('hacer validacion');\r\n        console.log(e.target.name);\r\n        var name = e.target.name;\r\n        this.setState({code: e.target.value},()=>this.comprobarCode(name));\r\n      }\r\n    }\r\n    handleKeyDown2(e){\r\n      if(e.key === 'Enter'){\r\n        console.log('hacer validacion');\r\n        console.log(e.target.name);\r\n        var name = e.target.name;\r\n        this.setState({code: e.target.value},()=>this.comprobarCodeProducto());\r\n      }\r\n    }\r\n\r\n    handleChange (e){\r\n           const {name , value} = e.target;\r\n           if(name=='cantidadProducto'){\r\n             var calculo = (this.state.precioProducto * value);\r\n               this.setState({\r\n                 cantidad: value,\r\n                 importe: calculo\r\n               })\r\n\r\n           }\r\n           if(name=='precioProducto'){\r\n            var calculo = (this.state.cantidad * value);\r\n              this.setState({\r\n                precioProducto: value,\r\n                importe: calculo\r\n                })\r\n\r\n          }\r\n\r\n           if(name=='cantidadProductoChild'){\r\n             var p = [...this.state.contador];\r\n              p.forEach((a)=>{\r\n                console.log(value);\r\n                if(a.numero==this.state.scopeNumero){\r\n                   a.cantidad = value;  a.importe = (a.precio * value);}\r\n              })\r\n\r\n                this.setState({\r\n                  contador: p\r\n                },()=>console.log(p))\r\n\r\n           }\r\n            if(name=='precioProductoChild'){\r\n               var p = [...this.state.contador];\r\n                p.forEach((a)=>{\r\n                  console.log(value);\r\n                  if(a.numero==this.state.scopeNumero){\r\n                     a.precio = value; a.importe = (a.cantidad * value) ;}\r\n                })\r\n\r\n                  this.setState({\r\n                    contador: p\r\n                  },()=>console.log(p))\r\n\r\n           }\r\n           else{\r\n             this.setState({\r\n                 [name] : value\r\n\r\n             })\r\n           }\r\n\r\n           console.log(name);\r\n           console.log(value);\r\n\r\n       }\r\n\r\n    componentDidMount(){\r\n        this.fetchDatos();\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card card-default\">\r\n                        <div className=\"card-header cabezera\">\r\n                            <h4> Agregar Entrada </h4>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"card-body\">\r\n                                    <input type='hidden' value='1' name= \"cantidadProductos\" id=\"cantidadProductos\"/>\r\n                                    <input type='hidden' value='0' name= \"agregandoProveedor\" id=\"agregandoProveedor\"/>\r\n                                    <input type='hidden' value='0' name= \"agregandoProducto\" id=\"agregandoProducto\"/>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <label>Selecciona al proveedor</label>\r\n                                                <div>\r\n                                                    <select className=\"form-control listProductos\" name=\"idProveedor\" id=\"proveedores\" style={{width: '90%'}} onChange={this.handleChange} value={this.state.idProveedor}>\r\n\r\n                                                        {\r\n                                                            this.state.proveedores.data?\r\n                                                            this.state.proveedores.data.map((data)=>{\r\n\r\n                                                               return(\r\n                                                                <option key={data.id} value={data.id} > {data.nombre} </option>\r\n                                                               )\r\n                                                            }\r\n                                                            )\r\n                                                            :null\r\n                                                        }\r\n\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-3\">\r\n                                                <label>Numero de factura</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"idFactura\" id=\"factura\" onChange={this.handleChange}/>\r\n                                            </div>\r\n                                            <div className=\"col-3\">\r\n                                                <label>Fecha</label><br/>\r\n                                                <DatePicker locale=\"es\" selected={this.state.nowday} onChange={this.handleChangeTime} />\r\n                                             </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\" id=\"listProductos\" name=\"this.props.number\" >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-2\">\r\n                                                <label>Producto de entrada</label><br/>\r\n                                                <input type=\"text\" name=\"productoEntrada\" className=\"form-control\" onKeyDown={this.handleKeyDown} />\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <label>Nombre</label><br/>\r\n                                                <input type=\"text\" name=\"productoEntrada\" className=\"form-control\" value={this.state.nombreProducto}/>\r\n                                            </div>\r\n                                            <div className=\"col-2 precioCompraContainer\">\r\n                                                <label>Precio de compra</label>\r\n                                                <input type=\"number\" name=\"precioProducto\" id=\"precioProducto\" className=\"form-control precioCompra\"\r\n                                                    pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.state.precioProducto} data-type=\"currency\" placeholder=\"S/\" onChange={this.handleChange}/>\r\n                                            </div>\r\n                                            <div className=\"col-2 cantidadCompraContainer\">\r\n                                                <label>Cantidad</label>\r\n                                                <input type=\"number\" className=\"form-control cantidadProductoEntrada\" name=\"cantidadProducto\" value={this.state.cantidad} id=\"cantidadProducto\" onChange={this.handleChange}/>\r\n                                            </div>\r\n                                            <div className=\"col-1\">\r\n                                                <label>Stock</label>\r\n                                                <input type=\"text\" className=\"form-control cantidadProductoEntrada\" name=\"stock\" value={this.state.stock} />\r\n                                            </div>\r\n                                            <div className=\"col-2 importeCompraContainer\">\r\n                                                <label>Importe</label>\r\n                                                <input type=\"text\" name=\"importe[]\" id=\"importe\" className=\"form-control \" pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.state.importe} data-type=\"currency\" placeholder=\"S/1,000,000.00\"/ >\r\n                                            </div>\r\n                                            <div className=\"col-1\">\r\n                                                <br/>\r\n                                                <button type=\"button\" className=\"btn btn-warning btn-rounded btn-icon \" id=\"agregarNuevoProducto\" >\r\n                                                    <i className=\"mdi mdi-plus\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                     {\r\n                                        this.state.contador?\r\n                                        this.state.contador.map((data)=>{\r\n                                             return(\r\n                                              <ListProductComponent key={data.numero} number={data.numero}  name={data.nombre} quitarOpcion={this.quitarOpcion} handleScope={this.scope} handleChange={this.handleChange} handleKeyDown={this.handleKeyDown}\r\n                                               precioProductoChild={data.precio} cantidadProductoChild={data.cantidad} stock={data.stock}  idProducto={data.idProducto} importeChild={data.importe}/>\r\n                                             )\r\n                                           }\r\n                                        )\r\n                                        :null\r\n\r\n                                     }\r\n\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button type=\"button\" id=\"agregarProducto\" className=\"btn btn-primary btn-rounded btn-fw \" onClick={()=>this.generateComponents()}>Agregar producto</button>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group boton\">\r\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearEntrada\" onClick={()=>this.sendAgregarEntrada()}>\r\n                                            Agregar</button>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Modal\r\n                        show={this.state.estadoModalProducto}\r\n                        onHide={() => this.cambiarModalProducto()}\r\n                        >\r\n                        <Modal.Header closeButton>\r\n                          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            Agregar Producto\r\n                          </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        <div className=\"card card-default\">\r\n                           <div className=\"card-header cabezera\">\r\n                               <div className=\"form-group row\">\r\n                                               <div className=\"col-sm-6\">\r\n                                                       <div className=\"form-check\">\r\n                                                       <label className=\"form-check-label\">\r\n                                                           <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"cerrarProducto\" value=\"1\" defaultChecked=\"\"/>\r\n                                                           Cerrar automaticamente\r\n                                                       <i className=\"input-helper\"></i></label>\r\n                                                       </div>\r\n                                                   </div>\r\n                                                   <div className=\"col-sm-6\">\r\n                                                       <div className=\"form-check\">\r\n                                                       <label className=\"form-check-label\">\r\n                                                           <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"abrirProducto\" value=\"0\"/>\r\n                                                           Mantenerla abierta\r\n                                                       <i className=\"input-helper\"></i></label>\r\n                                                       </div>\r\n                                                   </div>\r\n                                           </div>\r\n                                   </div>\r\n                               <div className=\"modal-body\">\r\n                                   <div className=\"card-body\">\r\n                                           <div className=\"form-group\">\r\n                                               <div className=\"row\">\r\n                                                   <div className=\"col-12\">\r\n                                                       <label>Nuevo tipo de producto</label>\r\n                                                       <div className=\"input-group\">\r\n                                                           <input type=\"text\" placeholder=\"Si no existe el tipo de producto agregalo\" className=\"form-control\" name=\"nuevoTipoProducto\" id=\"nuevoTipoProducto\" onChange={this.handleChange}  value={this.state.nuevoTipoProducto}/>\r\n                                                           <div className=\"input-group-append\">\r\n                                                               <button  id=\"crearTipoProducto\"  className=\"btn form-control btn-sm btn-primary\" type=\"button\" onClick={()=>this.sendAgregarTipoProducto()}><i className=\"mdi mdi-plus\"></i></button>\r\n                                                           </div>\r\n                                                       </div>\r\n\r\n                                                   </div>\r\n                                               </div>\r\n                                           </div>\r\n                                           <div className=\"form-group\" >\r\n                                               <div className=\"row\">\r\n                                                   <div className=\"col-12\">\r\n                                                       <label>Codigo</label>\r\n                                                       <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\" value={this.state.codigoProductoNuevo} onChange={this.handleChange} onKeyDown={this.handleKeyDown2}/>\r\n                                                   </div>\r\n                                                   <div className=\"col-12\" id=\"alertaCodigo\">\r\n                                                   </div>\r\n                                               </div>\r\n                                           </div>\r\n                                           <div className=\"form-group\">\r\n                                               <div className=\"row\">\r\n                                                   <div className=\"col-6\">\r\n                                                       <label>Marcas</label>\r\n                                                       <div className=\"input-group\">\r\n                                                           <select className=\"form-control\" name=\"idMarca\" id=\"marcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\r\n                                                               {\r\n                                                                   this.state.tasksM ?\r\n                                                                   this.state.tasksM.map(element => {\r\n                                                                       return (\r\n                                                                           <option value={element.id}  >{element.nombre}</option>\r\n                                                                           );\r\n                                                                   })\r\n                                                                   :null\r\n                                                               }\r\n                                                           </select>\r\n                                                       </div>\r\n                                                   </div>\r\n                                                   <div className=\"col-6\">\r\n                                                       <label>Tipos de prodcuto</label>\r\n                                                       <div className=\"input-group\">\r\n                                                           <select className=\"form-control\" name=\"idTipo\" id=\"tipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo}>\r\n                                                               {\r\n                                                                   this.state.tasksTP ?\r\n                                                                   this.state.tasksTP.map(element=>{\r\n                                                                   return (\r\n                                                                   <option value={element.id}>{element.nombre}</option>\r\n                                                                   );\r\n                                                               })\r\n                                                                : null\r\n                                                               }\r\n                                                           </select>\r\n                                                       </div>\r\n                                                   </div>\r\n                                               </div>\r\n                                           </div>\r\n                                           <div className=\"form-group\">\r\n                                               <div className=\"row\">\r\n                                                   <div className=\"col-12\">\r\n                                                       <label>Nombre del producto</label>\r\n                                                       <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\" onChange={this.handleChange} value={this.state.nombreProductoNuevo}/>\r\n                                                   </div>\r\n                                               </div>\r\n                                           </div>\r\n                                           <div className=\"form-group\">\r\n                                               <div className=\"row\">\r\n\r\n                                                 { /* <div className=\"col-6\">\r\n                                                       <label>Precio de venta</label>\r\n                                                       <input type=\"text\" name=\"precioVentaProductoSinIGV\" id=\"precioVentaProductoSinIGV\" className=\"form-control\"\r\n                                                           pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" defaultValue=\"\" data-type=\"currency\" placeholder=\"S/1,000,000.00\"/>\r\n                                                           </div> */}\r\n\r\n                                                   <div className=\"col-6\">\r\n                                                       <label>Precio con IGV(18%)</label>\r\n                                                       <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\r\n                                                           pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange} value={this.state.precioVentaProducto}/>\r\n                                                   </div>\r\n                                               </div>\r\n                                           </div>\r\n\r\n\r\n                                           <div className=\"form-group boton\">\r\n                                               <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\" onClick={()=>this.sendAgregarProducto()}>\r\n                                                   Agregar</button>\r\n                                           </div>\r\n                                        </div>\r\n                                   </div>\r\n                               </div>\r\n                        </Modal.Body>\r\n                      </Modal>\r\n\r\n\r\n\r\n\r\n                    <Toast\r\n                          style={{\r\n                          position: 'fixed',\r\n                          top: 5,\r\n                          right: 5,\r\n                          zIndex:1060,\r\n                          backgroundColor: 'rgba(76,208,76,0.7)',\r\n                          color:'white'\r\n                          }}\r\n                          onClose={() => this.cambiarToastGreen()}\r\n                          show={this.state.estadoToastGreen}\r\n                          delay={3000}\r\n                          autohide\r\n                          >\r\n                            <Toast.Body>\r\n                              <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\r\n                            </Toast.Body>\r\n                      </Toast>\r\n\r\n                    <Toast\r\n                            style={{\r\n                            position: 'fixed',\r\n                            top: 5,\r\n                            right: 5,\r\n                            zIndex:1061,\r\n                            backgroundColor: 'rgba(205,55,55,0.7)',\r\n                            color:'white'\r\n                              }}\r\n                            onClose={() => this.cambiarToastRed()}\r\n                            show={this.state.estadoToastRed}\r\n                            delay={3000}\r\n                            autohide\r\n\r\n                      >\r\n                        <Toast.Body>\r\n                          <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\r\n                        </Toast.Body>\r\n                    </Toast>\r\n\r\n\r\n                </div>\r\n)\r\n        }}\r\nexport default EntradaCrear\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nclass CerrarCaja extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={}\r\n    }\r\n\r\n\r\n render (){\r\n   return(\r\n\r\n     <Modal\r\n        size='lg'\r\n        show={this.props.estadoModalCerrarCaja}\r\n        onHide={()=> this.props.cambiarModalCerrarCaja()}\r\n\r\n       >\r\n           <Modal.Header closeButton>\r\n             <Modal.Title id=\"example-custom-modal-styling-title\">\r\n               Cerrar Caja\r\n             </Modal.Title>\r\n           </Modal.Header>\r\n           <Modal.Body>\r\n             <div className=\"card card-default\">\r\n                  <div className=\"modal-body\">\r\n                      <div className=\"card-body\">\r\n                              <div className=\"form-group\">\r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-12\">\r\n                                          <label>Codigo de caja</label>\r\n                                          <div className=\"input-group\">\r\n                                              <input type=\"text\" className=\"form-control\" name=\"codigoCerrarCaja\" onChange={this.props.handleChange}  value={this.props.codigoCerrarCaja} onKeyDown={this.props.handleKeyDown5}/>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-4\">\r\n                                          <label>Nombre de Caja</label>\r\n                                          <h4 className=\"card-title\"> {this.props.nombreCajaCerrarCaja} </h4>\r\n                                      </div>\r\n                                      <div className=\"col-2\">\r\n                                          <label>Stock</label>\r\n                                          <h4 className=\"card-title\"> {this.props.stockCajaCerrarCaja} </h4>\r\n                                      </div>\r\n                                      <div className=\"col-4\">\r\n                                          <label>Cantidad de productos dentro</label>\r\n                                          <h4 className=\"card-title\"> {this.props.cantidadProductosCerrarCaja} </h4>\r\n                                      </div>\r\n                                      <div className=\"col-2\">\r\n                                          <label>Precio</label>\r\n                                          <h4 className=\"card-title\"> S/{this.props.precioCajaCerrarCaja} </h4>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-6\">\r\n                                          <label>Nombre del producto</label>\r\n                                          <h4 className=\"card-title\"> {this.props.nombreProductoCerrarCaja} </h4>\r\n                                      </div>\r\n                                      <div className=\"col-4\">\r\n                                          <label>Stock</label>\r\n                                          <h4 className=\"card-title\"> {this.props.stockProductoCerrarCaja} </h4>\r\n                                      </div>\r\n                                      <div className=\"col-2\">\r\n                                          <label>Precio</label>\r\n                                          <h4 className=\"card-title\"> S/{this.props.precioProductoCerrarCaja} </h4>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n\r\n\r\n                              <div className=\"form-group\">\r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-12\">\r\n                                          <label>Cuantas cajas desea cesar</label>\r\n                                          <div className=\"input-group\">\r\n                                              <input type=\"text\" className=\"form-control\" name=\"cantidadCerrarCaja\" onChange={this.props.handleChange}  value={this.props.cantidadCerrarCaja}/>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"form-group boton\">\r\n                                  <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.props.sendCerrarCaja()}>\r\n                                      Cerrar Caja</button>\r\n                              </div>\r\n                         </div>\r\n                  </div>\r\n              </div>\r\n\r\n           </Modal.Body>\r\n       </Modal>\r\n   )\r\n }}\r\n\r\n\r\nexport default CerrarCaja\r\n","import React from 'react';\r\nimport {Component} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../config'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport format from 'date-fns/format';\r\nimport es from 'date-fns/locale/es';\r\nimport EntradaCrear from  './EntradaCrear';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport CerrarCaja from './componentsExtras/cerrarCaja'\r\nregisterLocale('es', es);\r\n\r\n\r\n\r\nclass Almacen extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            productos_tb: [],\r\n            //data editar productos\r\n            idProducto:'',\r\n            codigoP:'',\r\n            nombreM: '',\r\n            nombreT: '',\r\n            nombreP: '',\r\n            precioP: '',\r\n            idMarca:'',\r\n            idTipo:'',\r\n\r\n            cantidadP: '',\r\n            tasksM:[],\r\n            tasksTP:[],\r\n            tiposproductos_tb:[],\r\n            marcas_tb:[],\r\n\r\n            idProveedor:'',\r\n            idFactura:'',\r\n            datepick:'',\r\n            nowday:'',\r\n            precio:'',\r\n            cantidad:'',\r\n            proveedores_tb:[],\r\n            nuevoTipoProducto:'',\r\n\r\n            precioVentaProducto:'',\r\n            codigoProductoNuevo:'',\r\n            nombreProductoNuevo:'',\r\n\r\n            rucProveedor:'',\r\n            RUCdatos:[],\r\n            telefonoProveedor:'',\r\n            nombreProveedor:'',\r\n            direccionProveedor:'',\r\n            tipoProveedor:'',\r\n\r\n            //modales\r\n            estadoModalProducto:false,\r\n            estadoModalMarca:false,\r\n            estadoModalProveedor:false,\r\n            estadoModalEditarProducto:false,\r\n            estadoModalCaja:false,\r\n            estadoModalAbrirCaja:false,\r\n            estadoModalCerrarCaja:false,\r\n            //Toast\r\n            estadoToastRed:false,\r\n            estadoToastGreen:false,\r\n            messageRed:'',\r\n            messageGreen:'',\r\n            //componente agregar entradas\r\n            addContainer: false,\r\n            //buscador y Paginate\r\n            estadoBoton:[],\r\n            estadoQuery:'',\r\n\r\n            //Caja estados inputs\r\n            codigoCaja:'',                      codigoProductoCaja:          '',\r\n            idProductoCaja:'',                  nombreCaja:                  '',\r\n            cantidadProductosCaja:'',           precioCaja:                  '',\r\n            codeC:'',                           code:                        '',\r\n\r\n            //abrir Cajas\r\n            codigoAbrirCaja:'',                 nombreCajaAbrirCaja:         '',\r\n            stockCajaAbrirCaja:'',              cantidadProductosAbrirCaja:  '',\r\n            precioCajaAbrirCaja:'',             nombreProductoAbrirCaja:     '',\r\n            stockProductoAbrirCaja:'',          precioProductoAbrirCaja:     '',\r\n            cantidadAbrirCaja:'',               codeAbrirCaja:               '',\r\n\r\n            //Cerrar cajas\r\n            codigoCerrarCaja:'',                 nombreCajaCerrarCaja:         '',\r\n            stockCajaCerrarCaja:'',              cantidadProductosCerrarCaja:  '',\r\n            precioCajaCerrarCaja:'',             nombreProductoCerrarCaja:     '',\r\n            stockProductoCerrarCaja:'',          precioProductoCerrarCaja:     '',\r\n            cantidadCerrarCaja:'',               codeCerrarCaja:               '',\r\n\r\n            paginaSeleccionadaTbVenta : 1\r\n\r\n\r\n        };\r\n\r\n        this.fetchTasks = this.fetchTasks.bind(this);\r\n        this.editTask = this.editTask.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeTime = this.handleChangeTime.bind(this);\r\n        this.handleChangeRUC = this.handleChangeRUC.bind(this);\r\n        this.suprimirDatos = this.suprimirDatos.bind(this);\r\n        this.handleChangeBuscador= this.handleChangeBuscador.bind(this);\r\n        this.handleKeyDown1=this.handleKeyDown1.bind(this);\r\n        this.handleKeyDown2=this.handleKeyDown2.bind(this);\r\n        this.handleKeyDown3=this.handleKeyDown3.bind(this);\r\n        this.handleKeyDown4=this.handleKeyDown4.bind(this);\r\n        this.handleKeyDown5=this.handleKeyDown5.bind(this);\r\n        this.cambiarModalCerrarCaja= this.cambiarModalCerrarCaja.bind(this);\r\n        this.add=this.add.bind(this);\r\n        this.sendCerrarCaja=this.sendCerrarCaja.bind(this);\r\n\r\n    }\r\n\r\n    add() {\r\n      this.setState({addContainer : !this.state.addContainer})\r\n    }\r\n\r\n    cambiarToastRed(message,accion) {\r\n        if(accion=='true'){\r\n        this.setState({\r\n            messageRed: message,\r\n            estadoToastRed: true\r\n        });}\r\n        else{\r\n          this.setState({\r\n              estadoToastRed: false\r\n          });\r\n        }\r\n\r\n    }\r\n    cambiarToastGreen(message,accion) {\r\n        if(accion=='true'){\r\n        this.setState({\r\n            messageGreen: message,\r\n            estadoToastGreen: true\r\n        });}\r\n        else{\r\n          this.setState({\r\n              estadoToastGreen: false\r\n          });}\r\n        }\r\n\r\n    cambiarModalProducto() {\r\n        this.setState({\r\n            estadoModalProducto: !this.state.estadoModalProducto\r\n        });\r\n    }\r\n    cambiarModalMarca(){\r\n        this.setState({\r\n            estadoModalMarca: !this.state.estadoModalMarca\r\n        })\r\n    }\r\n    cambiarModalProveedor(){\r\n        this.setState({\r\n            estadoModalProveedor: !this.state.estadoModalProveedor\r\n        })\r\n    }\r\n    cambiarModalEditarProducto(){\r\n        this.setState({\r\n            estadoModalEditarProducto: !this.state.estadoModalEditarProducto\r\n        })\r\n    }\r\n    cambiarModalCaja(){\r\n        this.setState({\r\n            estadoModalCaja: !this.state.estadoModalCaja\r\n        })\r\n    }\r\n    cambiarModalAbrirCaja(){\r\n        this.setState({\r\n            estadoModalAbrirCaja: !this.state.estadoModalAbrirCaja\r\n        })\r\n    }\r\n    cambiarModalCerrarCaja(){\r\n        this.setState({\r\n            estadoModalCerrarCaja: !this.state.estadoModalCerrarCaja\r\n        })\r\n    }\r\n    addComponentEntrada() {\r\n      this.setState({addContainer : !this.state.addContainer})\r\n    }\r\n\r\n\r\n    cleanInputs(){\r\n\r\n        this.setState({\r\n            idProducto:'',\r\n            codigoP:'',\r\n            nombreM: '',\r\n            nombreT: '',\r\n            nombreP: '',\r\n            precioP: '',\r\n            //idMarca:'',\r\n            //idTipo:'',\r\n            cantidadP: '',\r\n            idProveedor:'',\r\n            idFactura:'',\r\n            datepick:'',\r\n            nowday:'',\r\n            precio:'',\r\n            cantidad:'',\r\n            nuevoTipoProducto:'',\r\n            precioVentaProducto:'',\r\n            codigoProductoNuevo:'',\r\n            nombreProductoNuevo:'',\r\n            rucProveedor:'',\r\n            telefonoProveedor:'',\r\n            nombreProveedor:'',\r\n            direccionProveedor:'',\r\n            tipoProveedor:'',\r\n\r\n            //cajas agregar\r\n            codigoCaja:'',                      codigoProductoCaja:          '',\r\n            idProductoCaja:'',                  nombreCaja:                  '',\r\n            cantidadProductosCaja:'',           precioCaja:                  '',\r\n            codeC:'',                           code:                        '',\r\n\r\n            //abrir Cajas\r\n            codigoAbrirCaja:'',                 nombreCajaAbrirCaja:         '',\r\n            stockCajaAbrirCaja:'',              cantidadProductosAbrirCaja:  '',\r\n            precioCajaAbrirCaja:'',             nombreProductoAbrirCaja:     '',\r\n            stockProductoAbrirCaja:'',          precioProductoAbrirCaja:     '',\r\n            cantidadAbrirCaja:'',               codeAbrirCaja:               '',\r\n            //Cerrar cajas\r\n            codigoCerrarCaja:'',                 nombreCajaCerrarCaja:         '',\r\n            stockCajaCerrarCaja:'',              cantidadProductosCerrarCaja:  '',\r\n            precioCajaCerrarCaja:'',             nombreProductoCerrarCaja:     '',\r\n            stockProductoCerrarCaja:'',          precioProductoCerrarCaja:     '',\r\n            cantidadCerrarCaja:'',               codeCerrarCaja:               ''\r\n        })\r\n\r\n    }\r\n\r\n    fechAgregarTipo(){\r\n        fetch(\r\n            config.api+'/almacen/tiposproductos/tb_tiposProductos',\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    this.setState({tiposproductos_tb: data}, () => {\r\n                        this.suprimirDatos();\r\n                    });\r\n        })\r\n    }\r\n\r\n    fetchRUC(){\r\n        fetch(config.api+`/consult/ruc/${this.state.rucProveedor}`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({RUCdatos: data}, () => {\r\n                this.datosdeRUC();\r\n            });\r\n    })\r\n}\r\n\r\n    datosdeRUC(){\r\n        if(this.state.RUCdatos){\r\n            this.setState({\r\n                telefonoProveedor:this.state.RUCdatos.persona.telefonos[0],\r\n                nombreProveedor:this.state.RUCdatos.persona.razonSocial,\r\n                direccionProveedor:this.state.RUCdatos.persona.direccion,\r\n                tipoProveedor:this.state.RUCdatos.persona.tipo\r\n            }) \r\n            console.log(this.state.RUCdatos)\r\n        }\r\n    }\r\n\r\n    fetchTasks(){\r\n            fetch(\r\n                config.api+'/almacen/tb_almacen',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    this.setState({productos_tb: data},()=>this.agregarBotones());\r\n                    console.log(this.state.productos_tb);\r\n\r\n            })\r\n\r\n            fetch(\r\n                config.api+'/almacen/proveedores/tb_proveedores',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            this.setState({proveedores_tb: data});\r\n\r\n                })\r\n\r\n            fetch(\r\n                config.api+'/almacen/tiposproductos/tb_tiposProductos',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            this.setState({tiposproductos_tb: data});\r\n                })\r\n\r\n            fetch(\r\n                config.api+'/almacen/marcas/tb_marcas',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                this.setState({marcas_tb: data});\r\n            })\r\n    }\r\n\r\n    suprimirDatos(){\r\n        let x = [];\r\n        let y = [] ;\r\n        let b = [];\r\n        let q= [];\r\n\r\n        if(this.state.marcas_tb.data){\r\n            this.state.marcas_tb.data.map(task=>{\r\n                x.push({\r\n                    nombre: task.nombre,\r\n                    id: task.id\r\n                    });\r\n                })\r\n        }\r\n\r\n        b = [ ...new Map(x.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\r\n\r\n        if(this.state.tiposproductos_tb.data){\r\n            this.state.tiposproductos_tb.data.map(task=>{\r\n                y.push({\r\n                    nombre: task.nombre,\r\n                    id: task.id\r\n                });\r\n            }) \r\n        }\r\n        q = [ ...new Map(y.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\r\n\r\n        this.setState({\r\n            tasksM: b,\r\n            tasksTP: q\r\n        },()=>this.operacionScope())\r\n    }\r\n\r\n    operacionScope(){\r\n\r\n      let x = this.state.tasksM[0];\r\n      let y = this.state.tasksTP[0];\r\n\r\n      if(x && y){\r\n      let idMarca = x.id;\r\n      let idTipo = y.id;\r\n\r\n      this.setState({\r\n        idMarca: idMarca,\r\n        idTipo: idTipo\r\n      },()=>console.log(this.state.idMarca, this.state.idTipo))\r\n      }\r\n    }\r\n\r\n\r\n\r\n    editTask(idP,codeP,nameM, nameT,nameP,precioP,idM,idT){\r\n\r\n        console.log(codeP,nameM, nameT,nameP,precioP,idM,idT);\r\n\r\n        let x = [];\r\n        let y = [];\r\n        let b = [];\r\n        let q = [];\r\n\r\n        if(this.state.marcas_tb.data){\r\n            this.state.marcas_tb.data.map(task=>{\r\n                x.push({\r\n                    nombre: task.nombre,\r\n                    id: task.id\r\n                 });\r\n             })\r\n        }\r\n        b = [ ...new Map(x.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\r\n\r\n        if(this.state.tiposproductos_tb.data){\r\n            this.state.tiposproductos_tb.data.map(task=>{\r\n                y.push({\r\n                   nombre: task.nombre,\r\n                   id: task.id\r\n                 });\r\n             })\r\n        }\r\n        q = [ ...new Map(y.map(obj => [`${obj.nombre}:${obj.id}`, obj])).values()];\r\n\r\n\r\n        this.setState({\r\n            idProducto: idP,\r\n            codigoP: codeP,\r\n            nombreM: nameM,\r\n            nombreT: nameT,\r\n            nombreP: nameP,\r\n            precioP: precioP,\r\n            idMarca: idM,\r\n            idTipo:idT,\r\n            tasksM: b,\r\n            tasksTP: q\r\n        })\r\n\r\n      }\r\n\r\n      sendAgregarEntrada(){\r\n\r\n            console.log(this.state.idProveedor,\r\n                this.state.idFactura,\r\n                this.state.datepick,\r\n                this.state.precio,\r\n                 this.state.cantidad,\r\n                this.state.idProducto)\r\n            fetch(config.api+`/almacen/entrada/crear`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    proveedor: this.state.idProveedor,\r\n                    factura: this.state.idFactura,\r\n                    fecha: this.state.datepick,\r\n                    precio: this.state.precio,\r\n                    cantidad: this.state.cantidad,\r\n                    producto: this.state.idProducto,\r\n                    cantidadProducto: 1\r\n\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n\r\n                }\r\n            }\r\n        )\r\n        .then(res =>res.json())\r\n        .then(data => {\r\n            if(data.response==true){\r\n              console.log(\"exito\");\r\n              this.cambiarToastGreen(\"Se agrego con exito la entrada\",'true');\r\n              this.fetchTasks();\r\n            }\r\n            else{\r\n              console.log(\"error\");\r\n              this.cambiarToastRed(\"Hubo un error al agregar entrada\",'true');\r\n            }\r\n\r\n        }).catch((error)=> {\r\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n          this.cambiarToastRed(\"Hubo un error al agregar entrada\",'true');\r\n        });  }\r\n\r\n    sendAgregarProducto(){\r\n\r\n        fetch(config.api+`/almacen/producto/crear`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token': csrf_token,\r\n                precioVentaProducto:this.state.precioVentaProducto,\r\n                codigoProductoNuevo:this.state.codigoProductoNuevo,\r\n                marcaProducto:this.state.idMarca,\r\n                tipoProducto:  this.state.idTipo,\r\n                nombreProductoNuevo: this.state.nombreProductoNuevo\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n\r\n            }\r\n          }\r\n          )\r\n          .then(res =>res.json())\r\n          .then(data => {\r\n              if(data.response==true){\r\n                console.log(\"exito\");\r\n                this.cambiarToastGreen(\"Se agrego correctamente el producto\",'true');\r\n                this.fetchTasks();\r\n                this.cleanInputs();\r\n              }\r\n              else{\r\n                console.log(\"error\");\r\n                this.cambiarToastRed(\"Hubo un error al agregar producto\",'true');\r\n              }\r\n\r\n\r\n          }).catch((error)=> {\r\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n            this.cambiarToastRed(\"Hubo un error al agregar producto\",'true');\r\n          });  }\r\n\r\n    sendAgregarTipoProducto(){\r\n\r\n            fetch(config.api+`/almacen/tipo/crear`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    nuevoTipoProducto: this.state.nuevoTipoProducto\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n\r\n                }\r\n            }\r\n        )\r\n        .then(res =>res.json())\r\n        .then(data => {\r\n              if(data.response==true){\r\n                console.log(\"exito\");\r\n                this.cambiarToastGreen(\"Se agrego correctamente el tipo de producto\",'true');\r\n                this.fechAgregarTipo();\r\n              }\r\n              else{\r\n                console.log(\"error\");\r\n                this.cambiarToastRed(\"Hubo un error al agregar Tipo producto\",'true');\r\n              }\r\n\r\n        }).catch((error)=> {\r\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n          this.cambiarToastRed(\"Hubo un error al agregar Tipo producto\",'true');\r\n        });  }\r\n\r\n\r\n    comprobarCodeCaja(){\r\n          fetch(config.api+'/producto/buscar/caja',\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                    //   '_token': csrf_token,\r\n                      codigoCajaProducto: this.state.codeC\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n                    )\r\n\r\n                  .then(res => res.json())\r\n                  .then(data => {\r\n                    if(data.response == true && data.existe == true){\r\n                      console.log(data);\r\n                      this.cambiarToastGreen(data.mensaje,'true');\r\n                      this.setState({\r\n                        cantidadProductosCaja: data.producto.cantidad,\r\n                        nombreCaja: data.producto.nombre,\r\n                        idMarca: data.producto.marca_id,\r\n                        idTipo: data.producto.tipo_id,\r\n                        precioCaja:data.producto.precio,\r\n                      })\r\n                        }\r\n                    else if(data.response == true && data.existe == false){\r\n                      console.log(data);\r\n                      this.cambiarToastGreen(data.mensaje,'true');\r\n                    }\r\n                    else{\r\n                      console.log(data)\r\n                      this.cambiarToastRed(data.mensaje,'true');\r\n                    }\r\n\r\n                  })\r\n        }\r\n\r\n    sendAgregarCaja(){\r\n\r\n              fetch(config.api+`/almacen/caja/crear`,\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                    //   '_token': csrf_token,\r\n                      codigoCaja: this.state.codigoCaja,\r\n                      idProducto: this.state.idProductoCaja,\r\n                      tipoProducto: this.state.idTipo,\r\n                      marcaProducto:  this.state.idMarca,\r\n                      cantidadProducto: this.state.cantidadProductosCaja,\r\n                      nombreCaja: this.state.nombreCaja,\r\n                      precioCaja: this.state.precioCaja\r\n\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n              }\r\n          )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n              if(data.response==true){\r\n                console.log(\"exito\");\r\n                this.cambiarToastGreen(\"Se agrego correctamente la caja\",'true');\r\n                this.cleanInputs();\r\n                this.fetchTasks();\r\n\r\n              }\r\n              else{\r\n                console.log(\"error\");\r\n                this.cambiarToastRed(\"Hubo un error al agregar la caja\",'true');\r\n              }\r\n\r\n          })\r\n          .catch((error)=> {\r\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n            this.cambiarToastRed(\"Hubo un error al agregar la caja\",'true');\r\n          });  }\r\n\r\n\r\n    sendAgregarMarca(){\r\n\r\n            fetch(config.api+`/almacen/marca/crear`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    nombreMarca: this.state.nombreMarca\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.response==true){\r\n              console.log(\"exito\");\r\n              this.cambiarToastGreen(\"Se agrego correctamente la marca\",'true');\r\n              this.fetchTasks();\r\n            }\r\n            else{\r\n              console.log(\"error\");\r\n              this.cambiarToastRed(\"Hubo un error al agregar la marca\",'true');\r\n            }\r\n\r\n        })\r\n        .catch((error)=> {\r\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n          this.cambiarToastRed(\"Hubo un error al agregar la marca\",'true');\r\n        });  }\r\n\r\n    sendAgregarProveedor(){\r\n            fetch(config.api+'/almacen/proveedor/crear',\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token': csrf_token,\r\n                        rucProveedor:this.state.rucProveedor,\r\n                        telefonoProveedor:this.state.telefonoProveedor,\r\n                        nombreProveedor:this.state.nombreProveedor,\r\n                        direccionProveedor:this.state.direccionProveedor,\r\n                        tipoProveedor:this.state.tipoProveedor\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n\r\n                    }\r\n                }\r\n            )\r\n            .then(res =>res.json())\r\n            .then(data => {\r\n                if(data.response==true){\r\n                  console.log(\"exito\");\r\n                  this.cambiarToastGreen(\"Se agrego correctamente el proveedor\",'true');\r\n                }\r\n                else{\r\n                  console.log(\"error\");\r\n                  this.cambiarToastRed(\"Hubo un error al agregar proveedor\",'true');\r\n                }\r\n            })\r\n            .catch((error)=> {\r\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n              this.cambiarToastRed(\"Hubo un error al agregar proveedor\",'true');\r\n            });  }\r\n\r\n    sendAbrirCaja(){\r\n\r\n            fetch(config.api+`/almacen/caja/abrir`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token': csrf_token,\r\n                        codigoCaja: this.state.codigoAbrirCaja,\r\n                        numAbrir: this.state.cantidadAbrirCaja,\r\n\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.response==true){\r\n                  console.log(\"exito\");\r\n                  this.cambiarToastGreen(\"Se abrio correctamente la caja\",'true');\r\n                  this.cleanInputs();\r\n                  this.fetchTasks();\r\n                }\r\n                else{\r\n                  console.log(\"error\");\r\n                  this.cambiarToastRed(\"Hubo un error al abrir la caja\",'true');\r\n                }\r\n\r\n            })\r\n            .catch((error)=> {\r\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n              this.cambiarToastRed(\"Hubo un error al abrir la caja\",'true');\r\n            });  }\r\n\r\n\r\n    comprobarCodeAbrirCaja(){\r\n        fetch(config.api+'/almacen/caja/consulta',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    codigoCaja: this.state.codeAbrirCaja\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n              })\r\n\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                  if(data.response == true){\r\n                    console.log(data);\r\n                    this.setState({\r\n                      nombreCajaAbrirCaja:data.CAJA.nombre,\r\n                      stockCajaAbrirCaja:data.CAJA.stock,\r\n                      precioCajaAbrirCaja:data.CAJA.precio,\r\n                      cantidadProductosAbrirCaja:data.CAJA.cantidad,\r\n                      nombreProductoAbrirCaja:data.PRODUCTO.nombre,\r\n                      stockProductoAbrirCaja:data.PRODUCTO.stock,\r\n                      precioProductoAbrirCaja:data.PRODUCTO.precio\r\n                    },()=>console.log(\"entregado\"))\r\n                    this.cambiarToastGreen(\"Es una caja\",'true');\r\n                  }\r\n                  else{\r\n                    console.log(data)\r\n                    this.cambiarToastRed(\"No es una caja\",'true');\r\n                  }\r\n\r\n                })\r\n      }\r\n      sendCerrarCaja(){\r\n\r\n              fetch(config.api+`/almacen/caja/cerrar`,\r\n                  {\r\n                      method: 'POST',\r\n                      body: JSON.stringify({\r\n                        //   '_token': csrf_token,\r\n                          codigoCaja: this.state.codigoCerrarCaja,\r\n                          numAbrir: this.state.cantidadCerrarCaja,\r\n\r\n                      }),\r\n                      headers: {\r\n                          'Accept' : 'application/json',\r\n                          'Content-Type': 'application/json',\r\n                          'usuid'         : localStorage.getItem('usuid')\r\n                      }\r\n                  }\r\n              )\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                  if(data.response==true){\r\n                    console.log(\"exito\");\r\n                    this.cambiarToastGreen(\"Se cerro correctamente la caja\",'true');\r\n                    this.cleanInputs();\r\n                    this.fetchTasks();\r\n                  }\r\n                  else{\r\n                    console.log(\"error\");\r\n                    this.cambiarToastRed(\"Hubo un error al cerrar la caja\",'true');\r\n                  }\r\n\r\n              })\r\n              .catch((error)=> {\r\n                console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                this.cambiarToastRed(\"Hubo un error al abrir la caja\",'true');\r\n              });  }\r\n\r\n\r\n      comprobarCodeCerrarCaja(){\r\n          fetch(config.api+'/almacen/caja/consulta',\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                    //   '_token': csrf_token,\r\n                      codigoCaja: this.state.codeCerrarCaja\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                })\r\n\r\n                  .then(res => res.json())\r\n                  .then(data => {\r\n                    if(data.response == true){\r\n                      console.log(data);\r\n                      this.setState({\r\n                        nombreCajaCerrarCaja:data.CAJA.nombre,\r\n                        stockCajaCerrarCaja:data.CAJA.stock,\r\n                        precioCajaCerrarCaja:data.CAJA.precio,\r\n                        cantidadProductosCerrarCaja:data.CAJA.cantidad,\r\n                        nombreProductoCerrarCaja:data.PRODUCTO.nombre,\r\n                        stockProductoCerrarCaja:data.PRODUCTO.stock,\r\n                        precioProductoCerrarCaja:data.PRODUCTO.precio\r\n                      },()=>console.log(\"entregado\"))\r\n                      this.cambiarToastGreen(\"Es una caja\",'true');\r\n                    }\r\n                    else{\r\n                      console.log(data)\r\n                      this.cambiarToastRed(\"No es una caja\",'true');\r\n                    }\r\n\r\n                  })\r\n        }\r\n\r\n    sendEditarProducto(){\r\n\r\n        fetch(config.api+`/almacen/producto/editar`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token': csrf_token,\r\n                editarIdProducto: this.state.idProducto,\r\n                editarCodigoProductoNuevo: this.state.codigoP,\r\n                editarMarcaProducto: this.state.idMarca,\r\n                editarTipoProducto: this.state.idTipo,\r\n                editarNombreProductoNuevo: this.state.nombreP,\r\n                editarPrecioVentaProducto: this.state.precioP\r\n\r\n\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n\r\n            }\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n              if(data.response==true){\r\n                console.log(\"exito\");\r\n                this.cambiarToastGreen(\"Se edito correctamente el producto\",'true');\r\n                this.fetchTasks();\r\n              }\r\n              else{\r\n                console.log(\"error\");\r\n                this.cambiarToastRed(\"Hubo un error al editar producto\",'true');\r\n              }\r\n\r\n        }).catch((error)=> {\r\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n          this.cambiarToastRed(\"Hubo un error al editar producto\",'true');\r\n        });  }\r\n\r\n    deleteProducto(id){\r\n        console.log(id);\r\n            fetch(config.api+`/producto/eliminar`,{\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    id: id\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-type' : 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(data =>{\r\n                if(data.response==true){\r\n                  console.log(\"exito\");\r\n                  this.cambiarToastGreen(\"Se elimino el producto\",'true');\r\n                  this.fetchTasks();\r\n                }\r\n                else{\r\n                  console.log(\"error\");\r\n                  this.cambiarToastRed(\"Error en eliminar el producto\",'true');\r\n                }\r\n            })\r\n            .catch((error)=> {\r\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n              this.cambiarToastRed(\"Error en eliminar el producto\",'true');\r\n            });  }\r\n\r\n\r\n//buscador------------------------------------|\r\n\r\n      agregarBotones(){\r\n          let z = this.state.productos_tb.last_page\r\n          console.log(z);\r\n          let x = [];\r\n          if(z){\r\n\r\n          for(let i = 1 ; i <= z ; i++){\r\n            x.push(i);\r\n          }\r\n          this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\r\n          }\r\n        }\r\n\r\n      cambiarPaginate(number){\r\n          this.setState({\r\n            paginaSeleccionadaTbVenta : number\r\n          })\r\n          console.log(number);\r\n          fetch(\r\n              config.api+`/almacen/tb_almacen?page=${number}&buscar=${this.state.estadoQuery}`,\r\n              {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({productos_tb: data},()=>{\r\n                  console.log(this.state.productos_tb)\r\n                  this.agregarBotones();\r\n                });\r\n\r\n          })\r\n\r\n        }\r\n\r\n\r\n      fetchQuery(query,name){\r\n            fetch(\r\n                config.api+`/almacen/tb_almacen?${name}=${query}`,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                this.setState({productos_tb: data,estadoQuery: query}, () => {\r\n                    this.agregarBotones();\r\n                    console.log(\"obtenido?\");\r\n                });\r\n              })\r\n        }\r\n\r\n      handleChangeBuscador (e){\r\n          const {name , value} = e.target;\r\n          console.log(value);\r\n          this.fetchQuery(value,name);\r\n          console.log(name);\r\n\r\n        }\r\n\r\n\r\n\r\n// |----------------------------------------|\r\n\r\n     handleChange (e){\r\n            const {name , value} = e.target;\r\n            this.setState({\r\n                [name] : value\r\n\r\n            })\r\n            console.log(name);\r\n            console.log(value);\r\n            console.log(this.state.idProveedor);\r\n\r\n        }\r\n    handleChangeRUC(e){\r\n        const {name , value} = e.target;\r\n\r\n        if(value.length == 11){\r\n            this.setState({\r\n                [name] : value\r\n\r\n            }, () => {\r\n                this.fetchRUC();\r\n            })\r\n            console.log(value);\r\n        }\r\n\r\n    }\r\n\r\n     handleChangeTime (date){\r\n         this.setState({\r\n             datepick: format(date, 'yyyy-MM-dd'),\r\n             nowday: date\r\n         });\r\n         console.log(this.state.datepick);\r\n     };\r\n    componentDidMount(){\r\n        this.fetchTasks();\r\n        // console.log(csrf_token);\r\n    }\r\n\r\n//comprobar ......\r\n    handleKeyDown2(e){\r\n      if(e.key === 'Enter'){\r\n        console.log('hacer validacion');\r\n        this.comprobarCodeProducto();\r\n      }\r\n    }\r\n    handleKeyDown1(e){\r\n      if(e.key === 'Enter'){\r\n        console.log('hacer validacion');\r\n        console.log(e.target.name);\r\n        var name = e.target.name;\r\n        this.setState({code: e.target.value},()=>this.comprobarCodeProductoCaja());\r\n      }\r\n    }\r\n    handleKeyDown3(e){\r\n      if(e.key === 'Enter'){\r\n        console.log('hacer validacion');\r\n        console.log(e.target.name);\r\n        this.setState({codeC: e.target.value},()=>this.comprobarCodeCaja());\r\n      }\r\n    }\r\n    handleKeyDown4(e){\r\n      if(e.key === 'Enter'){\r\n        console.log('hacer validacion');\r\n        console.log(e.target.name);\r\n        this.setState({codeAbrirCaja: e.target.value},()=>this.comprobarCodeAbrirCaja());\r\n        }\r\n    }\r\n    handleKeyDown5(e){\r\n      if(e.key === 'Enter'){\r\n        console.log('hacer validacion');\r\n        this.setState({codeCerrarCaja: e.target.value},()=>this.comprobarCodeCerrarCaja());\r\n        }\r\n      }\r\n    comprobarCodeProducto(){\r\n        fetch(config.api+'/producto/buscar',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    codigoProducto: this.state.codigoProductoNuevo\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n                    }\r\n                  )\r\n\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                  if(data.response == true){\r\n                    console.log(data);\r\n                    this.cambiarToastRed(\"El producto ya existe\",'true');\r\n                  }\r\n                  else{\r\n                    console.log(data)\r\n                    this.cambiarToastGreen(\"El producto no existe\",'true');\r\n\r\n                  }\r\n\r\n            })\r\n      }\r\n\r\n    comprobarCodeProductoCaja(){\r\n        fetch(config.api+'/producto/buscar/caja',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    codigoCajaProducto: this.state.code\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n              }\r\n                  )\r\n\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                  if(data.response == true && data.existe == true){\r\n                    console.log(data);\r\n                    this.cambiarToastGreen(\"El producto ya existe\",'true');\r\n                    this.setState({idProductoCaja: data.producto.id});\r\n                  }\r\n                  else if(data.response == true && data.existe == false){\r\n                    console.log(data);\r\n                    this.cambiarToastRed(\"El producto no existe.Agregalo\",'true');\r\n                    this.cambiarModalCaja();\r\n                    this.cambiarModalProducto();\r\n                  }\r\n                  else{\r\n                    console.log(data)\r\n                    this.cambiarToastRed(data.mensaje,'true');\r\n\r\n                  }\r\n\r\n            })\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">Modulos de agregar</h4>\r\n                    <div className=\"button-group\">\r\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-primary\" onClick={() => this.addComponentEntrada()}>Agregar Entrada</button>\r\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-success\" onClick={()=>{this.suprimirDatos();this.cambiarModalProducto()}}>Agregar Producto</button>\r\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-danger\" onClick={()=>{this.suprimirDatos();this.cambiarModalCaja()}}>Agregar Caja</button>\r\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-dark\" onClick={()=>this.cambiarModalAbrirCaja()}>Abrir Caja</button>\r\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-light\" onClick={()=>this.cambiarModalCerrarCaja()}>Cerrar Caja</button>\r\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-info\" onClick={()=>this.cambiarModalMarca()}>Agregar Marca</button>\r\n                        <button type=\"button\" className=\"btn waves-effect waves-light btn-warning\" onClick={()=>this.cambiarModalProveedor()}>Agregar Proveedor</button>\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { this.state.addContainer && <EntradaCrear addContainer={this.add} />}\r\n\r\n        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                 <h4 className=\"card-title\">Buscar</h4>\r\n                  <div className=\"row\">\r\n                      <div className=\"col-3\">\r\n                          <label>Buscar Codigo</label>\r\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"bcodigo\" id=\"buscar_tb_codigo\" onChange={this.handleChangeBuscador}/>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                          <label>Buscar Marca</label>\r\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"bmarca\" id=\"buscar_tb_marca\" onChange={this.handleChangeBuscador} />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                          <label>Buscar Tipo</label>\r\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"btipo\" id=\"buscar_tb_tipo\" onChange={this.handleChangeBuscador}/>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                          <label>Buscar Nombre</label>\r\n                          <input type=\"text\" className=\"form-control form-control-lg\" name=\"bnombre\" id=\"buscar_tb_nombre\" onChange={this.handleChangeBuscador}/>\r\n                      </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n<div className=\"col-lg-12 grid-margin stretch-card\">\r\n    <div className=\"card\">\r\n        <div className=\"card-body\">\r\n            <h4 className=\"card-title\">Almacen de productos</h4>\r\n            <table id=\"tb_almacen\" className=\"table table-striped\" style={{width: '100%'}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Codigo</th>\r\n                        <th>Marca</th>\r\n                        <th>Tipo</th>\r\n                        <th>Nombre</th>\r\n                        <th>Precio</th>\r\n                        <th>Cantidad</th>\r\n                        <th>Opciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.state.productos_tb.data ?\r\n                        this.state.productos_tb.data.map(task =>{\r\n                            return (\r\n                                <tr key={task.codigoProducto}>\r\n                                    <td>{task.codigoProducto}</td>\r\n                                    <td>{task.nombreMarca}</td>\r\n                                    <td>{task.nombreTipo}</td>\r\n                                    <td>{task.nombreProducto}</td>\r\n                                    <td>{task.precioProducto}</td>\r\n                                    <td>{task.cantidadProducto}</td>\r\n                                    <td>\r\n                                     <button onClick={()=> this.deleteProducto(task.idProducto)}\r\n                                        className=\"btn btn-sm btn-danger eliminar\" >\r\n                                         <i className=\"mdi mdi-delete\"> </i>\r\n                                     </button>\r\n                                     <button\r\n                                        onClick={()=>{ this.editTask(task.idProducto,task.codigoProducto,task.nombreMarca,\r\n                                        task.nombreTipo,task.nombreProducto,task.precioProducto,task.idMarca,task.idTipo); this.cambiarModalEditarProducto()}}\r\n                                        className=\"btn btn-sm btn-secondary editar\" data-target=\"#productoEditarModal\">\r\n                                         <i className=\"mdi mdi-lead-pencil\">  </i>\r\n                                     </button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        } )   : null\r\n                    }\r\n              </tbody>\r\n            </table>\r\n              <div className=\"container\">\r\n                  <div className=\"row justify-content-end\">\r\n                    <div className=\"col-4\">\r\n\r\n                      {\r\n                        this.state.estadoBoton?\r\n                        this.state.estadoBoton.map(task =>{\r\n                            return (\r\n                                <button \r\n                                    style={\r\n                                        this.state.paginaSeleccionadaTbVenta == task\r\n                                        ?{background:'green'}\r\n                                        :{}\r\n                                    }\r\n                                    key={task}\r\n                                    className=\"btn btn-sm btn-secondary editar\" \r\n                                    type=\"button\" \r\n                                    onClick={()=>this.cambiarPaginate(task)}>{task}\r\n\r\n                                </button>\r\n\r\n                            );\r\n                         } )   : null\r\n                       }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n     <CerrarCaja  estadoModalCerrarCaja={this.state.estadoModalCerrarCaja} cambiarModalCerrarCaja={this.cambiarModalCerrarCaja}\r\n\r\n     codigoCerrarCaja={this.state.codigoCerrarCaja}  nombreCajaCerrarCaja={this.state.nombreCajaCerrarCaja}\r\n     stockCajaCerrarCaja={this.state.stockCajaCerrarCaja} cantidadProductosCerrarCaja={this.state.cantidadProductosCerrarCaja}\r\n     precioCajaCerrarCaja={this.state.precioCajaCerrarCaja} nombreProductoCerrarCaja={this.state.nombreProductoCerrarCaja}\r\n     stockProductoCerrarCaja={this.state.stockProductoCerrarCaja} precioProductoCerrarCaja={this.state.precioProductoCerrarCaja}\r\n     cantidadCerrarCaja={this.state.cantidadCerrarCaja}\r\n     sendCerrarCaja={this.sendCerrarCaja}\r\n     handleChange={this.handleChange}\r\n     handleKeyDown5={this.handleKeyDown5}\r\n\r\n     />\r\n\r\n    <Modal\r\n     show={this.state.estadoModalCaja}\r\n     onHide={() => this.cambiarModalCaja()}\r\n\r\n    >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Agregar Caja\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <div className=\"card card-default\">\r\n               <div className=\"modal-body\">\r\n                   <div className=\"card-body\">\r\n                           <div className=\"form-group\">\r\n                               <div className=\"row\">\r\n                                   <div className=\"col-12\">\r\n                                       <label>Codigo de caja</label>\r\n                                       <div className=\"input-group\">\r\n                                           <input type=\"text\" className=\"form-control\" name=\"codigoCaja\" onChange={this.handleChange}  value={this.state.codigoCaja} onKeyDown={this.handleKeyDown3}/>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"row\">\r\n                                   <div className=\"col-12\">\r\n                                       <label>Codigo de producto</label>\r\n                                       <div className=\"input-group\">\r\n                                           <input type=\"text\" className=\"form-control\" name=\"codigoProductoCaja\" onChange={this.handleChange}  value={this.state.codigoProductoCaja} onKeyDown={this.handleKeyDown1}/>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"row\">\r\n                                   <div className=\"col-12\">\r\n                                       <label>Cantidad de productos en esta caja</label>\r\n                                       <div className=\"input-group\">\r\n                                           <input type=\"text\" className=\"form-control\" name=\"cantidadProductosCaja\" onChange={this.handleChange}  value={this.state.cantidadProductosCaja}/>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"row\">\r\n                                   <div className=\"col-12\">\r\n                                       <label>Nombre de caja</label>\r\n                                       <div className=\"input-group\">\r\n                                           <input type=\"text\" className=\"form-control\" name=\"nombreCaja\" onChange={this.handleChange}  value={this.state.nombreCaja}/>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"row\">\r\n                                   <div className=\"col-6\">\r\n                                       <label>Marcas</label>\r\n                                       <div className=\"input-group\">\r\n                                           <select className=\"form-control\" name=\"idMarca\" id=\"marcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\r\n                                               {\r\n                                                   this.state.tasksM ?\r\n                                                   this.state.tasksM.map(element => {\r\n                                                       return (\r\n                                                           <option value={element.id}  >{element.nombre}</option>\r\n                                                           );\r\n                                                   })\r\n                                                   :null\r\n                                               }\r\n                                           </select>\r\n                                       </div>\r\n                                   </div>\r\n                                   <div className=\"col-6\">\r\n                                       <label>Tipos de prodcuto</label>\r\n                                       <div className=\"input-group\">\r\n                                           <select className=\"form-control\" name=\"idTipo\" id=\"tipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo}>\r\n                                               {\r\n                                                   this.state.tasksTP ?\r\n                                                   this.state.tasksTP.map(element=>{\r\n                                                     return (\r\n                                                     <option value={element.id}>{element.nombre}</option>\r\n                                                     );\r\n                                               })\r\n                                                : null\r\n                                               }\r\n                                           </select>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"row\">\r\n                                   <div className=\"col-12\">\r\n                                       <label>Precio de caja con IGV(18%)</label>\r\n                                       <div className=\"input-group\">\r\n                                           <input type=\"text\" className=\"form-control\" name=\"precioCaja\" onChange={this.handleChange}  value={this.state.precioCaja}/>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"form-group boton\">\r\n                               <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\" onClick={()=>this.sendAgregarCaja()}>\r\n                                   Agregar</button>\r\n                           </div>\r\n                      </div>\r\n               </div>\r\n           </div>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    <Modal\r\n       size='lg'\r\n       show={this.state.estadoModalAbrirCaja}\r\n       onHide={() => this.cambiarModalAbrirCaja()}\r\n\r\n      >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Abrir Caja\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"card card-default\">\r\n                 <div className=\"modal-body\">\r\n                     <div className=\"card-body\">\r\n                             <div className=\"form-group\">\r\n                                 <div className=\"row\">\r\n                                     <div className=\"col-12\">\r\n                                         <label>Codigo de caja</label>\r\n                                         <div className=\"input-group\">\r\n                                             <input type=\"text\" className=\"form-control\" name=\"codigoAbrirCaja\" onChange={this.handleChange}  value={this.state.codigoAbrirCaja} onKeyDown={this.handleKeyDown4}/>\r\n                                         </div>\r\n                                     </div>\r\n                                 </div>\r\n                             </div>\r\n                             <div className=\"form-group\">\r\n                                 <div className=\"row\">\r\n                                     <div className=\"col-4\">\r\n                                         <label>Nombre de Caja</label>\r\n                                         <h4 className=\"card-title\"> {this.state.nombreCajaAbrirCaja} </h4>\r\n                                     </div>\r\n                                     <div className=\"col-2\">\r\n                                         <label>Stock</label>\r\n                                         <h4 className=\"card-title\"> {this.state.stockCajaAbrirCaja} </h4>\r\n                                     </div>\r\n                                     <div className=\"col-4\">\r\n                                         <label>Cantidad de productos dentro</label>\r\n                                         <h4 className=\"card-title\"> {this.state.cantidadProductosAbrirCaja} </h4>\r\n                                     </div>\r\n                                     <div className=\"col-2\">\r\n                                         <label>Precio</label>\r\n                                         <h4 className=\"card-title\"> S/{this.state.precioCajaAbrirCaja} </h4>\r\n                                     </div>\r\n                                 </div>\r\n                             </div>\r\n                             <div className=\"form-group\">\r\n                                 <div className=\"row\">\r\n                                     <div className=\"col-6\">\r\n                                         <label>Nombre del producto</label>\r\n                                         <h4 className=\"card-title\"> {this.state.nombreProductoAbrirCaja} </h4>\r\n                                     </div>\r\n                                     <div className=\"col-4\">\r\n                                         <label>Stock</label>\r\n                                         <h4 className=\"card-title\"> {this.state.stockProductoAbrirCaja} </h4>\r\n                                     </div>\r\n                                     <div className=\"col-2\">\r\n                                         <label>Precio</label>\r\n                                         <h4 className=\"card-title\"> S/{this.state.precioProductoAbrirCaja} </h4>\r\n                                     </div>\r\n                                 </div>\r\n                             </div>\r\n\r\n\r\n                             <div className=\"form-group\">\r\n                                 <div className=\"row\">\r\n                                     <div className=\"col-12\">\r\n                                         <label>Cuantas cajas desea abrir</label>\r\n                                         <div className=\"input-group\">\r\n                                             <input type=\"text\" className=\"form-control\" name=\"cantidadAbrirCaja\" onChange={this.handleChange}  value={this.state.cantidadAbrirCaja}/>\r\n                                         </div>\r\n                                     </div>\r\n                                 </div>\r\n                             </div>\r\n                             <div className=\"form-group boton\">\r\n                                 <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.sendAbrirCaja()}>\r\n                                     Abrir Caja</button>\r\n                             </div>\r\n                        </div>\r\n                 </div>\r\n             </div>\r\n\r\n          </Modal.Body>\r\n      </Modal>\r\n\r\n    <Modal\r\n        show={this.state.estadoModalProducto}\r\n        onHide={() => this.cambiarModalProducto()}\r\n        >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Agregar Producto\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <div className=\"card card-default\">\r\n            <div className=\"card-header cabezera\">\r\n                <div className=\"form-group row\">\r\n                                <div className=\"col-sm-6\">\r\n                                        <div className=\"form-check\">\r\n                                        <label className=\"form-check-label\">\r\n                                            <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"cerrarProducto\" value=\"1\" defaultChecked=\"\"/>\r\n                                            Cerrar automaticamente\r\n                                        <i className=\"input-helper\"></i></label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-check\">\r\n                                        <label className=\"form-check-label\">\r\n                                            <input type=\"radio\" className=\"form-check-input\" name=\"productoEstado\" id=\"abrirProducto\" value=\"0\"/>\r\n                                            Mantenerla abierta\r\n                                        <i className=\"input-helper\"></i></label>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                    </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Nuevo tipo de producto</label>\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\"      placeholder=\"Si no existe el tipo de producto agregalo\" className=\"form-control\" name=\"nuevoTipoProducto\" id=\"nuevoTipoProducto\" onChange={this.handleChange}  value={this.state.nuevoTipoProducto}/>\r\n                                            <div className=\"input-group-    append\">\r\n                                                <button  id=\"crearTipoProducto\"  className=\"btn form-control btn-sm btn-primary\" type=\"button\" onClick={()=>this.sendAgregarTipoProducto()}><i className=\"mdi mdi-plus\"></i></button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\" >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Codigo</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\" value={this.state.codigoProductoNuevo} onKeyDown={this.handleKeyDown2} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"col-12\" id=\"alertaCodigo\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <label>Marcas</label>\r\n                                        <div className=\"input-group\">\r\n                                            <select className=\"form-control\" name=\"idMarca\" id=\"marcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\r\n                                                {\r\n                                                    this.state.tasksM ?\r\n                                                    this.state.tasksM.map(element => {\r\n                                                        return (\r\n                                                            <option value={element.id}  >{element.nombre}</option>\r\n                                                            );\r\n                                                    })\r\n                                                    :null\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label>Tipos de prodcuto</label>\r\n                                        <div className=\"input-group\">\r\n                                            <select className=\"form-control\" name=\"idTipo\" id=\"tipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo}>\r\n                                                {\r\n                                                    this.state.tasksTP ?\r\n                                                    this.state.tasksTP.map(element=>{\r\n                                                    return (\r\n                                                    <option value={element.id}>{element.nombre}</option>\r\n                                                    );\r\n                                                })\r\n                                                 : null\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Nombre del producto</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\" onChange={this.handleChange} value={this.state.nombreProductoNuevo}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <label>Precio con IGV(18%)</label>\r\n                                        <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\r\n                                            pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange} value={this.state.precioVentaProducto}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group boton\">\r\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\" onClick={()=>this.sendAgregarProducto()}>\r\n                                    Agregar</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n\r\n        show={this.state.estadoModalMarca}\r\n        onHide={() => this.cambiarModalMarca()}\r\n        >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Agregar Marca\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n             <div className=\"card card-default\">\r\n                <div className=\"card-header cabezera\">\r\n                    <div className=\"form-group row\">\r\n                          <div className=\"col-sm-6\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"cerrarMarca\" value=\"1\" defaultChecked=\"\"/>\r\n                                Cerrar automaticamente\r\n                              <i className=\"input-helper\"></i></label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-sm-6\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"abrirMarca\" value=\"0\"/>\r\n                                Mantenerla abierta\r\n                              <i className=\"input-helper\"></i></label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Nombre de la marca</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreMarca\" id=\"nombreMarca\" onChange={this.handleChange}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group boton\">\r\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearMarca\" onClick={()=>this.sendAgregarMarca()}>\r\n                                    Agregar</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n\r\n        show={this.state.estadoModalProveedor}\r\n        onHide={() => this.cambiarModalProveedor()}\r\n        >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n             Agregar proveedor\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"card card-default\">\r\n                <div className=\"card-header cabezera\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-6\">\r\n                        <div className=\"form-check\">\r\n                            <label className=\"form-check-label\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"cerrarProveedor\" value=\"1\" defaultChecked=\"\"/>\r\n                            Cerrar automaticamente\r\n                            <i className=\"input-helper\"></i></label>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                        <div className=\"form-check\">\r\n                            <label className=\"form-check-label\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"abrirProveedor\" value=\"0\"/>\r\n                            Mantenerla abierta\r\n                            <i className=\"input-helper\"></i></label>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <label>RUC del proveedor</label>\r\n                                        <input type=\"number\" className=\"form-control\" name=\"rucProveedor\" onChange={this.handleChangeRUC}/>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label>Telefono</label>\r\n                                        <input type=\"number\" className=\"form-control\" name=\"telefonoProveedor\" id=\"telefonoProveedor\" value={this.state.telefonoProveedor} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                </div><br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Nombre del proveedor</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreProveedor\" id=\"nombreProveedor\" value={this.state.nombreProveedor} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                </div><br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Dirección</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"direccionProveedor\" id=\"direccionProveedor\" value={this.state.direccionProveedor} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                </div><br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Tipo</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"tipoProveedor\" id=\"tipoProveedor\" value={this.state.tipoProveedor} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group boton\">\r\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProveedor\" onClick={()=>this.sendAgregarProveedor()}>\r\n                                    Agregar</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n     <Modal\r\n\r\n        show={this.state.estadoModalEditarProducto}\r\n        onHide={() => this.cambiarModalEditarProducto()}\r\n        >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n             Editar Producto\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"card card-default\">\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\">\r\n                            <div className=\"form-group\" >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Codigo</label>\r\n                                        <input type=\"hidden\" name=\"editarIdProducto\" id=\"editarIdProducto\" value={this.state.idProducto}/>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"codigoP\" id=\"editarCodigoProductoNuevo\" value={this.state.codigoP} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"col-12\" id=\"editarAlertaCodigo\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <label>Marcas</label>\r\n                                        <div className=\"input-group\">\r\n                                            <select className=\"form-control\" name=\"idMarca\" id=\"editarMarcaProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idMarca}>\r\n                                                {\r\n                                                    this.state.tasksM ?\r\n\r\n                                                    this.state.tasksM.map(element => {\r\n                                                        return (\r\n                                                            <option value={element.id}  >{element.nombre}</option>\r\n                                                            );\r\n                                                    })\r\n                                                    :null\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label>Tipos de prodcuto</label>\r\n                                        <div className=\"input-group\">\r\n                                            <select className=\"form-control\" name=\"idTipo\" id=\"editarTipoProducto\" style={{width: '100%'}} onChange={this.handleChange} value={this.state.idTipo} >\r\n\r\n                                           {\r\n                                                    this.state.tasksTP ?\r\n                                                    this.state.tasksTP.map(element=>{\r\n                                                    return (\r\n                                                    <option value={element.id}>{element.nombre}</option>\r\n                                                    );\r\n                                                })\r\n                                                 : null\r\n\r\n\r\n                                                }\r\n\r\n\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Nombre del producto</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"nombreP\" id=\"editarNombreProductoNuevo\" value={this.state.nombreP} onChange={this.handleChange} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>Precio con IGV(18%)</label>\r\n                                        <input type=\"text\" name=\"precioP\" id=\"editarPrecioVentaProducto\" className=\"form-control\"\r\n                                            pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value={this.state.precioP} data-type=\"currency\" placeholder=\"S/1,000,000.00\" onChange={this.handleChange} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group boton\">\r\n                                <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarProducto\" onClick={()=>{\r\n                                    this.sendEditarProducto()\r\n                                }}>\r\n                                    Editar</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Toast\r\n            style={{\r\n            position: 'fixed',\r\n            top: 5,\r\n            right: 5,\r\n            zIndex:1060,\r\n            backgroundColor: 'rgba(76,208,76,0.7)',\r\n            color:'white'\r\n            }}\r\n            onClose={() => this.cambiarToastGreen('','false')}\r\n            show={this.state.estadoToastGreen}\r\n            delay={3000}\r\n            autohide\r\n            >\r\n              <Toast.Body>\r\n                <h4>{this.state.messageGreen}</h4>\r\n              </Toast.Body>\r\n        </Toast>\r\n\r\n      <Toast\r\n              style={{\r\n              position: 'fixed',\r\n              top: 5,\r\n              right: 5,\r\n              zIndex:1061,\r\n              backgroundColor: 'rgba(205,55,55,0.7)',\r\n              color:'white'\r\n                }}\r\n              onClose={() => this.cambiarToastRed('','false')}\r\n              show={this.state.estadoToastRed}\r\n              delay={3000}\r\n              autohide\r\n\r\n        >\r\n          <Toast.Body>\r\n            <h4>{this.state.messageRed}</h4>\r\n          </Toast.Body>\r\n      </Toast>\r\n\r\n            </div>\r\n    )\r\n}}\r\nexport default Almacen\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\nimport EntradaCrear from  './EntradaCrear';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport config from '../../config'\r\n\r\nclass Entrada extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            entrada_tb :[],\r\n            addContainer: false,\r\n\r\n            //modales\r\n            estadoModalEntrada:false,\r\n            //toasts\r\n            estadoToastRed:false,\r\n            estadoToastGreen:false,\r\n            messageRed:'',\r\n            messageGreen:'',\r\n            //botones\r\n            estadoBoton:[],\r\n            //query\r\n            estadoQuery:''\r\n        }\r\n        this.fechaEntradaDataTabla=this.fetchEntradaDataTabla.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.handleChangeBuscador = this.handleChangeBuscador.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.fetchEntradaDataTabla();\r\n    }\r\n\r\n    add() {\r\n      this.setState({addContainer : !this.state.addContainer})\r\n    }\r\n\r\n//envios posts\r\n\r\n    sendAgregarEntrada(){\r\n\r\n            fetch(config.api+`/almacen/entrada/crear`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    nombreEntrada: this.state.nombreEntrada\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.response==true){\r\n              console.log(\"exito\");\r\n              this.cambiarToastGreen(\"la entrada\");\r\n            }\r\n            else{\r\n              console.log(\"error\");\r\n              this.cambiarToastRed(\"en agregar Entrada\");\r\n            }\r\n\r\n        })\r\n        .catch((error)=> {\r\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n          this.cambiarToastRed(\"en agregar Entrada\");\r\n        });  }\r\n\r\n\r\n  eliminarEntrada(id,codigo,cantidad){\r\n            fetch(config.api+`/almacen/entrada/eliminar`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                    codigo: codigo,\r\n                    id: id,\r\n                    cantidad: cantidad\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.response==true){\r\n              console.log(\"eliminado\");\r\n              this.cambiarToastGreen(\"Se elimino la entrada\");\r\n              this.fetchEntradaDataTabla();\r\n            }\r\n            else{\r\n              console.log(\"error\");\r\n              this.cambiarToastRed(\"Error al eliminar Entrada\");\r\n            }\r\n\r\n        })\r\n        .catch((error)=> {\r\n          console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n          this.cambiarToastRed(\"Error en eliminar entrada\");\r\n        });  }\r\n\r\n\r\n\r\n//modales y toasts\r\n\r\n    cambiarToastRed(message) {\r\n        this.setState({\r\n            messageRed: message,\r\n            estadoToastRed: !this.state.estadoToastRed\r\n        });\r\n    }\r\n    cambiarToastGreen(message) {\r\n        this.setState({\r\n            messageGreen: message,\r\n            estadoToastGreen: !this.state.estadoToastGreen\r\n        });\r\n    }\r\n    cambiarModalEntrada(){\r\n       console.log(\"holaaaaaa\");\r\n        this.setState({\r\n            estadoModalEntrada: !this.state.estadoModalEntrada\r\n        })\r\n    }\r\n\r\n\r\n// Paginate y buscadores\r\n\r\n    agregarBotones(){\r\n      let z = this.state.entrada_tb.last_page\r\n      console.log(z);\r\n      let x = [];\r\n      if(z){\r\n\r\n      for(let i = 1 ; i <= z ; i++){\r\n        x.push(i);\r\n      }\r\n      this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\r\n      }\r\n    }\r\n\r\n    cambiarPaginate(number){\r\n      console.log(number);\r\n      fetch(\r\n        config.api+`/almacen/entrada/tb_entradas?page=${number}&buscar=${this.state.estadoQuery}`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({entrada_tb: data},()=>{\r\n              console.log(this.state.entrada_tb)\r\n              this.agregarBotones();\r\n            });\r\n\r\n      })\r\n\r\n    }\r\n\r\n    fetchQuery(query){\r\n        fetch(\r\n          config.api+`/almacen/entrada/tb_entradas?buscar=${query}`,\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n        )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            this.setState({entrada_tb: data,estadoQuery: query}, () => {\r\n                this.agregarBotones();\r\n                console.log(\"obtenido?\");\r\n            });\r\n          })\r\n    }\r\n\r\n    handleChangeBuscador (e){\r\n      const {name , value} = e.target;\r\n      console.log(value);\r\n      this.fetchQuery(value);\r\n      console.log(name);\r\n\r\n    }\r\n//|-------------------------------------------|\r\n    handleChange (e){\r\n      const {name , value} = e.target;\r\n      this.setState({\r\n          [name] : value\r\n\r\n      })\r\n      console.log(name);\r\n      console.log(value);\r\n    }\r\n\r\n    fetchEntradaDataTabla(){\r\n      fetch(\r\n        config.api+'/almacen/entrada/tb_entradas',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n              'Accept' : 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'usuid'         : localStorage.getItem('usuid')\r\n          }\r\n      }\r\n      )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n              this.setState({entrada_tb: data},()=>{\r\n                console.log(this.state.entrada_tb)\r\n                this.agregarBotones();\r\n              });\r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">Modulos de agregar</h4>\r\n                          <button type=\"button\" className=\"btn waves-effect waves-light btn-primary\" onClick={() => this.add()}>Agregar Entrada</button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n               { this.state.addContainer && <EntradaCrear addContainer={this.add} />}\r\n\r\n              <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n\r\n                          <table id=\"tb_entradas\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                              <thead>\r\n                                  <tr>\r\n                                      <th><h4 className=\"card-title\">Registro de entradas</h4></th>\r\n                                      <th><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <th>Numero Factura</th>\r\n                                      <th>Fecha</th>\r\n                                      <th>Codigo producto</th>\r\n                                      <th>Nombre producto</th>\r\n                                      <th>Cantidad</th>\r\n                                      <th>Precio</th>\r\n                                      <th>Opciones</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                     {\r\n                                      this.state.entrada_tb.data ?\r\n                                      this.state.entrada_tb.data.map(task =>{\r\n                                          return (\r\n                                              <tr key={task.id}>\r\n                                                  <td>{task.factura}</td>\r\n                                                  <td>{task.fecha}</td>\r\n                                                  <td>{task.codigo}</td>\r\n                                                  <td>{task.nombre}</td>\r\n                                                  <td>{task.cantidad}</td>\r\n                                                  <td>{task.precio}</td>\r\n                                                  <th>\r\n                                                  <button className=\"btn btn-sm btn-primary ver\" type=\"button\" onClick={()=>this.eliminarEntrada(task.entradaId,task.codigo,task.cantidad)}><i className=\"mdi mdi-delete\"></i></button>\r\n                                                  </th>\r\n                                              </tr>\r\n                                          );\r\n                                      } )   : null\r\n                                  }\r\n                              </tbody>\r\n                              </table>\r\n                              <div className=\"container\">\r\n                                  <div className=\"row justify-content-end\">\r\n                                    <div className=\"col-4\">\r\n\r\n                                      {\r\n                                        this.state.estadoBoton?\r\n                                        this.state.estadoBoton.map(task =>{\r\n                                            return (\r\n                                                <button key={task}\r\n                                                    className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\r\n\r\n                                            );\r\n                                         } )   : null\r\n                                       }\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n              <Modal\r\n                  size=\"lg\"\r\n                  show={this.state.estadoModalEntrada}\r\n                  onHide={() => this.cambiarModalEntrada()}\r\n                  >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                      Detalles de la entrada\r\n                    </Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                              <div className=\"card card-default\">\r\n                                      <div className=\"modal-body\">\r\n                                          <div className=\"card-body\" id=\"entradaDetalladaModalBody\">\r\n                                          <label>Proveedor:</label><br/>\r\n                                            <span id=\"proveedorEntradaDetalle\"></span><br/>\r\n                                          <label>Numero entrada:</label><br/>\r\n                                            <span id=\"numeroEntradaDetalle\"></span><br/>\r\n                                          <label>Fecha de emisón:</label><br/>\r\n                                            <span id=\"fechaEntradaDetalle\"></span><br/><br/>\r\n                                          <table className=\"table table-bordered\" id=\"tablaDetallesEntradaModal\">\r\n                                            <thead>\r\n                                              <tr>\r\n                                                <th>\r\n                                                  #\r\n                                                </th>\r\n                                                <th>\r\n                                                  Producto\r\n                                                </th>\r\n                                                <th>\r\n                                                  Precio\r\n                                                </th>\r\n                                                <th>\r\n                                                  Cantidad\r\n                                                </th>\r\n                                                <th> Importe </th>\r\n                                              </tr>\r\n                                            </thead>\r\n                                          <tbody>\r\n\r\n                                          </tbody>\r\n                                        </table>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n\r\n                  </Modal.Body>\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n              <Toast\r\n                    style={{\r\n                    position: 'fixed',\r\n                    top: 5,\r\n                    right: 5,\r\n                    zIndex:1060,\r\n                    backgroundColor: 'rgba(76,208,76,0.7)',\r\n                    color:'white'\r\n                    }}\r\n                    onClose={() => this.cambiarToastGreen()}\r\n                    show={this.state.estadoToastGreen}\r\n                    delay={3000}\r\n                    autohide\r\n                    >\r\n                      <Toast.Body>\r\n                        <h5>{this.state.messageGreen}</h5>\r\n                      </Toast.Body>\r\n                </Toast>\r\n\r\n              <Toast\r\n                      style={{\r\n                      position: 'fixed',\r\n                      top: 5,\r\n                      right: 5,\r\n                      zIndex:1061,\r\n                      backgroundColor: 'rgba(205,55,55,0.7)',\r\n                      color:'white'\r\n                        }}\r\n                      onClose={() => this.cambiarToastRed()}\r\n                      show={this.state.estadoToastRed}\r\n                      delay={3000}\r\n                      autohide\r\n\r\n                >\r\n                  <Toast.Body>\r\n                    <h5>{this.state.messageRed}</h5>\r\n                  </Toast.Body>\r\n              </Toast>\r\n\r\n\r\n            </div>\r\n\r\n)\r\n}}\r\nexport default Entrada\r\n","import React from 'react'\r\nimport {Component} from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport config from '../../config'\r\n\r\nclass Marca   extends Component {\r\n  \r\n    constructor(){\r\n      super();\r\n      this.state ={\r\n\r\n        csrf_token : \"\",\r\n        marca_tb :[],\r\n        nombreMarca:'',\r\n        editarNombreMarca:'',\r\n        editarIdMarca:'',\r\n        //modales\r\n        estadoModalMarca:false,\r\n        estadoModalEditarMarca:false,\r\n        //Toast\r\n        estadoToastRed:false,\r\n        estadoToastGreen:false,\r\n        messageRed:'',\r\n        messageGreen:'',\r\n        //botones\r\n        estadoBoton:[],\r\n        //query\r\n        estadoQuery:''\r\n      }\r\n      this.agregarBotones = this.agregarBotones.bind(this);\r\n      this.fetchDataTable = this.fetchDataTable.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleChangeBuscador = this.handleChangeBuscador.bind(this);\r\n  }\r\n\r\n\r\n      cambiarToastRed(message) {\r\n          this.setState({\r\n              messageRed: message,\r\n              estadoToastRed: !this.state.estadoToastRed\r\n          });\r\n      }\r\n      cambiarToastGreen(message) {\r\n          this.setState({\r\n              messageGreen: message,\r\n              estadoToastGreen: !this.state.estadoToastGreen\r\n          });\r\n      }\r\n\r\n      cambiarModalMarca(){\r\n          this.setState({\r\n              estadoModalMarca: !this.state.estadoModalMarca\r\n          })\r\n      }\r\n      cambiarModalEditarMarca(id,nombre){\r\n          this.setState({\r\n              estadoModalEditarMarca: !this.state.estadoModalEditarMarca,\r\n              editarNombreMarca: nombre,\r\n              editarIdMarca: id\r\n          })\r\n      }\r\n      sendAgregarMarca(){\r\n\r\n              fetch(config.api+`/almacen/marca/crear`,\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                      '_token': this.state.csrf_token,\r\n                      nombreMarca: this.state.nombreMarca\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n              }\r\n          )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n              if(data.response==true){\r\n                console.log(\"exito\");\r\n                this.cambiarToastGreen(\"la marca\");\r\n                this.fetchDataTable();\r\n              }\r\n              else{\r\n                console.log(\"error\");\r\n                this.cambiarToastRed(\"en agregar Marca\");\r\n              }\r\n\r\n          })\r\n          .catch((error)=> {\r\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n            this.cambiarToastRed(\"en agregar Marca\");\r\n          });  }\r\n\r\n      sendEditarMarca(){\r\n\r\n                  fetch(config.api+`/almacen/marcas/editar`,\r\n                  {\r\n                      method: 'POST',\r\n                      body: JSON.stringify({\r\n                          '_token': this.state.csrf_token,\r\n                          editarNombreMarca: this.state.editarNombreMarca,\r\n                          editarIdMarca: this.state.editarIdMarca\r\n                      }),\r\n                      headers: {\r\n                          'Accept' : 'application/json',\r\n                          'Content-Type': 'application/json',\r\n                          'usuid'         : localStorage.getItem('usuid')\r\n                      }\r\n                  }\r\n              )\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                  if(data.response==true){\r\n                    console.log(\"exito\");\r\n                    this.cambiarToastGreen(\"la marca\");\r\n                    this.fetchDataTable();\r\n                  }\r\n                  else{\r\n                    console.log(\"error\");\r\n                    this.cambiarToastRed(\"en editar Marca\");\r\n                  }\r\n\r\n              })\r\n              .catch((error)=> {\r\n                console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                this.cambiarToastRed(\"en editar Marca\");\r\n              });  }\r\n\r\n      deleteMarca(id){\r\n            console.log(id);\r\n                fetch(config.api+`/almacen/marcas/eliminar`,{\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        '_token': this.state.csrf_token,\r\n                        id: id\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-type' : 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                })\r\n                .then(res => res.json())\r\n                .then(data =>{\r\n                    if(data.response==true){\r\n                      console.log(\"exito\");\r\n                      this.cambiarToastGreen(\"en eliminar Marca\");\r\n                      this.fetchDataTable();\r\n                    }\r\n                    else{\r\n                      console.log(\"error\");\r\n                      this.cambiarToastRed(\"en eliminar Marca\");\r\n                    }\r\n                })\r\n                .catch((error)=> {\r\n                  console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                  this.cambiarToastRed(\"en eliminar Marca\");\r\n                });\r\n\r\n      }\r\n\r\n    agregarBotones(){\r\n      let z = this.state.marca_tb.last_page\r\n      console.log(z);\r\n      let x = [];\r\n      if(z){\r\n\r\n      for(let i = 1 ; i <= z ; i++){\r\n        x.push(i);\r\n      }\r\n      this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\r\n      }\r\n    }\r\n\r\n    cambiarPaginate(number){\r\n      console.log(number);\r\n      fetch(\r\n        config.api+`/almacen/marcas/tb_marcas?page=${number}&bnombre=${this.state.estadoQuery}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n              'Accept' : 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'usuid'         : localStorage.getItem('usuid')\r\n          }\r\n      }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({marca_tb: data},()=>{\r\n              console.log(this.state.marca_tb)\r\n              this.agregarBotones();\r\n            });\r\n\r\n      })\r\n\r\n    }\r\n\r\n\r\n    fetchDataTable(){\r\n      fetch(\r\n        config.api+'/almacen/marcas/tb_marcas',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n              'Accept' : 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'usuid'         : localStorage.getItem('usuid')\r\n          }\r\n      }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({marca_tb: data},()=>{\r\n              console.log(this.state.marca_tb)\r\n              this.agregarBotones();\r\n            });\r\n\r\n      })\r\n    }\r\n    fetchQuery(query){\r\n        fetch(\r\n          config.api+`/almacen/marcas/tb_marcas?bnombre=${query}`,\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n        )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            this.setState({marca_tb: data,estadoQuery: query}, () => {\r\n                this.agregarBotones();\r\n                console.log(\"obtenido?\");\r\n            });\r\n          })\r\n    }\r\n\r\n    handleChange (e){\r\n      const {name , value} = e.target;\r\n      this.setState({\r\n          [name] : value\r\n\r\n      })\r\n      console.log(name);\r\n      console.log(value);\r\n    }\r\n    handleChangeBuscador (e){\r\n      const {name , value} = e.target;\r\n      console.log(value);\r\n      this.fetchQuery(value);\r\n      console.log(name);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.fetchDataTable();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">Modulos de agregar</h4>\r\n                          <button type=\"button\" className=\"btn waves-effect waves-light btn-info\" onClick={()=>this.cambiarModalMarca()}>Agregar Marca</button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">Marcas</h4>\r\n                          <table id=\"tb_marcas\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                              <thead>\r\n                                  <tr>\r\n                                    <th style={{textAlign:'right'}}><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <th>Nombre de la marca</th>\r\n                                      <th>Opciones</th>\r\n                                  </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                  {\r\n                                          this.state.marca_tb.data ?\r\n                                          this.state.marca_tb.data.map(task =>{\r\n                                              return (\r\n                                                  <tr key={task.id}>\r\n                                                      <td>{task.nombre}</td>\r\n                                                      <td><button\r\n                                                      className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarModalEditarMarca(task.id,task.nombre)}><i className=\"mdi mdi-lead-pencil\"></i></button>\r\n                                                      <button className=\"btn btn-sm btn-danger eliminar\" type=\"button\" onClick={()=>this.deleteMarca(task.id)}><i className=\"mdi mdi-delete\"></i></button>\r\n                                                      </td>\r\n\r\n                                                  </tr>\r\n                                              );\r\n                                           } )   : null\r\n                                          }\r\n                              </tbody>\r\n\r\n                          </table>\r\n                          <div className=\"container\">\r\n                              <div className=\"row justify-content-end\">\r\n                                <div className=\"col-4\">\r\n\r\n                                  {\r\n                                    this.state.estadoBoton?\r\n                                    this.state.estadoBoton.map(task =>{\r\n                                        return (\r\n                                            <button key={task}\r\n                                                className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\r\n\r\n                                        );\r\n                                     } )   : null\r\n                                   }\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n            <Modal\r\n\r\n                show={this.state.estadoModalMarca}\r\n                onHide={() => this.cambiarModalMarca()}\r\n                >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Agregar Marca\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                     <div className=\"card card-default\">\r\n                        <div className=\"card-header cabezera\">\r\n                            <div className=\"form-group row\">\r\n                                  <div className=\"col-sm-6\">\r\n                                    <div className=\"form-check\">\r\n                                      <label className=\"form-check-label\">\r\n                                        <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"cerrarMarca\" value=\"1\" defaultChecked=\"\"/>\r\n                                        Cerrar automaticamente\r\n                                      <i className=\"input-helper\"></i></label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-sm-6\">\r\n                                    <div className=\"form-check\">\r\n                                      <label className=\"form-check-label\">\r\n                                        <input type=\"radio\" className=\"form-check-input\" name=\"marcaEstado\" id=\"abrirMarca\" value=\"0\"/>\r\n                                        Mantenerla abierta\r\n                                      <i className=\"input-helper\"></i></label>\r\n                                    </div>\r\n                                  </div>\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"card-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Nombre de la marca</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"nombreMarca\" id=\"nombreMarca\" onChange={this.handleChange}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"form-group boton\">\r\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearMarca\" onClick={()=>this.sendAgregarMarca()}>\r\n                                            Agregar</button>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Modal.Body>\r\n              </Modal>\r\n\r\n            <Modal\r\n\r\n                show={this.state.estadoModalEditarMarca}\r\n                onHide={() => this.cambiarModalEditarMarca()}\r\n                >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Editar Marca\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                      <div className=\"card card-default\">\r\n                          <div className=\"modal-body\">\r\n                              <div className=\"card-body\">\r\n                                      <div className=\"form-group\">\r\n                                          <div className=\"row\">\r\n                                              <div className=\"col-12\">\r\n                                                  <label>Nombre de la marca</label>\r\n                                                  <input type=\"text\" className=\"form-control\" name=\"editarNombreMarca\" id=\"editarNombreMarca\"  value={this.state.editarNombreMarca} onChange={this.handleChange}/>\r\n                                                  <input type=\"hidden\" name=\"editarIdMarca\" id=\"editarIdMarca\" />\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"form-group boton\">\r\n                                          <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarMarca\" onClick={()=>this.sendEditarMarca()}>\r\n                                              Editar</button>\r\n                                      </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                </Modal.Body>\r\n              </Modal>\r\n\r\n              <Toast\r\n                    style={{\r\n                    position: 'fixed',\r\n                    top: 5,\r\n                    right: 5,\r\n                    zIndex:1060,\r\n                    backgroundColor: 'rgba(76,208,76,0.7)',\r\n                    color:'white'\r\n                    }}\r\n                    onClose={() => this.cambiarToastGreen()}\r\n                    show={this.state.estadoToastGreen}\r\n                    delay={3000}\r\n                    autohide\r\n                    >\r\n                      <Toast.Body>\r\n                        <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\r\n                      </Toast.Body>\r\n                </Toast>\r\n\r\n              <Toast\r\n                      style={{\r\n                      position: 'fixed',\r\n                      top: 5,\r\n                      right: 5,\r\n                      zIndex:1061,\r\n                      backgroundColor: 'rgba(205,55,55,0.7)',\r\n                      color:'white'\r\n                        }}\r\n                      onClose={() => this.cambiarToastRed()}\r\n                      show={this.state.estadoToastRed}\r\n                      delay={3000}\r\n                      autohide\r\n\r\n                >\r\n                  <Toast.Body>\r\n                    <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\r\n                  </Toast.Body>\r\n              </Toast>\r\n\r\n\r\n            </div>\r\n\r\n)}}\r\n\r\nexport default Marca\r\n","import React from 'react'\r\nimport {Component} from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport config from '../../config'\r\n\r\nclass Proveedores extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            //editar proveedor\r\n            proveedores_tb:[],\r\n            editarRucProveedor:'',\r\n            csrf_token:'',\r\n            editarTelefonoProveedor:'',\r\n            editarNombreProveedor:'',\r\n            editarDireccionProveedor:'',\r\n            editarIdProveedor:'',\r\n\r\n            //agregar proveedor\r\n            RUCdatos:[],\r\n            aRuc:'',\r\n            aTipo:'',\r\n            aTelefono:'',\r\n            aNombreProveedor:'',\r\n            aDireccion:'',\r\n\r\n            //modales\r\n            estadoModalProveedor:false,\r\n            estadoModalEditarProveedor: false,\r\n            //toasts\r\n            estadoToastRed:false,\r\n            estadoToastGreen:false,\r\n            messageRed:'',\r\n            messageGreen:'',\r\n            //botones\r\n            estadoBoton:[],\r\n            //query\r\n            estadoQuery:''\r\n        }\r\n\r\n        this.handleChangeRUC = this.handleChangeRUC.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeBuscador= this.handleChangeBuscador.bind(this);\r\n\r\n    }\r\n\r\n    //modales y toasts\r\n\r\n        cambiarToastRed(message) {\r\n            this.setState({\r\n                messageRed: message,\r\n                estadoToastRed: !this.state.estadoToastRed\r\n            });\r\n        }\r\n        cambiarToastGreen(message) {\r\n            this.setState({\r\n                messageGreen: message,\r\n                estadoToastGreen: !this.state.estadoToastGreen\r\n            });\r\n        }\r\n        cambiarModalProveedor(){\r\n            this.setState({\r\n                estadoModalProveedor: !this.state.estadoModalProveedor\r\n            })\r\n        }\r\n        cambiarModalEditarProveedor(){\r\n            this.setState({\r\n                estadoModalEditarProveedor: !this.state.estadoModalEditarProveedor\r\n            })\r\n        }\r\n\r\n\r\n    // Paginate y buscadores\r\n\r\n        agregarBotones(){\r\n          let z = this.state.proveedores_tb.last_page\r\n          console.log(z);\r\n          let x = [];\r\n          if(z){\r\n\r\n          for(let i = 1 ; i <= z ; i++){\r\n            x.push(i);\r\n          }\r\n          this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\r\n          }\r\n        }\r\n\r\n        cambiarPaginate(number){\r\n          console.log(number);\r\n          fetch(\r\n              config.api+`/almacen/proveedores/tb_proveedores?page=${number}&buscar=${this.state.estadoQuery}`,\r\n              {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n            )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({proveedores_tb: data},()=>{\r\n                  console.log(this.state.proveedores_tb)\r\n                  this.agregarBotones();\r\n                });\r\n\r\n          })\r\n\r\n        }\r\n\r\n\r\n        fetchQuery(query){\r\n            fetch(\r\n                config.api+`/almacen/proveedores/tb_proveedores?buscar=${query}`,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                this.setState({proveedores_tb: data,estadoQuery: query}, () => {\r\n                    this.agregarBotones();\r\n                    console.log(\"obtenido?\");\r\n                });\r\n              })\r\n        }\r\n\r\n        handleChangeBuscador (e){\r\n          const {name , value} = e.target;\r\n          console.log(value);\r\n          this.fetchQuery(value);\r\n          console.log(name);\r\n\r\n        }\r\n\r\n//------------|\r\n\r\n    fetchDataTable(){\r\n        fetch(\r\n            config.api+'/almacen/proveedores/tb_proveedores',\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n              this.setState({proveedores_tb: data},()=>{\r\n                console.log(this.state.proveedores_tb)\r\n                this.agregarBotones();\r\n              });\r\n\r\n      })\r\n    }\r\n    fetchRUC(){\r\n        fetch(config.api+`/consult/ruc/${this.state.aRuc}`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                '_token': this.state.csrf_token,\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n        ).then(res => res.json())\r\n            .then(data => {\r\n            this.setState({RUCdatos: data}, () => {\r\n                this.datosdeRUC();\r\n                });\r\n              })\r\n        }\r\n\r\n    datosdeRUC(){\r\n\r\n        if(this.state.RUCdatos){\r\n            this.setState({\r\n                    aTelefono:this.state.RUCdatos.persona.telefonos[0],\r\n                    aNombreProveedor:this.state.RUCdatos.persona.razonSocial,\r\n                    aDireccion:this.state.RUCdatos.persona.direccion,\r\n                    aTipo:this.state.RUCdatos.persona.tipo\r\n            },console.log(this.state.RUCdatos))\r\n        }\r\n    }\r\n\r\n\r\n    sendAgregarProveedor(){\r\n            fetch(config.api+'/almacen/proveedor/crear',\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        '_token': this.state.csrf_token,\r\n                        rucProveedor:this.state.aRuc,\r\n                        telefonoProveedor:this.state.aTelefono,\r\n                        nombreProveedor:this.state.aNombreProveedor,\r\n                        direccionProveedor:this.state.aDireccion,\r\n                        tipoProveedor:this.state.aTipo\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n\r\n                    }\r\n                }\r\n            )\r\n            .then(res =>res.json())\r\n            .then(data => {\r\n                if(data.response==true){\r\n                  console.log(\"correcto creado Proveedor:\");\r\n                  this.cambiarToastGreen(\"el Proveedor\");\r\n                  this.fetchDataTable();\r\n\r\n                }\r\n                else{\r\n                  console.log(\"error\");\r\n                  this.cambiarToastRed(\"en agregar Proveedor\");\r\n                }\r\n            })\r\n            .catch((error)=> {\r\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n              this.cambiarToastRed(\"en agregar Proveedor\");\r\n            });\r\n     }\r\n     sendEditarProveedor(){\r\n             fetch(config.api+'/almacen/proveedores/editar',\r\n                 {\r\n                     method: 'POST',\r\n                     body: JSON.stringify({\r\n                         '_token': this.state.csrf_token,\r\n                         editarRucProveedor:this.state.editarRucProveedor,\r\n                         editarTelefonoProveedor:this.state.editarTelefonoProveedor,\r\n                         editarNombreProveedor:this.state.editarNombreProveedor,\r\n                         editarDireccionProveedor:this.state.editarDireccionProveedor,\r\n                         editarIdProveedor:this.state.editarIdProveedor\r\n                     }),\r\n                     headers: {\r\n                         'Accept' : 'application/json',\r\n                         'Content-Type': 'application/json',\r\n                         'usuid'         : localStorage.getItem('usuid')\r\n\r\n                     }\r\n                 }\r\n             )\r\n             .then(res =>res.json())\r\n             .then(data => {\r\n\r\n               if(data.response==true){\r\n                 console.log(\"correcto editado Proveedor:\");\r\n                 this.cambiarToastGreen(\"el proveedor\");\r\n                 this.fetchDataTable();\r\n\r\n               }\r\n               else{\r\n                 console.log(\"error\");\r\n                 this.cambiarToastRed(\"en editar Proveedor\");\r\n               }\r\n           })\r\n           .catch((error)=> {\r\n             console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n             this.cambiarToastRed(\"en editar Proveedor\");\r\n           });\r\n      }\r\n\r\n\r\n    editTask(ruc,nombreProveedor,telf,direccion,id){\r\n      let telefono;\r\n      if(telf == null){\r\n        telefono = '';\r\n      }\r\n        this.setState({\r\n            editarRucProveedor: ruc,\r\n            editarNombreProveedor: nombreProveedor,\r\n            editarTelefonoProveedor: telefono,\r\n            editarDireccionProveedor: direccion,\r\n            editarIdProveedor: id\r\n        })\r\n    }\r\n\r\n\r\n    handleChangeRUC(e){\r\n        const {name , value} = e.target;\r\n\r\n        if(value.length == 11){\r\n            this.setState({\r\n                [name] : value\r\n\r\n            }, () => {\r\n                this.fetchRUC();\r\n            })\r\n            console.log(value);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange (e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            [name] : value\r\n\r\n        })\r\n        console.log(name);\r\n        console.log(value);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchDataTable();\r\n    }\r\n\r\n\r\n\r\n\r\nrender(){\r\n    return(\r\n\r\n\r\n            <div className=\"row\">\r\n\r\n               <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">Modulos de agregar</h4>\r\n                          <button type=\"button\" onClick={()=>this.cambiarModalProveedor()} className=\"btn waves-effect waves-light btn-warning\">Agregar Proveedor</button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <table id=\"tb_proveedores\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                              <thead>\r\n                                  <tr>\r\n                                      <th><h4 className=\"card-title\">Registro de proveedores</h4></th>\r\n                                      <th><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <th>RUC proveedor</th>\r\n                                      <th>Proveedor</th>\r\n                                      <th>Telefóno</th>\r\n                                      <th>Dirección</th>\r\n                                      <th>Tipo</th>\r\n                                      <th>Opciones</th>\r\n                                  </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                  {\r\n                                      this.state.proveedores_tb.data ?\r\n                                      this.state.proveedores_tb.data.map(task =>{\r\n                                          return (\r\n                                              <tr key={task.id}>\r\n                                                  <td>{task.ruc}</td>\r\n                                                  <td>{task.nombre}</td>\r\n                                                  <td>{task.numero}</td>\r\n                                                  <td>{task.direccion}</td>\r\n                                                  <td>{task.tipo}</td>\r\n                                                  <td><button onClick={()=>{this.editTask(task.ruc,task.nombre,task.numero,task.direccion,task.id);\r\n                                                    this.cambiarModalEditarProveedor()}}\r\n                                                  className=\"btn btn-sm btn-secondary editar\" type=\"button\"><i className=\"mdi mdi-lead-pencil\"></i></button></td>\r\n                                              </tr>\r\n                                          );\r\n                                      } )   : null\r\n                                  }\r\n\r\n                              </tbody>\r\n                          </table>\r\n                            <div className=\"container\">\r\n                                <div className=\"row justify-content-end\">\r\n                                  <div className=\"col-4\">\r\n\r\n                                    {\r\n                                      this.state.estadoBoton?\r\n                                      this.state.estadoBoton.map(task =>{\r\n                                          return (\r\n                                              <button key={task}\r\n                                                  className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\r\n\r\n                                          );\r\n                                       } )   : null\r\n                                     }\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n           <Modal\r\n                  show={this.state.estadoModalProveedor}\r\n                  onHide={() => this.cambiarModalProveedor()}\r\n            >\r\n              <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                      Agregar Proveedor\r\n                    </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <div className=\"card card-default\">\r\n                      <div className=\"card-header cabezera\">\r\n                          <div className=\"form-group row\">\r\n                              <div className=\"col-sm-6\">\r\n                              <div className=\"form-check\">\r\n                                  <label className=\"form-check-label\">\r\n                                  <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"cerrarProveedor\" value=\"1\" defaultChecked=\"\"/>\r\n                                  Cerrar automaticamente\r\n                                  <i className=\"input-helper\"></i></label>\r\n                              </div>\r\n                              </div>\r\n                              <div className=\"col-sm-6\">\r\n                              <div className=\"form-check\">\r\n                                  <label className=\"form-check-label\">\r\n                                  <input type=\"radio\" className=\"form-check-input\" name=\"proveedorEstado\" id=\"abrirProveedor\" value=\"0\"/>\r\n                                  Mantenerla abierta\r\n                                  <i className=\"input-helper\"></i></label>\r\n                              </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      <div className=\"modal-body\">\r\n                          <div className=\"card-body\">\r\n                                  <div className=\"form-group\">\r\n                                      <div className=\"row\">\r\n                                          <div className=\"col-6\">\r\n                                              <label>RUC del proveedor</label>\r\n                                              <input type=\"number\" className=\"form-control\" name=\"aRuc\" id=\"rucProveedor\" onChange={this.handleChangeRUC}/>\r\n                                          </div>\r\n                                          <div className=\"col-6\">\r\n                                              <label>Telefono</label>\r\n                                              <input type=\"number\" className=\"form-control\" name=\"aTelefono\" id=\"telefonoProveedor\" value={this.state.aTelefono} onChange={this.handleChange}/>\r\n                                          </div>\r\n\r\n                                      </div><br/>\r\n                                      <div className=\"row\">\r\n                                          <div className=\"col-12\">\r\n                                              <label>Nombre del proveedor</label>\r\n                                              <input type=\"text\" className=\"form-control\" name=\"aNombreProveedor\" id=\"nombreProveedor\" value={this.state.aNombreProveedor} onChange={this.handleChange}/>\r\n                                          </div>\r\n\r\n                                      </div><br/>\r\n                                      <div className=\"row\">\r\n                                          <div className=\"col-12\">\r\n                                              <label>Dirección</label>\r\n                                              <input type=\"text\" className=\"form-control\" name=\"aDireccion\" id=\"direccionProveedor\" value={this.state.aDireccion} onChange={this.handleChange}/>\r\n                                          </div>\r\n                                      </div><br/>\r\n                                      <div className=\"row\">\r\n                                          <div className=\"col-12\">\r\n                                              <label>Tipo</label>\r\n                                              <input type=\"text\" className=\"form-control\" name=\"aTipo\" id=\"tipoProveedor\" value={this.state.aTipo} onChange={this.handleChange}/>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"form-group boton\">\r\n                                      <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProveedor\" onClick={()=>this.sendAgregarProveedor()}>\r\n                                          Agregar</button>\r\n                                  </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n              </Modal.Body>\r\n           </Modal>\r\n\r\n           <Modal\r\n                  show={this.state.estadoModalEditarProveedor}\r\n                  onHide={() => this.cambiarModalEditarProveedor()}\r\n            >\r\n              <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                      Editar Proveedor\r\n                    </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                    <div className=\"card card-default\">\r\n                        <div className=\"card-header cabezera\">\r\n                          </div>\r\n                            <div className=\"modal-body\">\r\n                              <div className=\"card-body\">\r\n                                    <div className=\"form-group\" >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <label>RUC:</label>\r\n                                                <input type=\"hidden\" name=\"editarIdProveedor\" id=\"editarIdProveedor\" />\r\n                                                <input type=\"text\" className=\"form-control\" name=\"editarRucProveedor\" id=\"editarRucProveedor\" value={this.state.editarRucProveedor} onChange={this.handleChange}/>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <label>Telefóno:</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"editarTelefonoProveedor\" id=\"editarTelefonoProveedor\" value={this.state.editarTelefonoProveedor} onChange={this.handleChange}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Nombre del proveedor:</label>\r\n                                                <textarea className=\"form-control\" name=\"editarNombreProveedor\" id=\"editarNombreProveedor\" value={this.state.editarNombreProveedor} onChange={this.handleChange}></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Dirección:</label>\r\n                                                <textarea className=\"form-control\" name=\"editarDireccionProveedor\" id=\"editarDireccionProveedor\" value={this.state.editarDireccionProveedor} onChange={this.handleChange} ></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group boton\">\r\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarProveedor\" onClick={()=>this.sendEditarProveedor()}>\r\n                                            Editar</button>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n              </Modal.Body>\r\n           </Modal>\r\n\r\n           <Toast\r\n                 style={{\r\n                 position: 'fixed',\r\n                 top: 5,\r\n                 right: 5,\r\n                 zIndex:1060,\r\n                 backgroundColor: 'rgba(76,208,76,0.7)',\r\n                 color:'white'\r\n                 }}\r\n                 onClose={() => this.cambiarToastGreen()}\r\n                 show={this.state.estadoToastGreen}\r\n                 delay={3000}\r\n                 autohide\r\n                 >\r\n                   <Toast.Body>\r\n                     <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\r\n                   </Toast.Body>\r\n             </Toast>\r\n\r\n           <Toast\r\n                   style={{\r\n                   position: 'fixed',\r\n                   top: 5,\r\n                   right: 5,\r\n                   zIndex:1061,\r\n                   backgroundColor: 'rgba(205,55,55,0.7)',\r\n                   color:'white'\r\n                     }}\r\n                   onClose={() => this.cambiarToastRed()}\r\n                   show={this.state.estadoToastRed}\r\n                   delay={3000}\r\n                   autohide\r\n\r\n             >\r\n               <Toast.Body>\r\n                 <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\r\n               </Toast.Body>\r\n           </Toast>\r\n\r\n  </div>\r\n\r\n    )\r\n}}\r\n\r\nexport default Proveedores\r\n","import React from 'react'\r\nimport {Component} from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport config from '../../config'\r\n\r\nclass Tipoproducto extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n          tiposProductos_tb:[],\r\n          nombreTipoProducto: '',\r\n          editarNombreTipoProducto:'',\r\n          editarIdTipoProducto:'',\r\n          csrf_token:'',\r\n\r\n          //modales\r\n          estadoModalTipoProducto:false,\r\n          estadoModalEditarTipoProducto:false,\r\n          //Toast\r\n          estadoToastRed:false,\r\n          estadoToastGreen:false,\r\n          messageRed:'',\r\n          messageGreen:'',\r\n          //botones\r\n          estadoBoton:[],\r\n          //query\r\n          estadoQuery:''\r\n\r\n\r\n        }\r\n       this.handleChange = this.handleChange.bind(this);\r\n       this.agregarBotones = this.agregarBotones.bind(this);\r\n       this.handleChangeBuscador = this.handleChangeBuscador.bind(this);\r\n    }\r\n\r\n\r\n\r\n    //modales y toasts\r\n\r\n        cambiarToastRed(message) {\r\n            this.setState({\r\n                messageRed: message,\r\n                estadoToastRed: !this.state.estadoToastRed\r\n            });\r\n        }\r\n        cambiarToastGreen(message) {\r\n            this.setState({\r\n                messageGreen: message,\r\n                estadoToastGreen: !this.state.estadoToastGreen\r\n            });\r\n        }\r\n        cambiarModalTipoProducto(){\r\n            this.setState({\r\n                estadoModalTipoProducto: !this.state.estadoModalTipoProducto\r\n            })\r\n        }\r\n        cambiarModalEditarTipoProducto(nombre,id){\r\n            this.setState({\r\n                estadoModalEditarTipoProducto: !this.state.estadoModalEditarTipoProducto,\r\n                editarNombreTipoProducto: nombre,\r\n                editarIdTipoProducto: id\r\n            })\r\n        }\r\n\r\n\r\n\r\n    // Paginate y buscadores\r\n\r\n        agregarBotones(){\r\n          let z = this.state.tiposProductos_tb.last_page\r\n          console.log(z);\r\n          let x = [];\r\n          if(z){\r\n\r\n          for(let i = 1 ; i <= z ; i++){\r\n            x.push(i);\r\n          }\r\n          this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\r\n          }\r\n        }\r\n\r\n        cambiarPaginate(number){\r\n          console.log(number);\r\n          fetch(\r\n            config.api+`/almacen/tiposproductos/tb_tiposProductos?page=${number}&bnombre=${this.state.estadoQuery}`,\r\n            {\r\n              method: 'GET',\r\n              headers: {\r\n                  'Accept' : 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                  'usuid'         : localStorage.getItem('usuid')\r\n              }\r\n          }\r\n          )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({tiposProductos_tb: data},()=>{\r\n                  console.log(this.state.tiposProductos_tb)\r\n                  this.agregarBotones();\r\n                });\r\n\r\n          })\r\n\r\n        }\r\n\r\n\r\n        fetchQuery(query){\r\n            fetch(\r\n              config.api+`/almacen/tiposproductos/tb_tiposProductos?bnombre=${query}`,\r\n              {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n            )\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                this.setState({tiposProductos_tb: data,estadoQuery: query}, () => {\r\n                    this.agregarBotones();\r\n                    console.log(\"obtenido?\");\r\n                });\r\n              })\r\n        }\r\n\r\n        handleChangeBuscador (e){\r\n          const {name , value} = e.target;\r\n          console.log(value);\r\n          this.fetchQuery(value);\r\n          console.log(name);\r\n\r\n        }\r\n\r\n//-------------------------------------------------------|\r\n\r\n    fetchDataTable(){\r\n      fetch(\r\n        config.api+'/almacen/tiposproductos/tb_tiposProductos',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n              'Accept' : 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'usuid'         : localStorage.getItem('usuid')\r\n          }\r\n      }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({tiposProductos_tb: data},()=>{\r\n              console.log(this.state.tiposProductos_tb)\r\n              this.agregarBotones();\r\n            });\r\n        })\r\n     }\r\n     sendAgregarTipoProducto(){\r\n\r\n             fetch(config.api+`/almacen/tipo/crear`,\r\n             {\r\n                 method: 'POST',\r\n                 body: JSON.stringify({\r\n                     '_token': this.state.csrf_token,\r\n                     nuevoTipoProducto: this.state.nombreTipoProducto\r\n                 }),\r\n                 headers: {\r\n                     'Accept' : 'application/json',\r\n                     'Content-Type': 'application/json',\r\n                     'usuid'         : localStorage.getItem('usuid')\r\n                 }\r\n             }\r\n         )\r\n         .then(res => res.json())\r\n         .then(data => {\r\n             if(data.response==true){\r\n               console.log(\"exito\");\r\n               this.cambiarToastGreen(\"el tipo de producto\");\r\n               this.fetchDataTable();\r\n             }\r\n             else{\r\n               console.log(\"error\");\r\n               this.cambiarToastRed(\"en agregar tipo de producto\");\r\n             }\r\n\r\n         })\r\n         .catch((error)=> {\r\n           console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n           this.cambiarToastRed(\"en agregar tipo de producto\");\r\n         });  }\r\n\r\n     sendEditarTipoProducto(){\r\n\r\n                 fetch(config.api+`/almacen/tiposproductos/editar`,\r\n                 {\r\n                     method: 'POST',\r\n                     body: JSON.stringify({\r\n                         '_token': this.state.csrf_token,\r\n                         editarNombreTipoProducto: this.state.editarNombreTipoProducto,\r\n                         editarIdTipoProducto: this.state.editarIdTipoProducto\r\n                     }),\r\n                     headers: {\r\n                         'Accept' : 'application/json',\r\n                         'Content-Type': 'application/json',\r\n                         'usuid'         : localStorage.getItem('usuid')\r\n                     }\r\n                 }\r\n             )\r\n             .then(res => res.json())\r\n             .then(data => {\r\n                 if(data.response==true){\r\n                   console.log(\"exito\");\r\n                   this.cambiarToastGreen(\"el tipo de producto\");\r\n                   this.fetchDataTable();\r\n                 }\r\n                 else{\r\n                   console.log(\"error\");\r\n                   this.cambiarToastRed(\"en editar tipo de producto\");\r\n                 }\r\n\r\n             })\r\n             .catch((error)=> {\r\n               console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n               this.cambiarToastRed(\"en editar el tipo de producto\");\r\n             });  }\r\n\r\n     deleteTipoProducto(id){\r\n          fetch(config.api+`/almacen/tiposproductos/eliminar`,{\r\n                     method: 'POST',\r\n                     body: JSON.stringify({\r\n                         '_token': this.state.csrf_token,\r\n                         id: id\r\n                     }),\r\n                     headers: {\r\n                         'Accept' : 'application/json',\r\n                         'Content-type' : 'application/json',\r\n                         'usuid'         : localStorage.getItem('usuid')\r\n                     }\r\n                 })\r\n                 .then(res => res.json())\r\n                 .then(data =>{\r\n                     if(data.response==true){\r\n                       console.log(\"exito\");\r\n                       this.cambiarToastGreen(\"en eliminar tipo de producto\");\r\n                       this.fetchDataTable();\r\n                     }\r\n                     else{\r\n                       console.log(\"error\");\r\n                       this.cambiarToastRed(\"en eliminar tipo de producto\");\r\n                     }\r\n                 })\r\n                 .catch((error)=> {\r\n                   console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                   this.cambiarToastRed(\"en eliminar tipo de producto\");\r\n                 });\r\n\r\n       }\r\n\r\n\r\n\r\n    handleChange (e){\r\n      const {name , value} = e.target;\r\n      this.setState({\r\n          [name] : value\r\n\r\n      })\r\n      console.log(name);\r\n      console.log(value);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n      this.fetchDataTable();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                          <div className=\"card\">\r\n                              <div className=\"card-body\">\r\n                                  <h4 className=\"card-title\">Modulos de agregar</h4>\r\n                                  <button type=\"button\" className=\"btn waves-effect waves-light btn-success\" onClick={()=>this.cambiarModalTipoProducto()}>Agregar Tipo de Producto</button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                          <div className=\"card\">\r\n                              <div className=\"card-body\">\r\n                                  <h4 className=\"card-title\">Tipos de productos</h4>\r\n                                  <table id=\"tb_tiposProductos\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                                      <thead>\r\n                                          <tr>\r\n                                            <th style={{textAlign:'right'}}><input type=\"text\" onChange={this.handleChangeBuscador} /></th>\r\n                                          </tr>\r\n                                          <tr>\r\n                                              <th>Tipo de producto</th>\r\n                                              <th>Opciones</th>\r\n                                          </tr>\r\n                                      </thead>\r\n                                      <tbody>\r\n                                          {\r\n                                          this.state.tiposProductos_tb.data ?\r\n                                          this.state.tiposProductos_tb.data.map(task =>{\r\n                                              return (\r\n                                                  <tr key={task.id}>\r\n                                                      <td>{task.nombre}</td>\r\n                                                      <td><button onClick={()=>this.cambiarModalEditarTipoProducto(task.nombre,task.id)}\r\n                                                      className=\"btn btn-sm btn-secondary editar\" type=\"button\"><i className=\"mdi mdi-lead-pencil\"></i></button>\r\n                                                      <button className=\"btn btn-sm btn-danger eliminar\" type=\"button\" onClick={()=>this.deleteTipoProducto(task.id)}><i className=\"mdi mdi-delete\"></i></button>\r\n                                                      </td>\r\n\r\n                                                  </tr>\r\n                                              );\r\n                                           } )   : null\r\n                                          }\r\n                                      </tbody>\r\n                                  </table>\r\n                                  <div className=\"container\">\r\n                                      <div className=\"row justify-content-end\">\r\n                                        <div className=\"col-4\">\r\n\r\n                                          {\r\n                                            this.state.estadoBoton?\r\n                                            this.state.estadoBoton.map(task =>{\r\n                                                return (\r\n                                                    <button key={task}\r\n                                                        className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\r\n\r\n                                                );\r\n                                             } )   : null\r\n                                           }\r\n                                      </div>\r\n                                    </div>\r\n                                </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n\r\n                      <Modal\r\n\r\n                          show={this.state.estadoModalTipoProducto}\r\n                          onHide={() => this.cambiarModalTipoProducto()}\r\n                          >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                                <h4> Agregar tipo de producto </h4>\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                                <div className=\"card card-default\">\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"card-body\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12\">\r\n                                                            <label>Nombre del tipo de producto</label>\r\n                                                            <input type=\"text\" className=\"form-control\" name=\"nombreTipoProducto\" id=\"nuevoTipoProducto\"  value={this.state.nombreTipoProducto} onChange={this.handleChange}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group boton\">\r\n                                                    <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearTipoProducto\" onClick={()=>this.sendAgregarTipoProducto()}>\r\n                                                        CREAR</button>\r\n                                                </div>  \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                          </Modal.Body>\r\n                        </Modal>\r\n\r\n                      <Modal\r\n                          show={this.state.estadoModalEditarTipoProducto}\r\n                          onHide={() => this.cambiarModalEditarTipoProducto()}\r\n                          >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                              <h4> Editar tipo de producto </h4>\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                              <div className=\"card card-default\">\r\n                                  <div className=\"modal-body\">\r\n                                      <div className=\"card-body\">\r\n                                              <div className=\"form-group\">\r\n                                                  <div className=\"row\">\r\n                                                      <div className=\"col-12\">\r\n                                                          <label>Nombre del tipo de producto</label>\r\n                                                          <input type=\"text\" className=\"form-control\" name=\"editarNombreTipoProducto\" id=\"editarNombreTipoProducto\" value={this.state.editarNombreTipoProducto} onChange={this.handleChange}/>\r\n                                                          <input type=\"hidden\" name=\"editarIdTipoProducto\" id=\"editarIdTipoProducto\" />\r\n                                                      </div>\r\n                                                  </div>\r\n                                              </div>\r\n                                              <div className=\"form-group boton\">\r\n                                                  <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"editarTipoProducto\" onClick={()=>this.sendEditarTipoProducto()}>\r\n                                                      Editar</button>\r\n                                              </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                          </Modal.Body>\r\n                        </Modal>\r\n\r\n                        <Toast\r\n                              style={{\r\n                              position: 'fixed',\r\n                              top: 5,\r\n                              right: 5,\r\n                              zIndex:1060,\r\n                              backgroundColor: 'rgba(76,208,76,0.7)',\r\n                              color:'white'\r\n                              }}\r\n                              onClose={() => this.cambiarToastGreen()}\r\n                              show={this.state.estadoToastGreen}\r\n                              delay={3000}\r\n                              autohide\r\n                              >\r\n                                <Toast.Body>\r\n                                  <h5>Se agrego satisfactoriamente {this.state.messageGreen}</h5>\r\n                                </Toast.Body>\r\n                          </Toast>\r\n\r\n                        <Toast\r\n                                style={{\r\n                                position: 'fixed',\r\n                                top: 5,\r\n                                right: 5,\r\n                                zIndex:1061,\r\n                                backgroundColor: 'rgba(205,55,55,0.7)',\r\n                                color:'white'\r\n                                  }}\r\n                                onClose={() => this.cambiarToastRed()}\r\n                                show={this.state.estadoToastRed}\r\n                                delay={3000}\r\n                                autohide\r\n\r\n                          >\r\n                            <Toast.Body>\r\n                              <h5>Hubo un problema al agregar {this.state.messageRed}</h5>\r\n                            </Toast.Body>\r\n                        </Toast>\r\n\r\n          </div>\r\n\r\n        )}}\r\n\r\nexport default Tipoproducto\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Queso = () => (\r\n  \r\n    <div className=\"container-fluid page-body-wrapper\" >\r\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item nav-profile\">\r\n            <Link className=\"nav-link\" to='/queso'>\r\n              <div className=\"nav-profile-image\">\r\n                <img src=\"/home\" alt=\"profile\"/>\r\n                <span className=\"login-status online\"></span>             \r\n              </div>\r\n              <div className=\"nav-profile-text d-flex flex-column\">\r\n                <span className=\"font-weight-bold mb-2\">user</span>\r\n                <span className=\"text-secondary text-small\">Vendedor</span>\r\n              </div>\r\n              <i className=\"mdi mdi-bookmark-check text-success nav-profile-badge\"></i>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#ui-basic\" aria-expanded=\"false\" aria-controls=\"ui-basic\">\r\n              <span className=\"menu-title\">Almacén</span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\r\n            </a>\r\n            <div className=\"collapse\" id=\"ui-basic\">\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen\">Almacen</Link></li>\r\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/entrada\">Entradas</Link></li>\r\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/proveedor\">Proveedores</Link></li>\r\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/tiposproductos\">Tipos producto</Link></li>\r\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/almacen/marcas\">Marcas</Link></li>  \r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n           <Link className=\"nav-link\" to=\"/ventas\">\r\n              <span className=\"menu-title\">Ventas</span>\r\n              <i className=\"mdi mdi-shopping menu-icon\"></i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#ui-configuracion\" aria-expanded=\"false\" aria-controls=\"ui-basic\">\r\n              <span className=\"menu-title\">Configuración</span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\r\n            </a>\r\n            <div className=\"collapse\" id=\"ui-configuracion\">\r\n              <ul className=\"nav flex-column sub-menu\"> \r\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/configuracion/descuentos\">Descuentos</Link></li>\r\n                <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/configuracion/usuarios\">Usuarios</Link></li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              <span className=\"menu-title\">Estadisticas</span>\r\n              <i className=\"mdi mdi-shopping menu-icon\"></i>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              <span className=\"menu-title\">Perfil</span>\r\n              <i className=\"mdi mdi-shopping menu-icon\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n        <div className=\"main-panel\" style={{float:'left'}}>\r\n        <div className=\"content-wrapper\">\r\n            <div className=\"row\">\r\n              Hola prros gaaaaa :v\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport default Queso\r\n","import React, { Component } from 'react'\r\n\r\nexport default function(lastPage)\r\n{\r\n    let z = lastPage;\r\n    let x = [];\r\n    if(z){\r\n        for(let i = 1 ; i <= z ; i++){\r\n            x.push(i);\r\n        }\r\n        return x;\r\n    }    \r\n\r\n} \r\n","import React from 'react'\r\nimport {Component} from 'react';\r\nimport agregarBotones from '../../../extras/agregarBotones'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../../../config'\r\n\r\nclass TB_Descuentos extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            tb_descuentos   : [],\r\n            estadoBoton     : [],\r\n\r\n            idDescuento     : '',\r\n\r\n        }\r\n        this.fetchDescuentos        = this.fetchDescuentos.bind(this);\r\n        this.fetchEliminarDescuento = this.fetchEliminarDescuento.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchDescuentos(1, '', '');\r\n    }\r\n\r\n    fetchDescuentos(number, cliente, numeroComprobante){\r\n        let url = config.api+`/configuracion/descuentos/tb_descuentos?page=${number}`;\r\n        fetch(\r\n            url,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(\r\n            res => res.json()\r\n        )\r\n        .then(\r\n            data => {\r\n                this.setState({\r\n                    tb_descuentos    : data['tb_descuentos'].data,\r\n                    numeroPagina : number\r\n                },()=>{\r\n                    \r\n                    this.setState({\r\n                        estadoBoton : agregarBotones(data['tb_descuentos'].last_page)\r\n                    })\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    confirmarEliminarTransferencia(idDescuentos){\r\n        confirmAlert({\r\n            title: 'ELIMINAR OFERTA',\r\n            message: 'Una vez eliminado no hay forma de recuperarlo',\r\n            buttons: [\r\n              {\r\n                label: 'ELIMINAR',\r\n                onClick: this.fetchEliminarDescuento\r\n              },\r\n              {\r\n                label: 'CANCELAR',\r\n                onClick: console.log(\"\")\r\n              }\r\n            ]\r\n        });\r\n\r\n        this.setState({\r\n            idDescuento : idDescuentos\r\n        })\r\n    }\r\n\r\n    fetchEliminarDescuento(){\r\n        \r\n        let url = config.api+`/configuraciones/descuentos/eliminar`;\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>ELIMINANDO OFERTA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token'        : csrf_token,\r\n                        'idDescuento'   : this.state.idDescuento\r\n                        \r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>{data['mensaje']}</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n\r\n                    this.fetchDescuentos(1, '', '');\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>{data['mensaje']}</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title\">GESTION DE OFERTAS:</h6>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Codigo del Producto</th>\r\n                                                <th>Nombre del Producto</th>\r\n                                                <th>Cantidad</th>\r\n                                                <th>Porcentaje</th>\r\n                                                <th>Precio del Producto</th>\r\n                                                <th>Nuevo precio del producto</th>\r\n                                                <th>Opciones</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.tb_descuentos\r\n                                                ?this.state.tb_descuentos.map((data, posicion)=>{\r\n                                                    return(\r\n                                                        <tr key= { data.idDescuentos           }>\r\n                                                            <td> { data.codigoProductos        }</td>\r\n                                                            <td> { data.nombreProductos        }</td>\r\n                                                            <td> { data.cantidadDescuentos     }</td>\r\n                                                            <td> { data.porcentajeDescuentos   }</td>\r\n                                                            <td> { data.precioProductos        }</td>\r\n                                                            <td> { data.nuevoPrecioDescuentos  }</td>\r\n                                                            <td>\r\n                                                                <button \r\n                                                                    className   = \"btn btn-sm btn-danger \" \r\n                                                                    type        = \"button\" \r\n                                                                    onClick     = {() => this.confirmarEliminarTransferencia(data.idDescuentos)}\r\n                                                                >\r\n                                                                    <i className=\"mdi mdi-delete\"></i>\r\n                                                                </button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ) \r\n                                                })\r\n                                                :null\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row justify-content-end\">\r\n                                        <div className=\"col-4\">\r\n                                            {\r\n                                                this.state.estadoBoton\r\n                                                ?this.state.estadoBoton.map(task =>{\r\n                                                    return (\r\n                                                        <button \r\n                                                            key         = {task}\r\n                                                            className   = \"btn btn-sm btn-secondary\" \r\n                                                            type        = \"button\" \r\n                                                            onClick     = {()=>this.fetchDescuentos(task, \"\", \"\")}>{task}</button>\r\n\r\n                                                    );\r\n                                                })   \r\n                                                : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div>    \r\n            </div>\r\n            \r\n         ) \r\n    }\r\n}\r\n\r\nexport default TB_Descuentos","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport { Link } from 'react-router-dom'\r\nimport TB_Descuentos from './tabla/tb_descuentos'\r\nimport config from '../../../config'\r\n\r\nclass Descuento extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            //modal\r\n            estadoModalAgregarOferta    : false,\r\n            // DATOS DEL MODAL\r\n            idProductoEscaneado         : 0,\r\n            codigoProductoEscaneado     : '',\r\n            nombreProductoEscaneado     : '',\r\n            stockProductoEscaneado      : 0,\r\n            precioProductoEscaneado     : 0,\r\n            cantidadOferta              : '',\r\n            nuevoPrecioOferta           : '',\r\n\r\n            // TOAST\r\n            estadoToast     : false,\r\n            mensajeToast    : '',\r\n            colorToast      : 'rgba(76,208,76,0.7)',\r\n\r\n\r\n        }\r\n        this.getCambioCodigo            = this.getCambioCodigo.bind(this);\r\n        this.fetchCodigoProducto        = this.fetchCodigoProducto.bind(this);\r\n        this.getCambioCantidadOferta    = this.getCambioCantidadOferta.bind(this);\r\n        this.getCambioNuevoPrecio       = this.getCambioNuevoPrecio.bind(this);\r\n        this.fetchAgregarOferta         = this.fetchAgregarOferta.bind(this);\r\n    }\r\n\r\n    modalAgregarOferta() {\r\n        this.setState({\r\n            estadoModalAgregarOferta: !this.state.estadoModalAgregarOferta\r\n        });\r\n    }\r\n\r\n    activarToast(message, color) {\r\n        this.setState({\r\n            mensajeToast : message,\r\n            colorToast   : color,\r\n            estadoToast  : true\r\n        });\r\n    }\r\n\r\n    getCambioCodigo(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            codigoProductoEscaneado : value\r\n        })\r\n        if (e.key === 'Enter') {\r\n            console.log(value);\r\n            this.fetchCodigoProducto(value);\r\n        }\r\n\r\n    }\r\n\r\n    fetchCodigoProducto(codigo){ \r\n        fetch(config.api+`/producto/buscar`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token'        : csrf_token,\r\n                    codigoProducto  : codigo\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(\"datos:\")\r\n            console.log(data)\r\n            if(data['response'] == true){\r\n               \r\n                var producto = data['producto'];\r\n                this.setState({\r\n                    idProductoEscaneado     : producto['id'],\r\n                    nombreProductoEscaneado : producto['nombre'],\r\n                    stockProductoEscaneado  : producto['cantidad'],\r\n                    precioProductoEscaneado : producto['precio'],\r\n                })\r\n\r\n\r\n            }else{\r\n                this.activarToast(\"Producto no encontrado\", \"rgba(205,55,55,0.7)\");\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    getCambioCantidadOferta(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            cantidadOferta : value\r\n        })\r\n    }\r\n    \r\n    getCambioNuevoPrecio(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            nuevoPrecioOferta : value\r\n        })\r\n    }\r\n\r\n    fetchAgregarOferta()\r\n    {\r\n        fetch(config.api+`/configuraciones/descuentos/crear`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token'            : csrf_token,\r\n                'idProducto'        : this.state.idProductoEscaneado,\r\n                'precioProducto'    : this.state.precioProductoEscaneado,\r\n                'nuevoPrecio'       : this.state.nuevoPrecioOferta,\r\n                'cantidad'          : this.state.cantidadOferta,\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            console.log(data['response'])\r\n            if(data['response'] == true){\r\n                this.activarToast(\"Oferta creada satisfactoriamente\", \"rgba(76,208,76,0.7)\");\r\n                this.modalAgregarOferta();\r\n            }else{\r\n                this.activarToast(\"Ocurrio un error al momento de agregar la oferta\", \"rgba(205,55,55,0.7)\");\r\n            }\r\n            \r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Acciones</h4>\r\n                            <button type=\"button\"\r\n                                onClick={()=>this.modalAgregarOferta()}\r\n                                className=\"btn btn-primary btn-rounded btn-fw\">Crear una oferta</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <TB_Descuentos \r\n\r\n                />\r\n            \r\n            {/* MODAL DE AGREGAR OFERTA */}\r\n            <Modal\r\n                size=\"lg\"\r\n                show={this.state.estadoModalAgregarOferta}\r\n                onHide={() => this.modalAgregarOferta()}\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Agregar Oferta\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"card card-default\">\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\" >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <label>Codigo</label>\r\n                                            <input \r\n                                                type        = \"text\" \r\n                                                className   = \"form-control\" \r\n                                                name        = \"codigoProductoEscaneado\" \r\n                                                id          = \"codigoProductoEscaneado\"\r\n                                                onChange    = {this.getCambioCodigo}\r\n                                                onKeyDown   = {this.getCambioCodigo}\r\n                                                autoFocus\r\n                                                value       = {this.state.codigoProductoEscaneado} \r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-12\" id=\"alertaCodigo\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-8\">\r\n                                            <label>Nombre del producto</label>\r\n                                            <h4 className=\"card-title\"> {this.state.nombreProductoEscaneado} </h4>\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            <label>Stock</label>\r\n                                            <h4 className=\"card-title\"> {this.state.stockProductoEscaneado} </h4>\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            <label>Precio</label>\r\n                                            <h4 className=\"card-title\"> S/{this.state.precioProductoEscaneado} </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <label>Cantidad</label>\r\n                                            <input \r\n                                                type        = \"text\" \r\n                                                name        = \"cantidadOferta\" \r\n                                                id          = \"cantidadOferta\" \r\n                                                className   = \"form-control\"\r\n                                                onChange    = {this.getCambioCantidadOferta} \r\n                                                value       = {this.state.cantidadOferta}/>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <label>Nuevo precio</label>\r\n                                            <input \r\n                                                type        = \"text\" \r\n                                                name        = \"nuevoPrecioOferta\" \r\n                                                id          = \"nuevoPrecioOferta\" \r\n                                                className   = \"form-control\"\r\n                                                onChange    = {this.getCambioNuevoPrecio} \r\n                                                value       = {this.state.nuevoPrecioOferta}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group boton\">\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"addexis form-control btn btn-block btn-success btn-lg\" \r\n                                        id=\"crearProducto\" \r\n                                        onClick={()=>this.fetchAgregarOferta()}>\r\n                                        Agregar</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n\r\n                <Toast\r\n                    style={{\r\n                        position        : 'fixed',\r\n                        top             : 20,\r\n                        right           : 20,\r\n                        zIndex          :1060,\r\n                        backgroundColor : this.state.colorToast,\r\n                        color           :'white'\r\n                    }}\r\n                    onClose={() => this.setState({\r\n                        estadoToast: false\r\n                    })}\r\n                    show    ={this.state.estadoToast}\r\n                    delay   ={2500}\r\n                    autohide\r\n                    >\r\n                    <Toast.Body>\r\n                    <h3>{this.state.mensajeToast}</h3>\r\n                    </Toast.Body>\r\n                </Toast>\r\n\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Descuento\r\n","import React from 'react';\r\nimport {Component} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport config from '../../config'\r\n\r\n  class Usuario extends Component {\r\n\r\n      constructor(){\r\n          super();\r\n          this.state ={\r\n\r\n            usuario_tb:[],\r\n            sucursales:[],\r\n            sucursalesPArray:[],\r\n            editarNombreUsuario:'',\r\n            editarIdUsuario:'',\r\n\r\n            //modales\r\n            estadoModalAgregarUsuario:false,\r\n            estadoModalEditarUsuario:false,\r\n            //Toast\r\n            estadoToastRed:false,\r\n            estadoToastGreen:false,\r\n            messageRed:'',\r\n            messageGreen:'',\r\n            //botones\r\n            estadoBoton:[],\r\n            //query\r\n            estadoQuery:'',\r\n            //Crear usuario\r\n            crearNombre:'',\r\n            crearPassword:'',\r\n            crearUsername:'',\r\n            crearSucursales:[],\r\n            crearSucursalPredeterminada:'',\r\n            //Editar usuario\r\n            editarId:'',\r\n            editarNombre:'',\r\n            editarUsername:'',\r\n            editarPassword:'',\r\n            editarSucursales:[],\r\n            editarSucursalPredeterminada:'',\r\n\r\n            //DNIdata\r\n            dniData:'',\r\n            dniUsuario:''\r\n\r\n          }\r\n          this.fetchDataTable = this.fetchDataTable.bind(this);\r\n          this.handleChange = this.handleChange.bind(this);\r\n          this.handleChangeDni = this.handleChangeDni.bind(this);\r\n          this.addSucursal = this.addSucursal.bind(this);\r\n          this.predeterminarSucursal = this.predeterminarSucursal.bind(this);\r\n\r\n      }\r\n\r\n      cleanInputs(op){\r\n\r\n        if (op == \"crear\"){\r\n          this.setState({\r\n            crearNombre:'',\r\n            crearPassword:'',\r\n            crearUsername:'',\r\n            crearSucursales:[],\r\n            crearSucursalPredeterminada:''\r\n          })\r\n        }\r\n        else if(op == \"editar\"){\r\n        //Editar usuario\r\n        this.setState({\r\n          editarId:'',\r\n          editarNombre:'',\r\n          editarUsername:'',\r\n          editarPassword:'',\r\n          editarSucursalPredeterminada:''\r\n        })\r\n\r\n        }\r\n\r\n        else {\r\n          this.setState({\r\n                usuario_tb:[],\r\n                sucursales:[],\r\n                editarNombreUsuario:'',\r\n                editarIdUsuario:''\r\n\r\n            })\r\n          }\r\n        }\r\n\r\n      cambiarToastRed(message) {\r\n          this.setState({\r\n              messageRed: message,\r\n              estadoToastRed: !this.state.estadoToastRed\r\n          });\r\n      }\r\n      cambiarToastGreen(message) {\r\n          this.setState({\r\n              messageGreen: message,\r\n              estadoToastGreen: !this.state.estadoToastGreen\r\n          });\r\n      }\r\n\r\n      cambiarModalAgregarUsuario(){\r\n          this.setState({\r\n              estadoModalAgregarUsuario: !this.state.estadoModalAgregarUsuario,\r\n              crearSucursales:[],\r\n          })\r\n      }\r\n\r\n      cambiarModalEditarUsuario(operacion,id,nombre,username,sucursales,predeterminada){\r\n\r\n        if(operacion == \"editar\"){\r\n          var x = [];\r\n          console.log(sucursales);\r\n          let c = ()=>{\r\n              sucursales.map(task=>{\r\n                 var a = task.pivot.sucursal_id\r\n                 x.push(a.toString());\r\n                 console.log(task);\r\n                  })\r\n              return x;\r\n          }\r\n\r\n          this.setState({\r\n              estadoModalEditarUsuario: !this.state.estadoModalEditarUsuario,\r\n              editarId: id,\r\n              editarNombre: nombre,\r\n              editarUsername: username,\r\n              editarSucursales: c(),\r\n              editarSucursalPredeterminada: predeterminada\r\n\r\n          },()=>{\r\n                console.log(this.state.editarSucursales)\r\n                this.setState({\r\n                  crearSucursales: this.state.editarSucursales\r\n                })\r\n                }\r\n            )\r\n\r\n        }\r\n       else{\r\n         this.setState({\r\n             estadoModalEditarUsuario: !this.state.estadoModalEditarUsuario,\r\n             editarSucursales:[]\r\n\r\n         })\r\n       }\r\n      }\r\n      sendCrearUsuario(){\r\n\r\n              fetch(config.api+`/configuraciones/usuarios/crear`,\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                      // '_token': csrf_token,\r\n                      nombre: this.state.crearNombre,\r\n                      username: this.state.crearUsername,\r\n                      password: this.state.crearPassword,\r\n                      sucursales: this.state.crearSucursales,\r\n                      predeterminado: this.state.crearSucursalPredeterminada\r\n\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n              }\r\n          )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n              if(data.response==true){\r\n                console.log(\"exito\");\r\n                this.cambiarToastGreen(\"Se creo exitosamente el usuario\");\r\n                this.cleanInputs(\"crear\");\r\n                this.fetchDataTable();\r\n              }\r\n              else{\r\n                console.log(\"error\");\r\n                this.cambiarToastRed(\"Error en crear usuario\");\r\n              }\r\n\r\n          })\r\n          .catch((error)=> {\r\n            console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n            this.cambiarToastRed(\"Error en crear usuario\");\r\n          });  }\r\n\r\n      sendEditarUsuario(){\r\n\r\n                  fetch(config.api+`/configuraciones/usuarios/editar`,\r\n                  {\r\n                      method: 'POST',\r\n                      body: JSON.stringify({\r\n                          // '_token': csrf_token,\r\n                          id: this.state.editarId,\r\n                          nombre: this.state.editarNombre,\r\n                          username: this.state.editarUsername,\r\n                          password: this.state.editarPassword,\r\n                          sucursales: this.state.crearSucursales,\r\n                          predeterminado: this.state.editarSucursalPredeterminada\r\n\r\n                      }),\r\n                      headers: {\r\n                          'Accept' : 'application/json',\r\n                          'Content-Type': 'application/json',\r\n                          'usuid'         : localStorage.getItem('usuid')\r\n                      }\r\n                  }\r\n              )\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                  if(data.response==true){\r\n                    console.log(\"exito\");\r\n                    this.cambiarToastGreen(\"se edito el usuario\");\r\n                    this.cleanInputs(\"editar\");\r\n                    this.fetchDataTable();\r\n                  }\r\n                  else{\r\n                    console.log(\"error\");\r\n                    this.cambiarToastRed(\"Error en editar usuario\");\r\n                  }\r\n\r\n              })\r\n              .catch((error)=> {\r\n                console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                this.cambiarToastRed(\"Error en editar usuario\");\r\n              });  }\r\n\r\n      deleteUsuario(id){\r\n            console.log(id);\r\n                fetch(config.api+`/almacen/marcas/eliminar`,{\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token': csrf_token,\r\n                        id: id\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-type' : 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                })\r\n                .then(res => res.json())\r\n                .then(data =>{\r\n                    if(data.response==true){\r\n                      console.log(\"exito\");\r\n                      this.cambiarToastGreen(\"en eliminar Marca\");\r\n                      this.fetchDataTable();\r\n                    }\r\n                    else{\r\n                      console.log(\"error\");\r\n                      this.cambiarToastRed(\"en eliminar Marca\");\r\n                    }\r\n                })\r\n                .catch((error)=> {\r\n                  console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                  this.cambiarToastRed(\"en eliminar Marca\");\r\n                });\r\n\r\n      }\r\n\r\n\r\n    addSucursal(e){\r\n\r\n      const {checked , value} = e.target;\r\n\r\n          if(checked==true){\r\n            var x = [...this.state.crearSucursales];\r\n            x.push(value);\r\n            this.setState({\r\n              crearSucursales: x,\r\n              editarSucursales: x\r\n            },()=>{\r\n                if((this.state.editarSucursales).length == 1){\r\n                  this.setState({\r\n                    editarSucursalPredeterminada: this.state.editarSucursales[0],\r\n                    crearSucursalPredeterminada: this.state.editarSucursales[0]\r\n                  })\r\n                }\r\n            }\r\n          )\r\n\r\n          }\r\n          else{\r\n            console.log(\"deslogeado\");\r\n            var x = [...this.state.crearSucursales];\r\n            var index = x.findIndex(i=> i === value);\r\n            if(index>-1){\r\n              x.splice(index,1);\r\n              this.setState({\r\n                crearSucursales: x,\r\n                editarSucursales: x\r\n              },()=>{\r\n                  if((this.state.editarSucursales).length == 1){\r\n                    this.setState({\r\n                      editarSucursalPredeterminada: this.state.editarSucursales[0],\r\n                      crearSucursalPredeterminada: this.state.editarSucursales[0]\r\n                    })\r\n                  }\r\n                })\r\n\r\n          }\r\n        }\r\n}\r\n    handleChangeDni(e){\r\n      const {name , value} = e.target;\r\n\r\n      if(value.length == 8){\r\n          this.setState({\r\n              [name] : value\r\n\r\n          }, () => {\r\n              this.fetchDNI();\r\n          })\r\n          console.log(value);\r\n      }\r\n      console.log(name);\r\n      console.log(value);\r\n    }\r\n\r\n    fetchDNI(){\r\n\r\n        fetch(config.api+`/consult/dni/${this.state.dniUsuario}`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({dniData: data},\r\n              ()=>this.dniOpe()\r\n\r\n            );\r\n    })\r\n\r\n}\r\n    dniOpe(){\r\n      let a = this.state.dniData;\r\n      let y = a.persona.nombres +' '+ a.persona.apellidoMaterno +' '+ a.persona.apellidoPaterno\r\n\r\n      this.setState({\r\n        crearNombre: y\r\n      })\r\n    }\r\n\r\n\r\n    fetchDataTable(){\r\n      fetch(\r\n        config.api+'/configuracion/usuarios/tb_usuarios',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n              'Accept' : 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'usuid'         : localStorage.getItem('usuid')\r\n          }\r\n      }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({usuario_tb: data},()=>{\r\n              console.log(this.state.usuario_tb)\r\n            });\r\n      })\r\n      fetch(\r\n        config.api+'/configuracion/usuarios/tb_sucursales',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n              'Accept' : 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'usuid'         : localStorage.getItem('usuid')\r\n          }\r\n      }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n              sucursales: data,\r\n              sucursalesPArray: data\r\n            },()=>{\r\n              console.log(this.state.sucursales)\r\n              //this.predeterminarSucursal();\r\n            });\r\n      })\r\n    }\r\n  predeterminarSucursal(){\r\n    let x = []\r\n\r\n    // let c = ()=>{\r\n    //     this.state.sucursales \r\n    //     ? this.state.sucursales.map(task=>{\r\n    //        x.push(task.id);\r\n    //     }) :null\r\n    //     return x;\r\n    // }\r\n\r\n    // this.setState({\r\n    //   sucursalesPArray: c()\r\n    // },()=>console.log(this.state.sucursalesPArray))\r\n\r\n  }\r\n\r\n\r\n    handleChange (e){\r\n      const {name , value} = e.target;\r\n      this.setState({\r\n          [name] : value\r\n\r\n      })\r\n      console.log(name);\r\n      console.log(value);\r\n    }\r\n    handleChangeBuscador (e){\r\n      const {name , value} = e.target;\r\n      console.log(value);\r\n      this.fetchQuery(value);\r\n      console.log(name);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.fetchDataTable();\r\n    }\r\n\r\n\r\n\r\n   render (){\r\n     return(\r\n       <div className=\"row\">\r\n\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n             <div className=\"card\">\r\n                 <div className=\"card-body\">\r\n                     <h4 className=\"card-title\">Acciones</h4>\r\n                     <button type=\"button\"\r\n                         onClick={()=>this.cambiarModalAgregarUsuario()}\r\n                         className=\"btn waves-effect waves-light btn-info\">Agregar Usuario</button>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n\r\n         <div className=\"col-lg-12 grid-margin stretch-card\">\r\n             <div className=\"card\">\r\n                 <div className=\"card-body\">\r\n                     <h4 className=\"card-title\">Usuarios</h4>\r\n                     <table id=\"tb_usuarios\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                         <thead>\r\n                             <tr>\r\n                                 <th>Codigo</th>\r\n                                 <th>Nombre</th>\r\n                                 <th>Username</th>\r\n                                 <th>Sucursales</th>\r\n                                 <th>Opciones</th>\r\n                             </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                              {\r\n                                 this.state.usuario_tb ?\r\n                                 this.state.usuario_tb.map(task =>{\r\n                                     return (\r\n                                         <tr key={task.id}>\r\n                                             <td>{task.id}</td>\r\n                                             <td>{task.name}</td>\r\n                                             <td>{task.username}</td>\r\n                                             <td>{task.sucursales.map(s =>{\r\n                                                return(<div>{s.nombre}</div>)\r\n                                             })}</td>\r\n                                             <td><button\r\n                                             className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarModalEditarUsuario(\"editar\",task.id,task.name,task.username,task.sucursales,task.predeterminado)}><i className=\"mdi mdi-lead-pencil\"></i></button>\r\n                                             <button className=\"btn btn-sm btn-danger eliminar\" type=\"button\" onClick={()=>this.deleteUsuario(task.id)}><i className=\"mdi mdi-delete\"></i></button>\r\n                                             </td>\r\n\r\n                                         </tr>\r\n                                     );\r\n                                  } )   : null\r\n                                 }\r\n                         </tbody>\r\n                           <div className=\"container\">\r\n                               <div className=\"row justify-content-end\">\r\n                                 <div className=\"col-4\">\r\n\r\n                                   {\r\n                                     this.state.estadoBoton?\r\n                                     this.state.estadoBoton.map(task =>{\r\n                                         return (\r\n                                             <button key={task}\r\n                                                 className=\"btn btn-sm btn-secondary editar\" type=\"button\" onClick={()=>this.cambiarPaginate(task)}>{task}</button>\r\n\r\n                                         );\r\n                                      } )   : null\r\n                                    }\r\n                                </div>\r\n                              </div>\r\n                           </div>\r\n                     </table>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n\r\n\r\n         <Modal\r\n\r\n             show={this.state.estadoModalAgregarUsuario}\r\n             onHide={() => this.cambiarModalAgregarUsuario()}\r\n             >\r\n             <Modal.Header closeButton>\r\n               <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                 Agregar Usuario\r\n               </Modal.Title>\r\n             </Modal.Header>\r\n             <Modal.Body>\r\n                   <div className=\"card card-default\">\r\n                       <div className=\"modal-body\">\r\n                           <div className=\"card-body\">\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputUsername1\">Dni</label>\r\n                                       <input type=\"text\" className=\"form-control\" name=\"dniUsuario\" onChange={this.handleChangeDni}/>\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputUsername1\">NOMBRES COMPLETOS</label>\r\n                                       <input type=\"text\" className=\"form-control\" name=\"crearNombre\" onChange={this.handleChange} value={this.state.crearNombre} placeholder=\"NOMBRE Y APELLIDOS\"/>\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputEmail1\">USERNAME</label>\r\n                                       <input type=\"email\" className=\"form-control\" name=\"crearUsername\" onChange={this.handleChange} value={this.state.crearUsername} placeholder=\"Username\"/>\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputPassword1\">CONTRASEÑA</label>\r\n                                       <input type=\"password\" className=\"form-control\" name=\"crearPassword\" onChange={this.handleChange} value={this.state.crearPassword} placeholder=\"**********\"/>\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputPassword1\">Sucursales</label>\r\n                                       {\r\n                                         this.state.sucursales?\r\n                                         this.state.sucursales.map(s =>{\r\n                                         return(\r\n                                            <div><input type=\"checkbox\" name=\"sucursalCrear\" value={s.id} onClick={this.addSucursal}/> {s.nombre}</div>\r\n                                         )\r\n                                       }) : null\r\n\r\n                                     }\r\n\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label>Seleccionar sucursal predeterminada</label>\r\n                                       <select className=\"form-control listProductos\" name=\"crearSucursalPredeterminada\" onChange={this.handleChange} value={this.state.crearSucursalPredeterminada}>\r\n\r\n                                           {\r\n                                               this.state.sucursalesPArray ?\r\n                                               this.state.sucursalesPArray.map((data)=>{\r\n                                                 if ((this.state.editarSucursales.findIndex(a=>a==data.id)) > -1){\r\n                                                   return(\r\n                                                    <option key={data.id} value={data.id} > {data.nombre} </option>\r\n                                                   )\r\n                                                 }\r\n\r\n                                               }\r\n                                               )\r\n                                               :null\r\n                                           }\r\n\r\n                                       </select>\r\n                                   </div>\r\n                                   <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.sendCrearUsuario()}>Crear</button>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n\r\n             </Modal.Body>\r\n           </Modal>\r\n\r\n           <Modal\r\n\r\n               show={this.state.estadoModalEditarUsuario}\r\n               onHide={() => this.cambiarModalEditarUsuario()}\r\n               >\r\n               <Modal.Header closeButton>\r\n                 <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                   Editar Usuario\r\n                 </Modal.Title>\r\n               </Modal.Header>\r\n               <Modal.Body>\r\n                   <div className=\"card card-default\">\r\n                       <div className=\"modal-body\">\r\n                           <div className=\"card-body\">\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputUsername1\">NOMBRES COMPLETOS</label>\r\n                                       <input type=\"text\" className=\"form-control\" name=\"editarNombre\"   value={this.state.editarNombre} onChange={this.handleChange}  placeholder=\"NOMBRE Y APELLIDOS\"/>\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputEmail1\">USERNAME</label>\r\n                                       <input type=\"email\" className=\"form-control\" name=\"editarUsername\"  value={this.state.editarUsername} onChange={this.handleChange} placeholder=\"Email\"/>\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputPassword1\">CONTRASEÑA</label>\r\n                                       <input type=\"password\" className=\"form-control\" name=\"editarPassword\"  value={this.state.editarPassword} onChange={this.handleChange} placeholder=\"**********\"/>\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label htmlFor=\"exampleInputPassword1\">Sucursales</label>\r\n                                       {\r\n                                         this.state.sucursales?\r\n                                         this.state.sucursales.map(s =>{\r\n                                         return(\r\n                                           <div>\r\n                                            {\r\n                                              ((this.state.editarSucursales.findIndex(a=>a==s.id)) > -1) ?\r\n                                            <div><input type=\"checkbox\" name=\"sucursalEditar\" value={s.id} defaultChecked onClick={this.addSucursal}/> {s.nombre}</div>\r\n\r\n                                            :\r\n                                            <div><input type=\"checkbox\" name=\"sucursalEditar\" value={s.id} onClick={this.addSucursal}/> {s.nombre}</div>\r\n\r\n                                            }\r\n                                          </div>\r\n\r\n                                         )\r\n                                       }) : null\r\n\r\n                                     }\r\n\r\n                                   </div>\r\n                                   <div className=\"form-group\">\r\n                                       <label>Seleccionar sucursal predeterminada</label>\r\n                                       <select className=\"form-control listProductos\" name=\"editarSucursalPredeterminada\" onChange={this.handleChange} value={this.state.editarSucursalPredeterminada}>\r\n\r\n                                           {\r\n                                               this.state.sucursalesPArray ?\r\n                                               this.state.sucursalesPArray.map((data,index)=>{\r\n                                                 if ((this.state.editarSucursales.findIndex(a=>a==data.id)) > -1){\r\n                                                   return(\r\n                                                    <option key={data.id} value={data.id} > {data.nombre} </option>\r\n                                                      )\r\n                                                 }\r\n\r\n                                               }\r\n                                               )\r\n                                               :null\r\n                                           }\r\n\r\n                                       </select>\r\n                                   </div>\r\n                                   <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" onClick={()=>this.sendEditarUsuario()}>Editar</button>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n\r\n               </Modal.Body>\r\n             </Modal>\r\n\r\n         <Toast\r\n               style={{\r\n               position: 'fixed',\r\n               top: 5,\r\n               right: 5,\r\n               zIndex:1060,\r\n               backgroundColor: 'rgba(76,208,76,0.7)',\r\n               color:'white'\r\n               }}\r\n               onClose={() => this.cambiarToastGreen()}\r\n               show={this.state.estadoToastGreen}\r\n               delay={3000}\r\n               autohide\r\n               >\r\n                 <Toast.Body>\r\n                   <h4>{this.state.messageGreen}</h4>\r\n                 </Toast.Body>\r\n           </Toast>\r\n\r\n         <Toast\r\n                 style={{\r\n                 position: 'fixed',\r\n                 top: 5,\r\n                 right: 5,\r\n                 zIndex:1061,\r\n                 backgroundColor: 'rgba(205,55,55,0.7)',\r\n                 color:'white'\r\n                   }}\r\n                 onClose={() => this.cambiarToastRed()}\r\n                 show={this.state.estadoToastRed}\r\n                 delay={3000}\r\n                 autohide\r\n\r\n           >\r\n             <Toast.Body>\r\n               <h4>{this.state.messageRed}</h4>\r\n             </Toast.Body>\r\n         </Toast>\r\n\r\n\r\n         </div>\r\n\r\n       )\r\n\r\n     }\r\n  }\r\n\r\n\r\nexport default Usuario\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\n\r\n  class Botones extends Component {\r\n\r\n      constructor(){\r\n          super();\r\n          this.state ={\r\n          }\r\n        }\r\n\r\nrender(){\r\n    return(\r\n        <div className=\"col-2\">\r\n\r\n            {/*<button className=\"btn waves-effect waves-light btn-warning\" onClick={()=>this.props.generateGraficos()} >Mostrar Grafico</button>*/}\r\n            <button className=\"btn waves-effect waves-light btn-success\" onClick={()=>this.props.generateExcel()} >Generar excel</button>\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Botones\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\n\r\n  class Tabla extends Component {\r\n\r\n      constructor(){\r\n          super();\r\n          this.state ={\r\n          }\r\n        }\r\n\r\nrender(){\r\n    return(\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                      <h4 className=\"card-title\">Detalles (seguimiento en el Tiempo)</h4>\r\n                      <table id=\"tb_usuarios\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                          <thead>\r\n                              <tr>\r\n                                  <th>SUCURSAL</th>\r\n                                  <th>FECHA</th>\r\n                                  <th>ACCION</th>\r\n                                  <th>NUMERO</th>\r\n                                  <th>CANTIDAD</th>\r\n                                  <th>STOCK</th>\r\n                              </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                               {\r\n                                  this.props.reporte.movimientos ?\r\n                                  this.props.reporte.movimientos.map((task ,index) =>{\r\n                                      if (task.operacion == 1 ){\r\n                                      return (\r\n\r\n                                                <tr className=\"table-success\" key={index}>\r\n                                                    <td>{task.sucursal}</td>\r\n                                                    <td>{task.fecha}</td>\r\n                                                    <td>{task.accion}</td>\r\n                                                    <td>{task.registro}</td>\r\n                                                    <td>+{task.cantidad}</td>\r\n                                                    <td>{task.stock}</td>\r\n                                                </tr>\r\n\r\n                                      )}\r\n                                      else {\r\n                                        return(\r\n                                            <tr className=\"table-danger\" key={index}>\r\n                                                <td>{task.sucursal}</td>\r\n                                                <td>{task.fecha}</td>\r\n                                                <td>{task.accion}</td>\r\n                                                <td>{task.registro}</td>\r\n                                                <td>-{task.cantidad}</td>\r\n                                                <td>{task.stock}</td>\r\n                                            </tr>\r\n                                      )}\r\n                                   } )   : null\r\n                                  }\r\n                          </tbody>\r\n                      </table>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tabla\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\n//import { VictoryBar, VictoryChart, VictoryAxis } from 'victory';\r\n\r\n  class Graficos extends Component {\r\n\r\n      constructor(){\r\n          super();\r\n          this.state ={\r\n\r\n            data:[\r\n                {quarter: 1, earnings: 130},\r\n                {quarter: 2, earnings: 160},\r\n                {quarter: 3, earnings: 140},\r\n                {quarter: 4, earnings: 190}\r\n                ]\r\n          }\r\n        }\r\n\r\n\r\n\r\n\r\n  render(){\r\n      return(\r\n\r\n        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                   <div class=\"row justify-content-md-center\">\r\n                    <div className= \"col-6\" >\r\n                            {/*  <VictoryChart\r\n                                  // domainPadding will add space to each side of VictoryBar to\r\n                                  // prevent it from overlapping the axis\r\n                                  domainPadding={20}\r\n                                >\r\n                                  <VictoryAxis\r\n                                    // tickValues specifies both the number of ticks and where\r\n                                    // they are placed on the axis\r\n                                    tickValues={[1, 2, 3, 4]}\r\n                                    tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\r\n                                  />\r\n                                  <VictoryAxis\r\n                                    dependentAxis\r\n                                    // tickFormat specifies how ticks should be displayed\r\n                                    tickFormat={(x) => (`$${x / 10}k`)}\r\n                                  />\r\n                                  <VictoryBar\r\n                                    data={this.state.data}\r\n                                    x=\"quarter\"\r\n                                    y=\"earnings\"\r\n                                  />\r\n                                </VictoryChart> */}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Graficos\r\n","import React from 'react';\r\nimport {Component} from 'react';\r\nimport Botones from './Botones'\r\nimport Tabla from './Tabla'\r\nimport Graficos from './Graficos'\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../../config'\r\n\r\n  class Reportes extends Component {\r\n\r\n      constructor(){\r\n          super();\r\n          this.state ={\r\n\r\n            reporte:[],\r\n\r\n            codigoProducto:'',\r\n            sucursalProducto:'',\r\n\r\n            codigoProductoSpan:'',\r\n            stockActual:'',\r\n            nombreProducto:'',\r\n            entradaTotal:'',\r\n            transferenciaEnviadas:'',\r\n            transferenciaRecibidas:'',\r\n            totalVendido:'',\r\n\r\n            //estados componentes\r\n\r\n            addBotones:false,\r\n            addTabla:false,\r\n            addGraficos:false\r\n\r\n          }\r\n          this.fetchDataTable = this.fetchDataTable.bind(this);\r\n          this.handleChange = this.handleChange.bind(this);\r\n          this.generateGraficos = this.generateGraficos.bind(this);\r\n          this.generateExcel = this.generateExcel.bind(this);\r\n      }\r\n\r\n      cleanInputs(op){\r\n\r\n        }\r\n      crearRegistros(){\r\n\r\n        var reporte = this.state.reporte;\r\n\r\n        this.setState({\r\n          codigoProductoSpan:this.state.codigoProducto,\r\n          stockActual:reporte.stockActual,\r\n          nombreProducto:reporte.nombre,\r\n          entradaTotal:reporte.entradasTotales,\r\n          transferenciaEnviadas:reporte.transferEnviadas,\r\n          transferenciaRecibidas:reporte.transferRecibidas,\r\n          totalVendido:reporte.ventasTotales,\r\n          sucursalProducto:1\r\n        })\r\n\r\n      }\r\n      limpiarRegistros(){\r\n\r\n        this.setState({\r\n          codigoProductoSpan:'',\r\n          stockActual:'',\r\n          nombreProducto:'',\r\n          entradaTotal:'',\r\n          transferenciaEnviadas:'',\r\n          transferenciaRecibidas:'',\r\n          totalVendido:'',\r\n          sucursalProducto:''\r\n        })\r\n\r\n      }\r\n\r\n      sendCodigoProducto(){\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>Buscando registros del producto</h4>\r\n            </div>,\r\n            {\r\n                position: 'top-right'\r\n            }\r\n\r\n        )\r\n        .then(() => {\r\n                fetch(config.api+`/movimientos/reporte`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token': csrf_token,\r\n                        codigo: this.state.codigoProducto,\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.response==true){\r\n                  console.log(data);\r\n                  this.setState({\r\n                    reporte: data,\r\n                    addBotones:true,\r\n                    addTabla:true\r\n                  },()=>this.crearRegistros())\r\n                  console.log(\"exito\");\r\n\r\n                  cogoToast.success(\r\n                      <div>\r\n                          <h4>Registros encontrados</h4>\r\n                      </div>,\r\n                      {\r\n                        position: 'top-right'\r\n                      }\r\n                  );\r\n                }\r\n                else{\r\n                  this.setState({\r\n                    addBotones:false,\r\n                    addTabla:false\r\n                  },()=>this.limpiarRegistros())\r\n                  cogoToast.error(\r\n                      <div>\r\n                          <h4>Registros no encontrados</h4>\r\n                      </div>,\r\n                      {\r\n                        position: 'top-right'\r\n                      }\r\n                  );\r\n\r\n                }\r\n\r\n            })\r\n            .catch((error)=> {\r\n              console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                cogoToast.error(\r\n                    <div>\r\n                        <h4>Hubo un error al buscar producto</h4>\r\n                    </div>,\r\n                    {\r\n                      position: 'top-right'\r\n                    }\r\n                  );\r\n            });\r\n\r\n      })\r\n    }\r\n\r\n\r\n    fetchDataTable(){\r\n\r\n      fetch(\r\n        config.api+'/configuracion/usuarios/tb_sucursales',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n              'Accept' : 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'usuid'         : localStorage.getItem('usuid')\r\n          }\r\n      }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({sucursales: data},()=>{\r\n              console.log(this.state.sucursales)\r\n              });\r\n            })\r\n    }\r\n\r\n    generateExcel(){\r\n\r\n      cogoToast.loading(\r\n          <div>\r\n              <h4>Generando Excel</h4>\r\n          </div>,\r\n          {\r\n              position: 'top-right'\r\n          }\r\n        ).then(()=>{\r\n\r\n              fetch(config.api+`/movimientos/reporte`,\r\n              {\r\n                  method: 'POST',\r\n                  body: JSON.stringify({\r\n                      // '_token': csrf_token,\r\n                      codigo: this.state.codigoProducto,\r\n                      descargar: true,\r\n                  }),\r\n                  headers: {\r\n                      'Accept' : 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'usuid'         : localStorage.getItem('usuid')\r\n                  }\r\n                }\r\n\r\n              ).then(response=>response.blob())\r\n              .then(data=>{\r\n                let link = document.createElement('a');\r\n                link.href = window.URL.createObjectURL(data);\r\n                link.download = `${this.state.nombreProducto}-${this.state.codigoProducto}.xlsx`;\r\n                link.click();\r\n                  cogoToast.success(\r\n                      <div>\r\n                          <h4>Excel generado</h4>\r\n                      </div>,\r\n                      {\r\n                        position: 'top-right'\r\n                      }\r\n                  );\r\n                })\r\n                .catch((error)=> {\r\n                  console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n                  cogoToast.error(\r\n                      <div>\r\n                          <h4>HUBO UN PROBLEMA AL CANCELAR LA VENTA</h4>\r\n                      </div>,\r\n                      {\r\n                        position: 'top-right'\r\n                      }\r\n                  );\r\n                });\r\n\r\n        })\r\n\r\n\r\n      }\r\n\r\n    generateGraficos(){\r\n      console.log(\"graficos\")\r\n      this.setState({\r\n        addTabla: false\r\n      },()=>this.setState({\r\n        addGraficos:true\r\n      }))\r\n    }\r\n\r\n    handleChange (e){\r\n      const {name , value} = e.target;\r\n      this.setState({\r\n          [name] : value\r\n\r\n      })\r\n      console.log(name);\r\n      console.log(value);\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.fetchDataTable();\r\n    }\r\n\r\n\r\n\r\n   render (){\r\n     return(\r\n       <div className=\"row\">\r\n\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n             <div className=\"card\">\r\n                 <div className=\"card-body\">\r\n                         <div className=\"row\">\r\n                             <div className=\"col-3\">\r\n                                 <label> Buscar producto </label>\r\n                                 <input type=\"text\" className=\"form-control\" name=\"codigoProducto\" onChange={this.handleChange} value={this.state.codigoProducto} />\r\n                             </div>\r\n                             <div className=\"col-3\">\r\n                                 <label>Seleccionar sucursal</label>\r\n                                 <select className=\"form-control listProductos\" name=\"sucursalProducto\" onChange={this.handleChange} value={this.state.sucursalProducto}>\r\n\r\n                                     {\r\n                                         this.state.sucursales ?\r\n                                         this.state.sucursales.map((data)=>{\r\n\r\n                                            return(\r\n                                             <option key={data.id} value={data.id} > {data.nombre} </option>\r\n                                            )\r\n                                         }\r\n                                         )\r\n                                         :null\r\n                                     }\r\n\r\n                                 </select>\r\n                             </div>\r\n                             <div className=\"col-2\">\r\n                                 <br/>\r\n                                 <button type=\"button\"\r\n                                     onClick={()=>this.sendCodigoProducto()}\r\n                                     className=\"btn waves-effect waves-light btn-info\">BUSCAR</button>\r\n                             </div>\r\n                             <div className=\"col-2\">\r\n                                 <label>Stock actual</label>\r\n                                 <h4 className=\"card-title\"name=\"stockActual\">{this.state.stockActual}</h4>\r\n                             </div>\r\n                             { this.state.addBotones && <Botones generateExcel={this.generateExcel} generateGraficos={this.generateGraficos} />}\r\n\r\n                       </div>\r\n                       <div className=\"row\" >\r\n                           <div className=\"col-3\">\r\n                               <label>Nombre del producto </label>\r\n                               <h4 className=\"card-title\" name=\"nombreProducto\">{this.state.nombreProducto} </h4>\r\n                           </div>\r\n                           <div className=\"col-2\">\r\n                               <label>Codigo</label>\r\n                               <h4 className=\"card-title\" name=\"codigoProductoSpan\">{this.state.codigoProductoSpan}</h4>\r\n                           </div>\r\n                           <div className=\"col-2\">\r\n                               <label>Entradas totales</label>\r\n                               <h4 className=\"card-title\" name=\"entradaTotal\">{this.state.entradaTotal}</h4>\r\n                           </div>\r\n                           <div className=\"col-2\">\r\n                               <label>Trasnferencias Enviadas</label>\r\n                               <h4 className=\"card-title\" name=\"transferenciaTotal\">{this.state.transferenciaEnviadas}</h4>\r\n                           </div>\r\n                           <div className=\"col-2\">\r\n                               <label>Trasnferencias Recibidas</label>\r\n                               <h4 className=\"card-title\"name=\"transferenciaTotal\">{this.state.transferenciaRecibidas}</h4>\r\n                           </div>\r\n                           <div className=\"col-1\">\r\n                               <label>Total vendidos</label>\r\n                               <h4 className=\"card-title\" name=\"totalVendido\">{this.state.totalVendido}</h4>\r\n                           </div>\r\n                     </div>\r\n\r\n                 </div>\r\n             </div>\r\n         </div>\r\n\r\n         {this.state.addGraficos && <Graficos reporte={this.state.reporte} />}\r\n         {this.state.addTabla && <Tabla reporte={this.state.reporte} />}\r\n\r\n         </div>\r\n\r\n       )\r\n\r\n     }\r\n  }\r\n\r\n\r\nexport default Reportes\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Component} from 'react';\r\n\r\nclass VentaBoleta extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n        }\r\n\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n        <div className=\"card card-default\">\r\n            <div className=\"card-body\">\r\n             <h6 className=\"card-title\">BOLETA ELECTRÓNICA:</h6>\r\n            <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_emitirBoleta\">\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label><i className=\"mdi mdi-barcode\"></i>   Serie:</label>\r\n                            <input type=\"hidden\" name=\"tipoComprobante\" id=\"tipoComprobante\" value=\"{{ $tiposcomprobante->id }}\" className=\"form-control\" readonly=\"readonly\" />\r\n                            <input type=\"text\" name=\"serieVenta\" id=\"serieVenta\" value=\"{{ $tiposcomprobante->serie }}\" className=\"form-control\" readonly=\"readonly\"/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label> <i className=\"mdi mdi-file-document-box\"></i>    Nº Boleta:</label>\r\n                            <input type=\"number\" className=\"form-control\" name=\"facturaVenta\" id=\"facturaVenta\" value=\"{{ $tiposcomprobante->correlativo }}\"/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label> <i className=\"mdi mdi-calendar-text\"></i>    Fecha de emisión:</label>\r\n                            <input type=\"text\" className=\"form-control\" value =\"{{ $fechaActual }}\" name=\"dateFactura\" id=\"dateFactura\"/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label> <i className=\"mdi mdi-cash-multiple\"></i>  Moneda:</label>\r\n                            <div className=\"input-group\">\r\n                                <select className=\"form-control\" name=\"tipoMoneda\" id=\"tipoMoneda\" style={{width: '100%'}}>\r\n                                    {/* @foreach($tiposMoneda as $tipoMoneda)\r\n                                        <option value=\"{{ $tipoMoneda->id }}\" > tipoMoneda->nombre  </option>\r\n                                    @endforeach */}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h6 className=\"card-title\">CLIENTE:</h6>\r\n                <div className=\"form-group\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Tipo de Documento: *</label>\r\n                            <div className=\"input-group\">\r\n                                <select className=\"form-control\" name=\"tipoDocumento\" id=\"tipoDocumento\" style={{width: '100%'}}>\r\n                                    <option value=\"1\" > DNI </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>N° de Documento: *</label>\r\n                            <input type=\"number\" className=\"form-control\" name=\"numeroDocumento\" id=\"numeroDocumento\"/>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label>Nombre del cliente: *</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"nombreCliente\" id=\"nombreCliente\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h6 className=\"card-title\">DETALLE DOCUMENTO:</h6>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <table className=\"table table-bordered\" id=\"tbl_products\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th width=\"25%;\">Producto</th>\r\n                                    <th>Cantidad</th>\r\n                                    <th width=\"2%;\">Disponible</th>\r\n                                    <th width=\"25%;\">Precio</th>\r\n                                    <th>Descuento</th>\r\n                                    <th>SubTotal</th>\r\n                                    <th>Total</th>\r\n                                    <th>Opciones</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <select className=\"form-control productos \" name=\"nombreProducto[]\" id=\"nombreProducto\" style={{width: '100%'}}>\r\n                                            {/* @foreach($productos as $producto) */}\r\n                                                {/* <option value=\"{{ $producto->id }}\" \r\n                                                precio=\"{{ $producto->precio }}\"  disponible=\"{{ $producto->cantidad }}\"> $producto->nombre </option> */}\r\n                                            {/* @endforeach */}\r\n                                        </select>\r\n                                    </td>\r\n                                    <td className=\"cantidad\">\r\n                                        <input type=\"text\" className=\"form-control c_quantity\" name=\"cantidad[]\"  value=\"0\"/>\r\n                                    </td>\r\n                                    <td className=\"disponible\">\r\n                                        <span>0</span>\r\n                                        <input type=\"hidden\" className=\"form-control disponible\" name=\"disponible[]\" value=\"0\" readonly=\"\"/>\r\n                                    </td>\r\n                                    <td className=\"precio\">\r\n                                        <span>0</span>\r\n                                        <input type=\"hidden\" className=\"form-control precio\" name=\"precio[]\" value=\"0\" readonly=\"\" style={{width: '100%'}}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>0</span>\r\n                                        <input type=\"hidden\" className=\"form-control descuento\" name=\"descuento[]\" value=\"0\" readonly=\"\"/>\r\n                                    </td>\r\n                                    <td className=\"subtotal\">\r\n                                        <span>0</span>\r\n                                        <input type=\"hidden\" className=\"form-control subtotal\" name=\"subtotal[]\" value=\"0\" readonly=\"\" style={{width: '100%'}}/>\r\n                                    </td>\r\n                                    <td className=\"total\">\r\n                                        <span>0</span>\r\n                                        <input type=\"hidden\" className=\"form-control total\" name=\"total[]\" value=\"0\" readonly=\"\" style={{width: '100%'}}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-12\">\r\n                        <br/>\r\n                        \r\n                        <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProduct\">\r\n                            <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO AL DETALLE\r\n                        </button>\r\n                        <br/>\r\n                    </div>\r\n                </div><br/>\r\n                <div className=\"col-md-12\" style={{marginTop: '15px'}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-7\">\r\n                            <div className=\"content-group\">\r\n                                <h6>Observación:</h6>\r\n                                <textarea className=\"form-control\" name=\"observacionVenta\" id=\"exampleTextarea1\" rows=\"8\" placeholder=\"Escribe aquí una observación\">SN</textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-5\">\r\n                            <div className=\"content-group\">\r\n                                <h6>Resumen:</h6>\r\n                                <div className=\"table-responsive no-border\">\r\n                                    <table className=\"table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th>Descuento:</th>\r\n                                                <td className=\"text-right\">\r\n                                                    S/. <span id=\"descuentoVentaTexto\">0</span>\r\n                                                    <input type=\"hidden\" name=\"descuentoVenta\" id=\"descuentoVenta\" value=\"0\"/>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Subtotal:</th>\r\n                                                <td className=\"text-right\">\r\n                                                    S/. <span id=\"subTotalVentaTexto\">0</span>\r\n                                                    <input type=\"hidden\" name=\"subTotalVenta\" id=\"subTotalVenta\" value=\"0\"/>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>IGV: <span className=\"text-regular\">(18%)</span></th>\r\n                                                <td className=\"text-right\">\r\n                                                    S/. <span id=\"igvVentaTexto\">0</span>\r\n                                                    <input type=\"hidden\" name=\"igvVenta\" id=\"igvVenta\" value=\"0\"/>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Total:</th>\r\n                                                <td className=\"text-right text-primary\"><h5 className=\"text-semibold\">\r\n                                                    S/. <span id=\"totalVentaTexto\">0</span></h5>\r\n                                                    <input type=\"hidden\" name=\"totalVenta\" id=\"totalVenta\" value=\"2\"/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group boton\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <button type=\"button\" className=\" addexis form-control btn btn-block btn-primary btn-lg\" id=\"emitirBoleta\">\r\n                                EMITIR BOLETA ELECTRÓNICA</button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <button type=\"button\" className=\" addexis form-control btn btn-block btn-success btn-lg\" id=\"guardarBoleta\">\r\n                                GUARDAR BOLETA ELECTRÓNICA</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n)}}\r\n\r\nexport default VentaBoleta","import React from 'react'\r\nimport {Component} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nclass VentaFactura extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:'hola',\r\n            estadoa:false,\r\n            estadob:false\r\n            \r\n            \r\n        }\r\n        this.cambiarb= this.cambiarb.bind(this);\r\n        this.cambiara= this.cambiara.bind(this);\r\n        this.cambio= this.cambio.bind(this);   \r\n}\r\n    cambiara() {\r\n        this.setState({\r\n        estadoa: !this.state.estadoa\r\n        });\r\n    }\r\n    cambiarb(){\r\n        this.setState({\r\n            estadob: !this.state.estadob\r\n        })\r\n    }   \r\n\r\n    cambio() {\r\n        this.setState({\r\n        estadoa: !this.state.estadoa,\r\n        estadob: !this.state.estadob\r\n        }); \r\n    }\r\n \r\n\r\nfechtDataFactura(){\r\n    console.log(\"holaaaa\");\r\n}\r\n\r\nrender(){\r\n    return(\r\n     <div className=\"col-lg-12 grid-margin stretch-card\">\r\n        <div className=\"card card-default\">\r\n            <div className=\"card-body\">\r\n            <h6 className=\"card-title\">FACTURA ELECTRÓNICA:</h6>\r\n            <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_editar_producto\">\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label><i className=\"mdi mdi-barcode\"></i>   Serie:</label>\r\n                            <input type=\"hidden\" name=\"tipoComprobante\" id=\"tipoComprobante\" value=\"{{ $tiposcomprobante->id }}\" className=\"form-control\" readonly=\"readonly\" />\r\n                            <input type=\"text\" name=\"serieVenta\" id=\"serieVenta\" value={this.props.dataFactura.serie} className=\"form-control\" readonly=\"readonly\"/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label> <i className=\"mdi mdi-file-document-box\"></i>    Nº Factura:</label>\r\n                            <input type=\"number\" className=\"form-control\" name=\"facturaVenta\" id=\"facturaVenta\" value={this.props.correlativo} readOnly=\"readonly\" />\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label> <i className=\"mdi mdi-calendar-text\"></i>    Fecha de emisión:</label>\r\n                            <input type=\"text\" className=\"form-control\" value ={this.props.fecha} name=\"dateFactura\" id=\"dateFactura\"/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label> <i className=\"mdi mdi-cash-multiple\"></i>  Moneda:</label>\r\n                            <input type=\"text\" className=\"form-control\" value =\"Soles\" name=\"dateFactura\" id=\"dateFactura\" readOnly=\"readonly\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h6 className=\"card-title\">CLIENTE:</h6>\r\n                <div className=\"form-group\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Tipo de Documento: *</label>\r\n                            <div className=\"input-group\">\r\n                                <select className=\"form-control\" name=\"tipoDocumento\" id=\"tipoDocumento\" style={{width: '100%'}}>\r\n                                    <option value=\"3\" > RUC </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>N° de Documento:*</label>\r\n                            <input type=\"number\" className=\"form-control\" name=\"numeroDocumento\" id=\"numeroDocumento\"/>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label>Razón Social: *</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"razonSocial\" id=\"razonSocial\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <label><i className=\"mdi mdi-home\"></i>    Dirección: *</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"direccion\" id=\"direccion\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h6 className=\"card-title\">DETALLE DOCUMENTO:</h6>\r\n                <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-bordered dataTables_length\" id=\"tb_products\">\r\n                        <thead>\r\n                            <tr>\r\n                                \r\n                                <th width=\"25%;\">Producto</th>\r\n                                <th>Cantidad</th>\r\n                                <th>Disponible</th>\r\n                                <th width=\"15%;\">Precio</th>\r\n                                <th>Descuento</th>\r\n                                <th>SubTotal</th>\r\n                                <th>Total</th>\r\n                                <th>Opciones</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n                \r\n                <div className=\"col-12\">\r\n                    <br/>\r\n                    \r\n                    <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProduct\" onClick={() => this.cambiara()} >\r\n                        <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO AL DETALLE\r\n                    </button>\r\n                    <br/>\r\n                </div>\r\n            </div><br/>\r\n            <div className=\"col-md-12\" style={{\"margin-top\": '15px'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-7\">\r\n                        <div className=\"content-group\">\r\n                            <h6>Observación:</h6>\r\n                            <textarea className=\"form-control\" name=\"observacionVenta\" id=\"exampleTextarea1\"  rows=\"8\" placeholder=\"Escribe aquí una observación\">SN</textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-5\">\r\n                        <div className=\"content-group\">\r\n                            <h6>Resumen:</h6>\r\n                            <div className=\"table-responsive no-border\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>Descuento:</th>\r\n                                            <td className=\"text-right\">\r\n                                                S/. <span id=\"descuentoVentaTexto\">0</span>\r\n                                                <input type=\"hidden\" name=\"descuentoVenta\" id=\"descuentoVenta\" value=\"0\"/>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Subtotal:</th>\r\n                                            <td className=\"text-right\">\r\n                                                S/. <span id=\"subTotalVentaTexto\">0</span>\r\n                                                <input type=\"hidden\" name=\"subTotalVenta\" id=\"subTotalVenta\" value=\"0\"/>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>IGV: <span className=\"text-regular\">(18%)</span></th>\r\n                                            <td className=\"text-right\">\r\n                                                S/. <span id=\"igvVentaTexto\">0</span>\r\n                                                <input type=\"hidden\" name=\"igvVenta\" id=\"igvVenta\" value=\"0\"/>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Total:</th>\r\n                                            <td className=\"text-right text-primary\"><h5 className=\"text-semibold\">\r\n                                                S/. <span id=\"totalVentaTexto\">0</span></h5>\r\n                                                <input type=\"hidden\" name=\"totalVenta\" id=\"totalVenta\" value=\"2\"/>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group boton\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <button type=\"button\" className=\" addexis form-control btn btn-block btn-primary btn-lg\" id=\"emitirFactura\">\r\n                            EMITIR FACTURA ELECTRÓNICA</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button type=\"button\" className=\" addexis form-control btn btn-block btn-success btn-lg\" id=\"guardarFactura\">\r\n                            GUARDAR FACTURA ELECTRÓNICA</button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </form>\r\n\r\n        <div id=\"agregarProductoDetalleModal\" className=\"modal fade bd-agregarProductoDetalleModal-lg\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"card card-default\">\r\n                        <div className=\"card-header cabezera\">\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4> Buscar producto especifico </h4>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            \r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\">Buscar</h4>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-3\">\r\n                                                <label>Buscar Codigo</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_codigo\" id=\"buscar_tb_codigo\"/>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <label>Buscar Marca</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_marca\" id=\"buscar_tb_marca\"/>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <label>Buscar Tipo</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_tipo\" id=\"buscar_tb_tipo\"/>\r\n                                            </div>\r\n                                            <div className=\"col-3\">\r\n                                                <label>Buscar Nombre</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_nombre\"/>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <label>Buscar Precio</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_precio\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                                <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProductoTemporal\"  >\r\n                                    <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO TEMPORAL\r\n                                </button>\r\n\r\n\r\n                            <div className=\"card-body\" id=\"agregarProductoDetalleModalBody\">\r\n                                <table className=\"table table-bordered dataTables_length\" id=\"tb_buscarProducto\" style={{width:'100%'}}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Codigo</th>\r\n                                            <th>Marca</th>\r\n                                            <th>Tipo</th>\r\n                                            <th>Disponibles</th>\r\n                                            <th>Nombre</th>\r\n                                            <th>Precio</th>\r\n                                            <th>Seleccionar</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                </table>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n        \r\n      <Modal\r\n            size=\"lg\"\r\n            show={this.state.estadoa}\r\n            onHide={() => this.cambiara()}            \r\n        >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n             Buscar producto especifico\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"card card-default\">\r\n                        <div className=\"card-header cabezera\">\r\n                            <h4> Buscar producto especifico </h4>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            \r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\">Buscar</h4>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-3\">\r\n                                                <label>Buscar Codigo</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_codigo\" id=\"buscar_tb_codigo\"/>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <label>Buscar Marca</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_marca\" id=\"buscar_tb_marca\"/>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <label>Buscar Tipo</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_tipo\" id=\"buscar_tb_tipo\"/>\r\n                                            </div>\r\n                                            <div className=\"col-3\">\r\n                                                <label>Buscar Nombre</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_nombre\"/>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <label>Buscar Precio</label>\r\n                                                <input type=\"text\" className=\"form-control form-control-lg\" name=\"buscar_tb_nombre\" id=\"buscar_tb_precio\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                                <button type=\"button\" className=\"btn btn-warning\" id=\"btnAddProductoTemporal\" onClick={() => this.cambio()} >\r\n                                    <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO TEMPORAL\r\n                                </button>\r\n\r\n\r\n                            <div className=\"card-body\" id=\"agregarProductoDetalleModalBody\">\r\n                                <table className=\"table table-bordered dataTables_length\" id=\"tb_buscarProducto\" style={{width:'100%'}}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Codigo</th>\r\n                                            <th>Marca</th>\r\n                                            <th>Tipo</th>\r\n                                            <th>Disponibles</th>\r\n                                            <th>Nombre</th>\r\n                                            <th>Precio</th>\r\n                                            <th>Seleccionar</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                </table>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n            show={this.state.estadob}\r\n            onHide={() => this.cambiarb()}\r\n        >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Custom Modal Styling\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                <div className=\"card card-default\">\r\n                        <div className=\"card-header cabezera\">\r\n                            <h4> Agregar Producto </h4>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"card-body\">\r\n                                <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_producto\">\r\n                                    @csrf\r\n                                    <div className=\"form-group\" >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Codigo (OPCIONAL)</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\"/>\r\n                                            </div>\r\n                                            <div className=\"col-12\" id=\"alertaCodigo\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Nombre del producto</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Precio con IGV(18%)</label>\r\n                                                <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\r\n                                                    pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value=\"\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" />\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group boton\">\r\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\">\r\n                                            Agregar</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n        <div id=\"productoTemporalModal\" className=\"modal fade bd-productoTemporalModal\" role=\"dialog\">\r\n            <div className=\"modal-dialog \">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"card card-default\">\r\n                        <div className=\"card-header cabezera\">\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4> Agregar Producto </h4>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"card-body\">\r\n                                <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_producto\">\r\n                                    @csrf\r\n                                    <div className=\"form-group\" >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Codigo (OPCIONAL)</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"codigoProductoNuevo\" id=\"codigoProductoNuevo\"/>\r\n                                            </div>\r\n                                            <div className=\"col-12\" id=\"alertaCodigo\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Nombre del producto</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"nombreProductoNuevo\" id=\"nombreProductoNuevo\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <label>Precio con IGV(18%)</label>\r\n                                                <input type=\"text\" name=\"precioVentaProducto\" id=\"precioVentaProducto\" className=\"form-control\"\r\n                                                    pattern=\"^\\S/\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" value=\"\" data-type=\"currency\" placeholder=\"S/1,000,000.00\" />\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group boton\">\r\n                                        <button type=\"button\" className=\"addexis form-control btn btn-block btn-success btn-lg\" id=\"crearProducto\">\r\n                                            Agregar</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n)}}\r\n\r\nexport default VentaFactura","import React from 'react'\r\nimport {Component} from 'react';\r\n\r\n\r\nclass ProductoAddDetalleComponent extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            cantidad : 1\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.calcularSubTotalTotal = this.calcularSubTotalTotal.bind(this);\r\n    }\r\n\r\n    handleChange (e){\r\n        const {name , value} = e.target;\r\n\r\n        if (e.key === 'Enter') {\r\n            console.log(value);\r\n            this.props.buscarCodigoProducto(value, this.props.posicion);\r\n        }\r\n    }\r\n\r\n    calcularSubTotalTotal(e){\r\n        const {name , value} = e.target;\r\n        \r\n        this.setState({\r\n            cantidad : value\r\n        })\r\n        \r\n        console.log(value);\r\n        this.props.calcularSubTotalTotalDetalle(this.props.posicion, value, this.props.precio);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <tr>\r\n                <td>\r\n                    <input \r\n                        autoComplete={\"off\"}\r\n                        type=\"text\" \r\n                        className=\"form-control \" \r\n                        name=\"codigo[]\" \r\n                        autoFocus\r\n                        value={this.props.codigo}\r\n                        onChange={e => this.props.cambiarCodigo(e, this.props.posicion)}\r\n                        onKeyDown={this.handleChange}/>\r\n                </td>\r\n                <td>\r\n                    <span>{this.props.producto}</span>\r\n                    {/* <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.props.producto}\r\n                        name=\"producto[]\" /> */}\r\n                </td>\r\n                <td className=\"cantidad\">\r\n                    <input \r\n                        type=\"number\" \r\n                        className=\"form-control c_quantity\"\r\n                        onChange={this.calcularSubTotalTotal}\r\n                        value={this.state.cantidad}\r\n                        name=\"cantidad[]\" />\r\n                </td>\r\n                <td className=\"disponible\">\r\n                    <span>{this.props.stock}</span>\r\n                    <input type=\"hidden\" className=\"form-control disponible\" name=\"disponible[]\" value=\"0\" />\r\n                </td>\r\n                <td className=\"precio\">\r\n                    {\r\n                        this.props.descuentoAplicado\r\n                        ?<span><strike>{this.props.precio}</strike> - {this.props.nuevoPrecioOferta}</span>\r\n                        :<span>{this.props.precio}</span>\r\n                    }\r\n                    <input type=\"hidden\" className=\"form-control precio\" name=\"precio[]\" value=\"0\" style={{width: '100%'}}/>\r\n                </td>\r\n                <td className=\"descuento\">\r\n                    <span>{this.props.descuento}</span>\r\n                </td>\r\n                <td className=\"subtotal\">\r\n                    <span>{this.props.subTotal}</span>\r\n                    <input type=\"hidden\" className=\"form-control subtotal\" name=\"subtotal[]\" value=\"0\" style={{width: '100%'}}/>\r\n                </td>\r\n                <td className=\"total\">\r\n                    <span>{this.props.total}</span>\r\n                    <input type=\"hidden\" className=\"form-control total\" name=\"total[]\" value=\"0\" style={{width: '100%'}}/>\r\n                </td>\r\n                <td>\r\n                    <button type=\"button\" className=\"btn btn-danger btn-rounded btn-icon remove\" onClick={()=>this.props.eliminarProductoDetalle(this.props.numero)} >\r\n                        <i className=\"mdi mdi-close\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n         ) }}\r\n\r\n    export default ProductoAddDetalleComponent","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Component} from 'react';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n// IMPORT CONFRIM ALERTS\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\n// IMPORTAR SPINNER DE CARGA\r\nimport Loader from 'react-loader-spinner'\r\n\r\n// IMPORTAR COMPONENTE DE PRODUCTOS AL DETALLE\r\nimport ProductoAddDetalleComponent from './productoAddDetalle'\r\n\r\n// TOAST\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../../config'\r\n\r\nclass NuevaVenta extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            getDni          : true,\r\n            DNIRUCdatos     : [],\r\n            DNIRUCdatos     : [],\r\n            dniCliente      : '',\r\n            \r\n            // Toast\r\n            estadoToast     : false,\r\n            mensajeToast    : '',\r\n            colorToast      : 'rgba(76,208,76,0.7)',\r\n\r\n            // Cargando\r\n            loading         : true,\r\n\r\n            // Modales\r\n            estadoModalEditarProducto   :false,\r\n\r\n            // Array de productos agregados al detalle\r\n            arrayProductosDetalle       : [],\r\n            cantidadProductosDetalle    : 0,\r\n            numeroProductoDetalle       : 0,\r\n            tasks                       : '',\r\n            productosDetalleList        : [],\r\n\r\n            // DATOS TOTALES DE UNA VENTA\r\n            tipoDocumentoCliente        : 1,\r\n            numeroDocumentoCliente      : '',\r\n            nombreCliente               : '',\r\n            tipoComprobante             : '',\r\n            numeroVentasRealizadas      : 0,\r\n            totalVentasRealizadas       : 0,\r\n            sucursalId                  : '',\r\n            tipoMoneda                  : '1',\r\n            numeroVenta                 : '',\r\n            dateFactura                 : '',\r\n\r\n            descuentoVentaRealizadoGuardado : 0,\r\n            descuentoVentaRealizado     : 0,\r\n            descuentoVenta              : 0,\r\n            igvVenta                    : 0,\r\n            subTotalVenta               : 0,\r\n            totalVenta                  : 0,\r\n\r\n            observacionVenta            : 'SN',\r\n            \r\n            // DATOS DE UN PRODUCTO TEMPORAL\r\n            codigoProductoTemporal      : '',\r\n            nombreProductoTemporal      : '',\r\n            precioProductoTemporal      : '',\r\n\r\n            estadoa:false,\r\n            productos_tb                : [],\r\n             //buscador y Paginate\r\n             estadoBoton:[],\r\n             estadoQuery:'',\r\n\r\n\r\n        }\r\n        this.getCambioNumeroDocumento        = this.getCambioNumeroDocumento.bind(this);\r\n        this.getCambioNombreCliente          = this.getCambioNombreCliente.bind(this);\r\n        this.cambiarTipoDocumento            = this.cambiarTipoDocumento.bind(this);\r\n        this.cambiarTipoPago                 = this.cambiarTipoPago.bind(this);\r\n        this.calcularSubTotalTotalDetalle    = this.calcularSubTotalTotalDetalle.bind(this);\r\n        this.buscarCodigoProducto            = this.buscarCodigoProducto.bind(this);\r\n        this.eliminarProductoDetalle         = this.eliminarProductoDetalle.bind(this);\r\n        this.calcularDatosTotalesVenta       = this.calcularDatosTotalesVenta.bind(this);\r\n        this.cambiarValorFormTemporales      = this.cambiarValorFormTemporales.bind(this);\r\n        this.fetchAgregarProductoTemporal    = this.fetchAgregarProductoTemporal.bind(this);\r\n        this.generarVentaInterna             = this.generarVentaInterna.bind(this);\r\n        this.fetchAgregarVenta               = this.fetchAgregarVenta.bind(this);\r\n        this.getCambioDescuentoVenta         = this.getCambioDescuentoVenta.bind(this);\r\n\r\n        this.getProductos                    = this.getProductos.bind(this);\r\n        this.handleChangeBuscador            = this.handleChangeBuscador.bind(this);\r\n        this.seleccionarProductoTb           = this.seleccionarProductoTb.bind(this);\r\n        this.cambiarCodigo                   = this.cambiarCodigo.bind(this);\r\n        this.modalBuscarProducto             = this.modalBuscarProducto.bind(this);\r\n        this.getCambioObservacion            = this.getCambioObservacion.bind(this);\r\n\r\n    }\r\n\r\nmodalBuscarProducto() {\r\n    this.setState({\r\n        estadoa: !this.state.estadoa\r\n    });\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.getProductos();\r\n  }\r\n\r\n\r\ngetProductos(){\r\n    fetch(\r\n        config.api+'/ventas/tb_buscarProducto',\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n    )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                productos_tb: data\r\n            })\r\n            this.agregarBotones();\r\n    })\r\n}\r\n\r\nagregarBotones(){\r\n    let z = this.state.productos_tb.last_page;\r\n    console.log(z);\r\n    let x = [];\r\n    if(z){\r\n        for(let i = 1 ; i <= z ; i++){\r\n            x.push(i);\r\n        }\r\n        this.setState({estadoBoton: x},()=>console.log(this.state.estadoBoton))\r\n    }\r\n}\r\n\r\ncambiarPagina(number){\r\n    fetch(config.api+`/ventas/tb_buscarProducto?page=${number}&bprecio=${this.state.estadoQuery}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n          this.setState({productos_tb: data},()=>{\r\n            console.log(this.state.productos_tb)\r\n            this.agregarBotones();\r\n          });\r\n\r\n    })\r\n\r\n  }\r\n\r\nfetchQuery(query,name){\r\n    fetch(\r\n        config.api+`/ventas/tb_buscarProducto?${name}=${query}`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({productos_tb: data,estadoQuery: query}, () => {\r\n            this.agregarBotones();\r\n            console.log(\"obtenido?\");\r\n        });\r\n      })\r\n}\r\n\r\nhandleChangeBuscador (e){\r\n\r\n  const {name , value} = e.target;\r\n  console.log(value);\r\n  this.fetchQuery(value,name);\r\n  console.log(name);\r\n  console.log(\"ULTIMO ARRAY POSCION\"+this.state.cantidadProductosDetalle)\r\n}\r\n\r\ngetCambioObservacion (e){\r\n\r\n    const {name , value} = e.target;\r\n    this.setState({\r\n        observacionVenta : value\r\n    })\r\n}\r\n\r\n// SELECCIONAR UN PRODUCTO DE UNA TABLA\r\nseleccionarProductoTb(codigo){\r\n\r\n    this.buscarCodigoProducto(codigo, this.state.cantidadProductosDetalle-1)\r\n    this.modalBuscarProducto()\r\n}\r\n\r\ncambiarCodigo(e, posicion){\r\n    const {name , value} = e.target;\r\n\r\n    this.state.productosDetalleList[posicion]['codigoProducto']    =    value;\r\n    this.setState({\r\n        productosDetalleList : this.state.productosDetalleList\r\n    })\r\n}\r\n\r\ncambiarTipoDocumento(e){\r\n    const {name , value} = e.target;\r\n\r\n    this.setState({\r\n        tipoDocumentoCliente : value\r\n    })\r\n    if(value == 0){\r\n        this.setState({\r\n            numeroDocumentoCliente  : 20000001,\r\n            nombreCliente           : \"NO IDENTIFICADO\"\r\n        })\r\n    }\r\n    console.log(this.state.tipoDocumentoCliente)\r\n}\r\n\r\ncambiarTipoPago(e){\r\n    const {name , value} = e.target;\r\n\r\n    this.setState({\r\n        tipoMoneda : value\r\n    })\r\n    \r\n}\r\n\r\ngetCambioNumeroDocumento(e){\r\n    const {name , value} = e.target;\r\n    \r\n    this.setState({\r\n        numeroDocumentoCliente  : value\r\n    })\r\n\r\n    if(this.state.tipoDocumentoCliente == 1 && value.length == 8){\r\n        this.fetchDNIRUC(\"dni\", value);\r\n    }else if(this.state.tipoDocumentoCliente == 6 && value.length == 11){\r\n        this.fetchDNIRUC(\"ruc\", value);\r\n\r\n    }else{\r\n        this.setState({\r\n            nombreCliente   : \"NO IDENTIFICADO\",\r\n            numeroVentasRealizadas  : 0,\r\n            totalVentasRealizadas   : 0,\r\n            \r\n        })\r\n        \r\n    }\r\n}\r\n\r\nfetchDNIRUC(tipoDocumento, value){\r\n    let url = config.api+`/consult/`+tipoDocumento+`/${value}`;\r\n    console.log(url)\r\n    fetch(url,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token': csrf_token,\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        this.setState(\r\n            {\r\n                DNIRUCdatos: data['persona'],\r\n            },\r\n            () => {\r\n                console.log(url);\r\n                console.log(this.state.numeroDocumentoCliente);\r\n                console.log(\"Datos:\");\r\n                console.log(data);\r\n                if(data['response'] == true){\r\n                    this.setState({\r\n                        numeroVentasRealizadas  : data['numeroVentasRealizadas'],\r\n                        totalVentasRealizadas   : data['totalVentasRealizadas'],\r\n                    })\r\n                    this.activarToast(\"DOCUMENTO CORRECTO\", \"rgba(76,208,76,0.7)\");\r\n                    console.log(this.state.DNIRUCdatos);\r\n                    this.datosDNIRUC(tipoDocumento);\r\n\r\n                }else{\r\n                    this.activarToast(\"DOCUMENTO NO ENCONTRADO\", \"rgba(205,55,55,0.7)\");\r\n                }\r\n                \r\n            }\r\n        );\r\n        \r\n    })\r\n}\r\n\r\ndatosDNIRUC(tipoDocumento){\r\n    if(tipoDocumento == \"dni\"){\r\n        this.setState({\r\n            nombreCliente   : this.state.DNIRUCdatos.nombres+\" \"+this.state.DNIRUCdatos.apellidoPaterno+\" \"+this.state.DNIRUCdatos.apellidoMaterno,\r\n        },\r\n        console.log(this.state.DNIRUCdatos))\r\n    }else{\r\n        this.setState({\r\n            nombreCliente   : this.state.DNIRUCdatos.razonSocial,\r\n        },\r\n        console.log(this.state.DNIRUCdatos))\r\n    }\r\n}\r\n\r\ngetCambioNombreCliente(e){\r\n\r\n    const {name , value} = e.target;\r\n    this.setState({\r\n        nombreCliente   : value\r\n    })\r\n\r\n}\r\n\r\nactivarToast(message, color) {\r\n    this.setState({\r\n        mensajeToast : message,\r\n        colorToast   : color,\r\n        estadoToast  : true\r\n    });\r\n}\r\n\r\nactivarConfirmacion(titulo, descripcion, btn_aceptar){\r\n    confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <h1>{titulo}</h1>\r\n                    <p>{descripcion}</p>\r\n                    <div className=\"form-group boton\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                            <button type=\"button\" onClick={btn_aceptar}\r\n                                className=\"btn waves-effect waves-light btn-rounded btn-primary btn-lg\">\r\n                                    Aceptar\r\n                            </button>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <button type=\"button\" onClick={onClose}\r\n                                    className=\"btn waves-effect waves-light btn-rounded btn-danger btn-lg\">\r\n                                        Cancelar\r\n                                </button>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n}\r\n\r\ncargando(titulo, descripcion, btn_aceptar){\r\n    confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <h1>{titulo}</h1>\r\n                    <p>{descripcion}</p>\r\n                    <div className=\"form-group boton\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                            <button type=\"button\" onClick={onClose}\r\n                                className=\"btn waves-effect waves-light btn-rounded btn-primary btn-lg\">\r\n                                    Aceptar\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n}\r\n\r\nagregarProducto(posicion){\r\n    this.state.cantidadProductosDetalle == 0\r\n    ? this.agregarProductoDetalle()\r\n    : confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <h1>Agregar producto temporal</h1>\r\n                    <p>Los productos temporales son agregados en el caso que no esten en el almacen</p>\r\n                    <hr></hr>\r\n                    <div className=\"row\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <label className=\"control-label col-form-label\">Codigo del producto:</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control is-valid\" \r\n                                        autoFocus\r\n                                        onChange={e => this.cambiarValorFormTemporales(e, 0)}\r\n                                        // value={this.state.codigoProductoTemporal}\r\n\r\n                                        />\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"col-sm-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"control-label col-form-label\">Producto:</label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            onChange={e => this.cambiarValorFormTemporales(e, 1)}\r\n                                            // value={this.state.nombreProductoTemporal}\r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"control-label col-form-label\">Precio: </label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            onChange={e => this.cambiarValorFormTemporales(e, 2)}\r\n                                            // value={this.state.precioProductoTemporal}\r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-lg-12 col-md-12\">\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={() => {\r\n                                    this.fetchAgregarProductoTemporal(posicion);\r\n                                    onClose();\r\n                                }}\r\n                                // onClick={()=>this.fetchAgregarProductoTemporal();  onClose();}\r\n                                className=\"btn btn-block btn-lg btn-primary\">Agregar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n}\r\n\r\ncambiarValorFormTemporales(e, datoTemporal){\r\n    const {name , value} = e.target;\r\n    switch(datoTemporal){\r\n        case 0:\r\n            this.state.codigoProductoTemporal  = value;\r\n            this.setState({\r\n                codigoProductoTemporal : this.state.codigoProductoTemporal,\r\n            })\r\n            break;\r\n        case 1:\r\n            this.state.nombreProductoTemporal = value;\r\n            this.setState({\r\n                nombreProductoTemporal  : this.state.nombreProductoTemporal,\r\n            })\r\n            break;\r\n        case 2:\r\n            this.state.precioProductoTemporal = value;\r\n            this.setState({\r\n                precioProductoTemporal  : this.state.precioProductoTemporal\r\n            })\r\n            break;\r\n\r\n    }\r\n    console.log(value)\r\n    console.log(this.state.codigoProductoTemporal)\r\n    console.log(this.state.nombreProductoTemporal)\r\n    console.log(this.state.precioProductoTemporal)\r\n\r\n\r\n}\r\n\r\nfetchAgregarProductoTemporal(posicion){\r\n    // LA FUNCION AGREGA UN PRODUCTO TEMPORAL\r\n    fetch(config.api+`/ventas/crear/productoTemporal`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token'        : csrf_token,\r\n                'codigoProductoNuevo'   : this.state.codigoProductoTemporal,\r\n                'nombreProductoNuevo'   : this.state.nombreProductoTemporal,\r\n                'precioVentaProducto'   : this.state.precioProductoTemporal,\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log(data);\r\n        console.log(data['response'])\r\n        if(data['response'] == true){\r\n            \r\n            this.activarToast(\"Producto temporal agregado satisfactoriamente\", \"rgba(76,208,76,0.7)\");\r\n            this.state.precioProductoTemporal = '';\r\n            this.state.nombreProductoTemporal = '';\r\n            this.state.codigoProductoTemporal = '';\r\n            this.setState({\r\n                codigoProductoTemporal : this.state.codigoProductoTemporal,\r\n                nombreProductoTemporal  : this.state.nombreProductoTemporal,\r\n                precioProductoTemporal  : this.state.precioProductoTemporal,\r\n            })\r\n\r\n            var producto = data['producto'];\r\n\r\n            this.state.productosDetalleList[posicion]['idProducto']        = producto['id'];\r\n            this.state.productosDetalleList[posicion]['codigoProducto']    = producto['codigo'];\r\n            this.state.productosDetalleList[posicion]['nombreProducto']    = producto['nombre'];\r\n            this.state.productosDetalleList[posicion]['stockProducto']     = producto['cantidad'];\r\n            this.state.productosDetalleList[posicion]['precioProducto']    = producto['precio'];\r\n            this.state.productosDetalleList[posicion]['cantidadOferta']    = 0;\r\n            this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = 0;\r\n            this.state.productosDetalleList[posicion]['descuentoAplicado'] = 0;\r\n\r\n            \r\n            this.calcularSubTotalTotalDetalle(posicion, 1, producto['precio']);\r\n            this.agregarProductoDetalle();\r\n        }else{\r\n            this.activarToast(\"Error al momento de agregar el producto temporal\", \"rgba(205,55,55,0.7)\");\r\n        }\r\n        \r\n    })\r\n}\r\n\r\nagregarProductoDetalle(){\r\n    this.setState({\r\n        cantidadProductosDetalle    : this.state.cantidadProductosDetalle+1,\r\n        numeroProductoDetalle       : this.state.numeroProductoDetalle+1\r\n    },()=>{ \r\n        // if(this.state.cantidadProductosDetalle > 1){ //CONDICION PARA QUE NO SE EJECUTE LA PRIMERA VEZ QUE SE AGREGA UN DETALLE\r\n            this.setState({\r\n                productosDetalleList    : [\r\n                    ...this.state.productosDetalleList, \r\n                    {\r\n                        idLista             : this.state.numeroProductoDetalle, \r\n                        idProducto          : 0,\r\n                        codigoProducto      : '', \r\n                        nombreProducto      : '', \r\n                        cantidadProducto    : 1,\r\n                        stockProducto       : 0,\r\n                        precioProducto      : 0,\r\n                        cantidadOferta      : 0,\r\n                        nuevoPrecioOferta   : 0,\r\n                        subTotalProducto    : 0,\r\n                        totalProducto       : 0,\r\n                        totalDescuento      : 0,\r\n                        descuentoAplicado   : 0, //0 NO SE APLICA EL DESCUENTO, 1 SE APLICA EL DESCUENTO\r\n                    } \r\n                ]\r\n            })\r\n        // }\r\n        this.setState({\r\n            arrayProductosDetalle   : [...this.state.arrayProductosDetalle, this.state.numeroProductoDetalle],\r\n        })\r\n    })\r\n}\r\n\r\nasync eliminarProductoDetalle(numero){\r\n   console.log(numero);\r\n   //miomio\r\n\r\n   await this.setState({\r\n        cantidadProductosDetalle    : this.state.cantidadProductosDetalle-1\r\n   })\r\n\r\n   var array = [...this.state.arrayProductosDetalle];\r\n   var index = array.indexOf(numero);\r\n\r\n   if (index > -1) {\r\n        array.splice(index,1);\r\n        console.log(array);    \r\n        await this.setState({\r\n            arrayProductosDetalle: array\r\n        })\r\n   }\r\n\r\n   var arrayProductosDetalleList = [];\r\n\r\n   await this.state.productosDetalleList.map((data, posicion)=>{\r\n        if(data.idLista != numero){\r\n            arrayProductosDetalleList    = [\r\n                ...arrayProductosDetalleList, \r\n                {\r\n                    idLista             : data.idLista, \r\n                    idProducto          : data.idProducto,\r\n                    codigoProducto      : data.codigoProducto,\r\n                    nombreProducto      : data.nombreProducto,\r\n                    cantidadProducto    : data.cantidadProducto,\r\n                    stockProducto       : data.stockProducto,\r\n                    precioProducto      : data.precioProducto,\r\n                    cantidadOferta      : data.cantidadOferta,\r\n                    nuevoPrecioOferta   : data.nuevoPrecioOferta,\r\n                    subTotalProducto    : data.subTotalProducto,\r\n                    totalProducto       : data.totalProducto,\r\n                    totalDescuento      : data.totalDescuento,\r\n                    descuentoAplicado   : data.descuentoAplicado\r\n                } \r\n            ]\r\n        }\r\n    })\r\n\r\n    await this.setState({\r\n        productosDetalleList: arrayProductosDetalleList\r\n    })\r\n\r\n    this.calcularDatosTotalesVenta();\r\n\r\n}\r\n\r\nbuscarCodigoProducto(codigo, posicion){ \r\n    fetch(config.api+`/producto/buscar`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token'        : csrf_token,\r\n                codigoProducto  : codigo\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log(\"datos:\")\r\n        console.log(data)\r\n        if(data['response'] == true){\r\n           \r\n            this.activarToast(\"Producto agregado al detalle\", \"rgba(76,208,76,0.7)\");\r\n            \r\n            var producto    = data['producto'];\r\n            var descuento   = data['descuento'];\r\n\r\n            this.state.productosDetalleList[posicion]['idProducto']        = producto['id'];\r\n            this.state.productosDetalleList[posicion]['codigoProducto']    = producto['codigo'];\r\n            this.state.productosDetalleList[posicion]['nombreProducto']    = producto['nombre'];\r\n            this.state.productosDetalleList[posicion]['stockProducto']     = producto['cantidad'];\r\n            this.state.productosDetalleList[posicion]['precioProducto']    = producto['precio'];\r\n\r\n            if(descuento != 0){\r\n                this.state.productosDetalleList[posicion]['cantidadOferta']    = descuento['cantidad']\r\n                this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = descuento['nuevoPrecio']\r\n\r\n                this.state.productosDetalleList[posicion]['variosDescuentos'] = data['variosDescuentos']\r\n            }else{\r\n                this.state.productosDetalleList[posicion]['cantidadOferta']    = 0\r\n                this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = 0\r\n            }\r\n            this.state.productosDetalleList[posicion]['totalDescuento']    = 0\r\n            this.state.productosDetalleList[posicion]['descuentoAplicado']    = 0\r\n            \r\n            this.calcularSubTotalTotalDetalle(posicion, 1, producto['precio']);\r\n            this.agregarProductoDetalle();\r\n        }else{\r\n            this.activarToast(\"Producto no encontrado\", \"rgba(205,55,55,0.7)\");\r\n            this.agregarProducto(posicion);\r\n        }\r\n        \r\n    })\r\n}\r\n\r\nverArray(){\r\n    // console.log('cambiar')\r\n    // console.log(this.state.shop[1]['id'])\r\n    // this.state.shop[1]['id'] = 11\r\n    // this.setState({\r\n    //     shop : this.state.shop\r\n    // })\r\n    // console.log('terminado')\r\n    console.log(this.state.productosDetalleList)\r\n}\r\n\r\ngetCambioDescuentoVenta(e){\r\n    const {name , value} = e.target;\r\n    this.setState({\r\n        descuentoVentaRealizado  : value,\r\n    })\r\n\r\n    if (e.key === 'Enter') {\r\n        this.setState({\r\n\r\n            descuentoVenta : parseFloat(this.state.descuentoVenta) - parseFloat(this.state.descuentoVentaRealizadoGuardado),\r\n            descuentoVentaRealizadoGuardado : value,\r\n            descuentoVenta : parseFloat(this.state.descuentoVenta) + parseFloat(this.state.descuentoVentaRealizadoGuardado),\r\n        })\r\n        console.log(value);\r\n    }\r\n        \r\n}\r\n\r\ncalcularSubTotalTotalDetalle(posicion, cantidad, precio){\r\n    // console.log('cambioCalcular');\r\n    // console.log(posicion)\r\n    // console.log(cantidad)\r\n    // console.log(precio)\r\n\r\n    let precioCalcular;\r\n    let descuento;\r\n\r\n    if(cantidad >= this.state.productosDetalleList[posicion]['cantidadOferta'] && this.state.productosDetalleList[posicion]['cantidadOferta'] != 0  ){\r\n        // console.log('descuentos:')\r\n        // console.log(this.state.productosDetalleList[posicion]['variosDescuentos'])\r\n        // console.log(this.state.productosDetalleList[posicion]['variosDescuentos'].length)\r\n        if(this.state.productosDetalleList[posicion]['variosDescuentos'].length > 1){\r\n\r\n            let nuevaCantidadOferta = 0\r\n\r\n            for(let i = 0; i < this.state.productosDetalleList[posicion]['variosDescuentos'].length; i++){\r\n                if(cantidad == this.state.productosDetalleList[posicion]['variosDescuentos'][i]['cantidad']){\r\n                    // console.log('misma cantidad')\r\n                    nuevaCantidadOferta  = this.state.productosDetalleList[posicion]['variosDescuentos'][i]['cantidad'];\r\n                    precioCalcular  = this.state.productosDetalleList[posicion]['variosDescuentos'][i]['nuevoPrecio'];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.state.productosDetalleList[posicion]['cantidadOferta']    = nuevaCantidadOferta\r\n            this.state.productosDetalleList[posicion]['nuevoPrecioOferta'] = precioCalcular\r\n\r\n            this.setState({\r\n                productosDetalleList : this.state.productosDetalleList\r\n            })\r\n\r\n            this.state.productosDetalleList[posicion]['descuentoAplicado'] = 1;\r\n            descuento       = ((precio - precioCalcular)*cantidad).toFixed(2);\r\n\r\n\r\n        }else{\r\n            this.state.productosDetalleList[posicion]['descuentoAplicado'] = 1;\r\n            precioCalcular  = this.state.productosDetalleList[posicion]['nuevoPrecioOferta'];\r\n            descuento       = ((precio - precioCalcular)*cantidad).toFixed(2);\r\n        }\r\n\r\n\r\n\r\n    }else{\r\n        this.state.productosDetalleList[posicion]['descuentoAplicado'] = 0;\r\n        precioCalcular  = precio;\r\n        descuento       = 0\r\n    }\r\n\r\n    let total       = precioCalcular * cantidad;\r\n    let subTotal    = total / 1.18;\r\n    let impuestos   = total - subTotal;\r\n    \r\n    this.state.productosDetalleList[posicion]['cantidadProducto']  = cantidad;\r\n    this.state.productosDetalleList[posicion]['subTotalProducto']  = subTotal.toFixed(2);\r\n    this.state.productosDetalleList[posicion]['totalProducto']     = total.toFixed(2);\r\n    this.state.productosDetalleList[posicion]['totalDescuento']    = descuento;\r\n    \r\n    \r\n    \r\n\r\n    var array = [...this.state.productosDetalleList];\r\n    this.setState({\r\n        productosDetalleList: array\r\n    })\r\n    this.calcularDatosTotalesVenta();\r\n}\r\n\r\ncalcularDatosTotalesVenta(){\r\n    \r\n    this.state.descuentoVenta   = parseFloat(0.00)\r\n    this.state.igvVenta         = parseFloat(0.00)\r\n    this.state.subTotalVenta    = parseFloat(0.00)\r\n    this.state.totalVenta       = parseFloat(0.00)\r\n    \r\n    this.setState({\r\n        descuentoVenta  : this.state.descuentoVenta ,\r\n        igvVenta        : this.state.igvVenta ,\r\n        subTotalVenta   : this.state.subTotalVenta ,\r\n        totalVenta      : this.state.totalVenta\r\n    })\r\n\r\n    this.state.productosDetalleList.map((data, posicion)=>{\r\n        this.state.descuentoVenta   = parseFloat(this.state.descuentoVenta) + parseFloat(data.totalDescuento)\r\n        this.state.igvVenta         = (parseFloat(data.totalProducto) - parseFloat(data.subTotalProducto)) + parseFloat(this.state.igvVenta)\r\n        this.state.subTotalVenta    = parseFloat(this.state.subTotalVenta) + parseFloat(data.subTotalProducto)\r\n        this.state.totalVenta       = parseFloat(this.state.totalVenta) + parseFloat(data.totalProducto);\r\n    })\r\n\r\n    this.setState({\r\n        descuentoVenta  : this.state.descuentoVenta.toFixed(2),\r\n        igvVenta        : this.state.igvVenta.toFixed(2) ,\r\n        subTotalVenta   : this.state.subTotalVenta.toFixed(2) ,\r\n        totalVenta      : this.state.totalVenta.toFixed(2)\r\n    })\r\n\r\n    console.log('TOTAL DE LA VENTA:'+this.state.totalVenta)\r\n}\r\n\r\ngenerarVentaInterna(){\r\n    confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className=\"page-content container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className='card'>\r\n                                <div className=\"card-body\">\r\n                                    <h1>¿Seguro que desea finalizar la venta?</h1>\r\n                                    <p>Puedes imprimir un comprobante de pago, o solo guardarlo en el sistema.</p>\r\n                                    <div className=\"form-group boton\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-4 col-md-4\">\r\n                                                <button \r\n                                                    type=\"button\" \r\n                                                    className=\"btn waves-effect waves-light btn-block btn-success\"\r\n                                                    onClick={() => {\r\n                                                        this.fetchAgregarVenta(1);\r\n                                                        onClose();\r\n                                                    }}\r\n                                                >\r\n                                                        \r\n                                                        Imprimir\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"col-lg-4 col-md-4\">\r\n                                                <button \r\n                                                    type=\"button\"\r\n                                                    onClick={() => {\r\n                                                        this.fetchAgregarVenta(0);\r\n                                                        onClose();\r\n                                                    }}\r\n                                                    className=\"btn waves-effect waves-light btn-block btn-info\">\r\n                                                        Guardar\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"col-lg-4 col-md-4\">\r\n                                                <button \r\n                                                    type=\"button\" \r\n                                                    className=\"btn waves-effect waves-light btn-block btn-danger\">\r\n                                                        Cancelar\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n}\r\n\r\nfetchAgregarVenta(imprimir){ //SI IMPRIMIR ES 1 IMPRIMIR, SI NO, NO IMPRIMIR\r\n    // console.log('DATOS ENVIADOS : --- ');\r\n    // console.log(this.state.tipoDocumentoCliente);\r\n    // console.log(this.state.numeroDocumentoCliente);\r\n    // console.log(this.state.nombreCliente);\r\n    // console.log(this.props.tipoComprobante);\r\n    // console.log(this.props.sucursalId);\r\n    // console.log(this.state.tipoMoneda);\r\n    // console.log(this.props.numeroVenta);\r\n    // console.log(this.state.descuentoVenta);\r\n    // console.log(this.state.igvVenta);\r\n    // console.log(this.state.subTotalVenta);\r\n    // console.log(this.state.totalVenta);\r\n    // console.log(this.state.observacionVenta);\r\n    // console.log(this.state.productosDetalleList);\r\n    // console.log('TOTAL DE DATOS ENVIADOS --- ');\r\n    // LA FUNCION AGREGA UN PRODUCTO TEMPORAL\r\n    cogoToast.loading(\r\n        <div>\r\n            <h4>GENERANDO VENTA INTERNA</h4>\r\n        </div>, \r\n        {\r\n            position: 'top-right'\r\n        }\r\n        \r\n    )\r\n    .then(() => {\r\n        fetch(config.api+`/venta/guardarVentaInterna`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token'            : csrf_token,\r\n                    'tipoDocumento'     : this.state.tipoDocumentoCliente,\r\n                    'numeroDocumento'   : this.state.numeroDocumentoCliente,\r\n                    'nombreCliente'     : this.state.nombreCliente,\r\n                    'tipoComprobante'   : this.props.tipoComprobante,\r\n                    'sucursalId'        : this.props.sucursalId,\r\n                    'tipoMoneda'        : this.state.tipoMoneda,\r\n                    'numeroVenta'       : this.props.numeroVenta,\r\n                    'dateFactura'       : '2019-11-11',\r\n                    'descuentoVenta'    : this.state.descuentoVenta,\r\n                    'igvVenta'          : this.state.igvVenta,\r\n                    'subTotalVenta'     : this.state.subTotalVenta,\r\n                    'totalVenta'        : this.state.totalVenta,\r\n                    'observacionVenta'  : this.state.observacionVenta,\r\n                    'detallesVenta'     : this.state.productosDetalleList,\r\n\r\n\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            console.log(data['response'])\r\n            if(data['response'] == true){\r\n\r\n                this.props.fetchVentaDataTabla(1, '','');\r\n                this.props.addNuevaVenta();\r\n                this.props.fechtDataNuevaVenta();\r\n\r\n                cogoToast.success(\r\n                    <div>\r\n                        <h4>VENTA REALIZADA CORRECTAMENTE</h4>\r\n                    </div>, \r\n                    {\r\n                    position: 'top-right'\r\n                    }\r\n                );\r\n\r\n                if(imprimir == 1){\r\n                    // let url = `http://localhost/api/imprimir/venta/`+data['idVenta'];\r\n                    let url = config.apiTicket+`/api/imprimir/venta/`+data['idVenta'];\r\n                    cogoToast.loading(\r\n                        <div>\r\n                            <h4>IMPRIMIENDO VENTA</h4>\r\n                        </div>, \r\n                        {\r\n                            position: 'top-right'\r\n                        }\r\n                        \r\n                    )\r\n                    .then(() => {\r\n                        fetch(\r\n                            url,\r\n                            {\r\n                                method: 'GET',\r\n                                // headers: {\r\n                                //     'Accept' : 'application/json',\r\n                                //     'Content-Type': 'application/json',\r\n                                //     // 'usuid'         : localStorage.getItem('usuid')\r\n                                // }\r\n                            }\r\n                        )\r\n                        .then(\r\n                            res => res.json()\r\n                        )\r\n                        .then(\r\n                            data => {\r\n                                if(data['respuesta']){\r\n                                    cogoToast.success(\r\n                                        <div>\r\n                                            <h4>COPIA DE VENTA FINALIZADA</h4>\r\n                                        </div>, \r\n                                        {\r\n                                        position: 'top-right'\r\n                                        }\r\n                                    );\r\n                                }else{\r\n                                    cogoToast.error(\r\n                                        <div>\r\n                                            <h4>NO SE PUDO CONECTAR CON LA IMPRESORA</h4>\r\n                                        </div>, \r\n                                        {\r\n                                        position: 'top-right'\r\n                                        }\r\n                                    );\r\n                                }\r\n                            }\r\n                        )\r\n                    });\r\n                }\r\n                \r\n\r\n            }else{\r\n                cogoToast.error(\r\n                    <div>\r\n                        <h4>HUBO UN PROBLEMA AL MOMENTO DE REALIZAR LA VENTA</h4>\r\n                    </div>, \r\n                    {\r\n                    position: 'top-right'\r\n                    }\r\n                );\r\n            }\r\n            \r\n        })\r\n    });\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nrender(){\r\n    return(\r\n        \r\n<div className=\"col-lg-12 grid-margin stretch-card\">\r\n    <div className=\"card card-default\">\r\n        <div className=\"card-body\"> \r\n            <h6 className=\"card-title\">VENTA INTERNA:</h6>\r\n            <form method=\"post\" role=\"form\" data-toggle=\"validator\" id=\"frm_emitirBoleta\">\r\n                <div className=\"form-group\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Metodo de pago </label>\r\n                            <div className=\"input-group\">\r\n                                <select \r\n                                    className=\"form-control\" \r\n                                    name=\"tipoPago\" \r\n                                    id=\"tipoPago\" \r\n                                    style={{width: '100%'}} \r\n                                    onChange={this.cambiarTipoPago}>\r\n                                    {/* ID DEL TIPO DE MONEDA */}\r\n                                    <option value=\"1\" > EFECTIVO   </option>\r\n                                    <option value=\"3\" > TARJETA   </option>\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h6 className=\"card-title\">CLIENTE:</h6>\r\n                <div className=\"form-group\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <label>  <i className=\"mdi mdi-account-card-details\"></i>   Tipo de Documento: *</label>\r\n                            <div className=\"input-group\">\r\n                                <select \r\n                                    className=\"form-control\" \r\n                                    name=\"tipoDocumento\" \r\n                                    id=\"tipoDocumento\" \r\n                                    style={{width: '100%'}} \r\n                                    onChange={this.cambiarTipoDocumento}>\r\n                                    {/* CODIGO DEL TIPO DE COMPROBANTE EN VEZ DE ID */}\r\n                                    <option value=\"1\" > DNI   </option>\r\n                                    <option value=\"6\" > RUC   </option>\r\n                                    <option value=\"0\" > OTROS </option>\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.tipoDocumentoCliente != 0\r\n                            ?<div className=\"col-9\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <label>N° de Documento: *</label>\r\n                                        <input type=\"number\" \r\n                                            className   = \"form-control\" \r\n                                            name        = \"numeroDocumento\" \r\n                                            id          = \"numeroDocumento\" \r\n                                            onChange    = {this.getCambioNumeroDocumento}\r\n                                            value       = {this.state.numeroDocumentoCliente}\r\n                                            autoFocus\r\n\r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"col-5\">\r\n                                        <label>Nombre del cliente: *</label>\r\n                                        <input \r\n                                            type        = \"text\" \r\n                                            className   = \"form-control\" \r\n                                            name        = \"nombreCliente\" \r\n                                            id          = \"nombreCliente\"\r\n                                            value       = {this.state.nombreCliente}\r\n                                            onChange    = {this.getCambioNombreCliente}\r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <label>N° Ventas </label><br/>\r\n                                        <span>{this.state.numeroVentasRealizadas}</span>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <label>Total de ventas </label><br/>\r\n                                        <span>S/{this.state.totalVentasRealizadas}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :null\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                <h6 className=\"card-title\">DETALLE DOCUMENTO:</h6>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <table className=\"table table-bordered\" id=\"tbl_products\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th width=\"20%;\">Codigo</th>\r\n                                    <th width=\"25%;\">Producto</th>\r\n                                    <th  width=\"10%;\">Cantidad</th>\r\n                                    <th width=\"2%;\">Disponible</th>\r\n                                    <th width=\"7%;\">Precio</th>\r\n                                    <th width=\"7%;\">Descuento</th>\r\n                                    <th>SubTotal</th>\r\n                                    <th>Total</th>\r\n                                    <th>Opciones</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/* {\r\n                                    this.state.arrayProductosDetalle\r\n                                    ?this.state.arrayProductosDetalle.map((data)=>{\r\n                                       return(\r\n                                        <ProductoAddDetalleComponent key={data} number={data} eliminarProductoDetalle={this.eliminarProductoDetalle} buscarCodigoProducto={this.buscarCodigoProducto} />\r\n                                       ) \r\n                                    })\r\n                                    :null \r\n                                } */}\r\n                                {\r\n                                    \r\n                                    this.state.productosDetalleList\r\n                                    ?this.state.productosDetalleList.map((data, posicion)=>{\r\n                                       return(\r\n                                            <ProductoAddDetalleComponent \r\n                                                key                             ={data.idLista} \r\n                                                numero                          ={data.idLista}\r\n                                                posicion                        ={posicion}\r\n                                                codigo                          ={data.codigoProducto}\r\n                                                producto                        ={data.nombreProducto}\r\n                                                stock                           ={data.stockProducto}\r\n                                                precio                          ={data.precioProducto}\r\n                                                descuento                       ={data.totalDescuento}\r\n                                                subTotal                        ={data.subTotalProducto}\r\n                                                total                           ={data.totalProducto}\r\n                                                descuentoAplicado               ={data.descuentoAplicado}\r\n                                                variosDescuentos                ={data.variosDescuentos}\r\n                                                nuevoPrecioOferta               ={data.nuevoPrecioOferta}\r\n                                                calcularSubTotalTotalDetalle    ={this.calcularSubTotalTotalDetalle}\r\n                                                eliminarProductoDetalle         ={this.eliminarProductoDetalle} \r\n                                                buscarCodigoProducto            ={this.buscarCodigoProducto}\r\n                                                cambiarCodigo                   ={this.cambiarCodigo}\r\n                                            />\r\n                                       ) \r\n                                    })\r\n                                    :null\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-12\">\r\n                        <br/>\r\n                        {\r\n                            this.state.cantidadProductosDetalle == 0\r\n                            ?<button type=\"button\" \r\n                                className=\"btn btn-success\" id=\"btnAddProduct\" onClick={()=>this.agregarProducto()} >\r\n                                <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO AL DETALLE\r\n                            </button>\r\n\r\n                            :<button type=\"button\" \r\n                                className=\"btn btn-warning\" id=\"btnAddProduct\" onClick={()=>this.agregarProducto(this.state.cantidadProductosDetalle - 1)} >\r\n                                <i className=\"mdi mdi-plus-circle\"></i>   AGREGAR PRODUCTO TEMPORAL\r\n                            </button>\r\n                        }\r\n                        {/* <button type=\"button\" \r\n                            className=\"btn btn-warning\" onClick={()=>this.verArray()} >\r\n                            <i className=\"mdi mdi-plus-circle\"></i>   Ver array\r\n                        </button> */}\r\n                        {\r\n                            this.state.cantidadProductosDetalle != 0\r\n                            ?<button type=\"button\" \r\n                                className=\"btn btn-warning\" onClick={() => this.modalBuscarProducto()} >\r\n                                <i className=\"mdi mdi-plus-circle\"></i>   Buscar producto\r\n                            </button>\r\n                            :null\r\n                        }\r\n                        <br/>\r\n                    </div>\r\n                </div><br/>\r\n                <div className=\"col-md-12\" style={{marginTop: '15px'}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-7\">\r\n                            <div className=\"content-group\">\r\n                                <h6>Observación:</h6>\r\n                                <textarea \r\n                                    className=\"form-control\" \r\n                                    name=\"observacionVenta\" \r\n                                    id=\"exampleTextarea1\" \r\n                                    rows=\"8\"\r\n                                    onChange={this.getCambioObservacion}\r\n                                    >{this.state.observacionVenta}</textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-5\">\r\n                            <div className=\"content-group\">\r\n                                <h6>Resumen:</h6>\r\n                                <div className=\"table-responsive no-border\">\r\n                                    <table className=\"table\">\r\n                                        <tbody>\r\n                                            {/* <tr>\r\n                                                <th>Descuento realizado:</th>\r\n                                                <td className=\"text-right\">\r\n                                                    {/* S/. <span id=\"descuentoVentaTexto\">{this.state.descuentoVenta}</span> \r\n                                                    <input \r\n                                                        type        = \"text\" \r\n                                                        name        = \"descuentoVenta\"\r\n                                                        className   = \"form-control\"\r\n                                                        id          = \"descuentoVenta\" \r\n                                                        onChange    = {this.getCambioDescuentoVenta}\r\n                                                        onKeyDown   = {this.getCambioDescuentoVenta}\r\n                                                        value       = {this.state.descuentoVentaRealizado}/>\r\n                                                </td>\r\n                                            </tr> */}\r\n                                            <tr>\r\n                                                <th>Descuento Total:</th>\r\n                                                <td className=\"text-right\">\r\n                                                    S/. <span id=\"descuentoVentaTexto\">{this.state.descuentoVenta}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Subtotal:</th>\r\n                                                <td className=\"text-right\">\r\n                                                    S/. <span id=\"subTotalVentaTexto\">{this.state.subTotalVenta}</span>\r\n                                                    <input type=\"hidden\" name=\"subTotalVenta\" id=\"subTotalVenta\" value=\"0\"/>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>IGV: <span className=\"text-regular\">(18%)</span></th>\r\n                                                <td className=\"text-right\">\r\n                                                    S/. <span id=\"igvVentaTexto\">{this.state.igvVenta}</span>\r\n                                                    <input type=\"hidden\" name=\"igvVenta\" id=\"igvVenta\" value=\"0\"/>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Total:</th>\r\n                                                <td className=\"text-right text-primary\"><h5 className=\"text-semibold\">\r\n                                                    S/. <span id=\"totalVentaTexto\">{this.state.totalVenta}</span></h5>\r\n                                                    <input type=\"hidden\" name=\"totalVenta\" id=\"totalVenta\" value=\"2\"/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group boton\">\r\n                    <div className=\"row\">\r\n                        {/* <div className=\"col-6\">\r\n                            <button type=\"button\" \r\n                                className=\" addexis form-control btn btn-block btn-primary btn-lg\" \r\n                                id=\"emitirBoleta\">\r\n                                EMITIR BOLETA ELECTRÓNICA</button>\r\n                        </div> */}\r\n                        <div className=\"col-12\">\r\n                            <button type=\"button\" \r\n                                className=\" addexis form-control btn btn-block btn-success btn-lg\"\r\n                                onClick={()=>this.generarVentaInterna()}\r\n                                \r\n                                >\r\n                                Generar Venta Interna</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <Modal\r\n        size=\"xl\"\r\n        show={this.state.estadoa}\r\n        onHide={() => this.modalBuscarProducto()}            \r\n    >\r\n    <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Buscar producto especifico\r\n        </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n        <div className=\"card card-default\">\r\n                    <div className=\"card-header cabezera\">\r\n                        <h4> Buscar producto especifico </h4>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        \r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-title\">Buscar</h4>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            <label>Buscar Codigo</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control form-control-lg\" \r\n                                                name=\"bcodigo\" id=\"buscar_tb_codigo\"\r\n                                                onChange={this.handleChangeBuscador}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            <label>Buscar Marca</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control form-control-lg\" \r\n                                                name=\"bmarca\" \r\n                                                id=\"buscar_tb_marca\"\r\n                                                onChange={this.handleChangeBuscador}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            <label>Buscar Tipo</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control form-control-lg\" \r\n                                                name=\"btipo\" \r\n                                                id=\"buscar_tb_tipo\"\r\n                                                onChange={this.handleChangeBuscador}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            <label>Buscar Nombre</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control form-control-lg\" \r\n                                                name=\"bnombre\" \r\n                                                id=\"buscar_tb_nombre\"\r\n                                                onChange={this.handleChangeBuscador}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            <label>Buscar Precio</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control form-control-lg\" \r\n                                                name=\"bprecio\" \r\n                                                id=\"buscar_tb_precio\"\r\n                                                onChange={this.handleChangeBuscador}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        <div className=\"card-body\" id=\"agregarProductoDetalleModalBody\">\r\n                            <table className=\"table table-bordered dataTables_length\" id=\"tb_buscarProducto\" style={{width:'100%'}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Codigo</th>\r\n                                        <th>Marca</th>\r\n                                        <th>Tipo</th>\r\n                                        <th>Disponibles</th>\r\n                                        <th>Nombre</th>\r\n                                        <th>Precio</th>\r\n                                        <th>Seleccionar</th>\r\n                                    </tr>\r\n                                    {\r\n                                        this.state.productos_tb.data \r\n                                        ?this.state.productos_tb.data.map((task, posicion) =>{\r\n                                            return (\r\n                                                <tr key={task.idVentas}>\r\n                                                    <td>{task.codigoProducto}</td>\r\n                                                    <td>{task.marcaProducto}</td>\r\n                                                    <td>{task.tipoProducto}</td>\r\n                                                    <td>{task.disponiblesProducto}</td>\r\n                                                    <td>{task.nombreProducto}</td>\r\n                                                    <td>{task.precioProducto}</td>\r\n                                                    <td>\r\n                                                    <button \r\n                                                        className=\"btn btn-sm btn-primary ver\" \r\n                                                        type=\"button\" \r\n                                                        onClick={()=>this.seleccionarProductoTb(task.codigoProducto)}\r\n                                                       >\r\n                                                        <i className=\"mdi mdi-send\"></i></button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })   \r\n                                        : null\r\n                                      }\r\n                                </thead>\r\n                            </table>  \r\n                            <div className=\"container\">\r\n                                <div className=\"row justify-content-end\">\r\n                                    <div className=\"col-4\">\r\n                                        {\r\n                                            this.state.estadoBoton\r\n                                            ?this.state.estadoBoton.map(task =>{\r\n                                                return (\r\n                                                    <button key={task}\r\n                                                        className=\"btn btn-sm btn-secondary editar\" \r\n                                                        type=\"button\" \r\n                                                        onClick={()=>this.cambiarPagina(task)}>{task}</button>\r\n\r\n                                                );\r\n                                            })   \r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n    </Modal.Body>\r\n    </Modal>\r\n    \r\n    <Toast\r\n        style={{\r\n            position        : 'fixed',\r\n            top             : 20,\r\n            right           : 20,\r\n            zIndex          :1060,\r\n            backgroundColor : this.state.colorToast,\r\n            color           :'white'\r\n        }}\r\n        onClose={() => this.setState({\r\n            estadoToast: false\r\n        })}\r\n        show    ={this.state.estadoToast}\r\n        delay   ={2500}\r\n        autohide\r\n        >\r\n        <Toast.Body>\r\n        <h3>{this.state.mensajeToast}</h3>\r\n        </Toast.Body>\r\n    </Toast>\r\n\r\n    \r\n</div>\r\n\r\n)}}\r\n\r\nexport default NuevaVenta","import React from 'react'\r\nimport {Component} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../config'\r\n\r\nclass EliminarVenta extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            txt_motivoCancelar  : '',\r\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\r\n            colorToastSuccess   : 'rgba(76,208,76,0.7)'\r\n\r\n        }\r\n\r\n        this.confirmarEliminarVenta        = this.confirmarEliminarVenta.bind(this);\r\n        this.getCambioMotivoCancelar       = this.getCambioMotivoCancelar.bind(this);\r\n        this.fetchCancelarVenta            = this.fetchCancelarVenta.bind(this);\r\n    }\r\n\r\n    confirmarEliminarVenta(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"page-content container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className='card'>\r\n                                    <div className=\"card-body\">\r\n                                        <h1>Cancelar Venta</h1>\r\n                                        <p>Recuerda que al cancelar una venta, los productos en esta regresan a su respectivo almacen</p>\r\n                                        <div className=\"form-group boton\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12\">\r\n                                                    <label>Motivo de cancelar la venta</label>\r\n                                                    <textarea \r\n                                                        className   = \"form-control\" \r\n                                                        rows        = \"3\" \r\n                                                        placeholder = \"Motivo de cancelar la venta\"\r\n                                                        onChange    = {(e)=>this.getCambioMotivoCancelar(e)}\r\n                                                        name        = \"txt_motivoCancelar\"\r\n                                                    >\r\n                                                    </textarea>\r\n                                                </div>\r\n                                            </div><br></br>\r\n                                            \r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-6\">\r\n                                                    <button \r\n                                                        type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            this.fetchCancelarVenta();\r\n                                                            onClose();\r\n                                                        }}\r\n                                                        className=\"btn waves-effect waves-light btn-block btn-danger\">\r\n                                                            CANCELAR VENTA\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <button \r\n                                                        type=\"button\" \r\n                                                        onClick={() => {\r\n                                                            onClose();\r\n                                                        }}\r\n                                                        className=\"btn waves-effect waves-light btn-block btn-info\">\r\n                                                            SALIR\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    getCambioMotivoCancelar(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    fetchCancelarVenta(){\r\n        let url = config.api+`/ventas/cancelar/venta/interna`;\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>CANCELANDO VENTA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token' : csrf_token,\r\n                        'id'     : this.props.idVenta,\r\n                        'motivo' : this.state.txt_motivoCancelar\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n                    this.setState({\r\n                        txt_motivoCancelar  : '',\r\n                    })\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>VENTA CANCELADA CORRECTAMENTE</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                    this.props.fetchVentaDataTabla(1, '', '');\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>HUBO UN PROBLEMA AL CANCELAR LA VENTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <button \r\n                style       = {{\"margin-right\":\"1em\"}}\r\n                type        = \"button\" \r\n                id          = \"btn_venta\"\r\n                onClick     = {this.confirmarEliminarVenta}\r\n                className   = \"btn btn-danger btn-rounded btn-fw\">\r\n                    <i className=\"mdi mdi-delete\"></i>\r\n            </button>\r\n         ) \r\n    }\r\n}\r\n\r\nexport default EliminarVenta","import React from 'react'\r\nimport {Component} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../config'\r\n\r\nclass ImprimirVenta extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            txt_motivoCancelar  : '',\r\n            colorToastDanger    : 'rgba(205,55,55,0.7)',\r\n            colorToastSuccess   : 'rgba(76,208,76,0.7)'\r\n\r\n        }\r\n        this.fetchImprimirVenta       = this.fetchImprimirVenta.bind(this);\r\n    }\r\n\r\n    fetchImprimirVenta(){\r\n        let url = config.apiTicket+`/api/imprimir/venta/`+this.props.idVenta;\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>IMPRIMIENDO VENTA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'GET',\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>IMPRESIÓN CORRECTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                    this.props.fetchVentaDataTabla(1, '', '');\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>HUBO UN PROBLEMA AL IMPRIMIR LA VENTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <button \r\n                style       = {{marginLeft:'10px', background:'green'}}\r\n                type        = \"button\" \r\n                id          = \"btn_venta\"\r\n                onClick     = {this.fetchImprimirVenta}\r\n                className   = \"btn btn-danger btn-rounded btn-fw\">\r\n                    <i className=\"mdi mdi-printer\"></i>\r\n            </button>\r\n         ) \r\n    }\r\n}\r\n\r\nexport default ImprimirVenta","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Component} from 'react';\r\nimport VentaBoleta from  './ventaBoleta';\r\nimport VentaFactura from './ventaFactura';\r\nimport NuevaVenta from './venta/nuevaVenta';\r\nimport EliminarVenta from './eliminarVenta'\r\nimport config from '../../config'\r\nimport ImprimirVenta from './ImprimirVenta';\r\n\r\nclass Venta extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            venta_tb                : [],\r\n            addComponentFactura     : false,\r\n            addComponentBoleta      : false,\r\n            addComponentNuevaVenta  : false,\r\n            dataFacturaReady        : false,\r\n            dataBoletaReady         : false,\r\n            dataNuevaVentaReady     : false,\r\n            dataFactura             : {},\r\n            dataBoleta              : {},\r\n            dataNuevaVenta          : {},\r\n\r\n            txt_btn_venta           : 'Nueva Venta',\r\n            // DATOS A PASAR A UN COMPROBANTE ( VENTA, BOLETA, FACTURA, ETC.)\r\n            tipoComprobante         : '',\r\n            numeroVenta             : '',\r\n\r\n            // BUSCADOR\r\n            estadoBoton             : [],\r\n            numeroPagina            : 1,\r\n            inp_cliente             : '',\r\n            inp_numeroVenta         : '',\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        this.addFactura           = this.addFactura.bind(this);\r\n        this.addBoleta            = this.addBoleta.bind(this);\r\n        this.addNuevaVenta        = this.addNuevaVenta.bind(this);\r\n        this.fechtDataFactura     = this.fechtDataFactura.bind(this);\r\n        this.fechtDataBoleta      = this.fechtDataBoleta.bind(this);\r\n        this.fechtDataNuevaVenta  = this.fechtDataNuevaVenta.bind(this);\r\n        this.fetchVentaDataTabla  = this.fetchVentaDataTabla.bind(this);\r\n\r\n        this.getCambioNombreCliente = this.getCambioNombreCliente.bind(this);\r\n        this.getCambioNumeroVenta   = this.getCambioNumeroVenta.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n    fechtDataFactura(){\r\n      fetch(\r\n          config.api+'/ventas/factura/serie',\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        }\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n          this.setState({dataFactura: data},()=>{\r\n            console.log(this.state.dataFactura)\r\n            this.setState({dataFacturaReady: true},()=>console.log(this.state.dataFacturaReady))\r\n                });\r\n        })\r\n    }\r\n    \r\n    fechtDataBoleta(){\r\n        fetch(\r\n            config.api+'/ventas/boleta/serie',\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({dataBoleta: data},()=>{\r\n              console.log(this.state.dataBoleta);\r\n              this.setState({dataBoletaReady: true},()=>console.log(this.state.dataBoletaReady))\r\n                  });\r\n          })\r\n    }\r\n\r\n    fechtDataNuevaVenta(){\r\n        fetch(config.api+'/ventas/venta/serie',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token': csrf_token,\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(\"datos primeros:\")\r\n            console.log(data);\r\n            this.setState({\r\n                sucursalId      : data['sucursalId'],\r\n                dataNuevaVenta  : data['tiposcomprobante']\r\n\r\n            },()=>{\r\n                console.log(this.state.dataNuevaVenta);\r\n                this.setState({\r\n                  dataNuevaVentaReady   : true,\r\n                  tipoComprobante       : this.state.dataNuevaVenta['id'],\r\n                  numeroVenta           : this.state.dataNuevaVenta['correlativo']\r\n                })\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.fechtDataFactura();\r\n      this.fechtDataBoleta();\r\n      this.fechtDataNuevaVenta();\r\n      this.fetchVentaDataTabla(1, '', '');\r\n    }\r\n\r\n    addFactura() {\r\n      this.setState({\r\n        addComponentBoleta: false,\r\n        addComponentFactura : !this.state.addComponentFactura\r\n\r\n      })\r\n    }\r\n    addBoleta() {\r\n      this.setState({\r\n        addComponentFactura : false,\r\n        addComponentBoleta : !this.state.addComponentBoleta\r\n\r\n      })\r\n    }\r\n    addNuevaVenta() {\r\n        console.log(this.state.tipoComprobante)\r\n        console.log(this.state.numeroVenta)\r\n        console.log(this.state.sucursalId)\r\n        let btn_venta = document.querySelector('#btn_venta');\r\n        let txt_btn = '';\r\n        if(this.state.addComponentNuevaVenta == true){\r\n            btn_venta.classList.remove('btn-danger');\r\n            btn_venta.classList.add('btn-success');\r\n            txt_btn = \"Nueva Venta\";\r\n        }else{\r\n            btn_venta.classList.remove('btn-success');\r\n            btn_venta.classList.add('btn-danger');\r\n            txt_btn = \"Cancelar Venta\";\r\n            \r\n        }\r\n        \r\n        this.setState({\r\n          addComponentFactura       : false,\r\n          addComponentBoleta        : false,\r\n          addComponentNuevaVenta    : !this.state.addComponentNuevaVenta,\r\n          txt_btn_venta             : txt_btn \r\n  \r\n        })\r\n    }\r\n\r\n    fetchVentaDataTabla(number, cliente, numeroComprobante){\r\n        fetch(\r\n            config.api+`/ventas/tb_ventas?page=${number}&bcliente=${cliente}&bnumeroComprobante=${numeroComprobante}`,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                venta_tb        : data,\r\n                numeroPagina    : number\r\n            },()=>{\r\n                this.agregarBotones()\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n    getCambioNombreCliente(e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            inp_cliente : value\r\n        })\r\n        this.fetchVentaDataTabla(this.state.numeroPagina, value, this.state.inp_numeroVenta)\r\n    }\r\n\r\n    getCambioNumeroVenta(e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            inp_numeroVenta : value\r\n        })\r\n        this.fetchVentaDataTabla(this.state.numeroPagina, this.state.inp_cliente, value)\r\n    }\r\n\r\n    agregarBotones(){\r\n        let z = this.state.venta_tb.last_page;\r\n        let x = [];\r\n        if(z){\r\n            for(let i = 1 ; i <= z ; i++){\r\n                x.push(i);\r\n            }\r\n            this.setState({\r\n                estadoBoton: x\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n      return(\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h6 className=\"card-title\">Generar tipo de venta</h6>\r\n                          {/* <button type=\"button\" id= \"btn_factura\" onClick={()=>this.addFactura()}\r\n                              className=\"btn btn-primary btn-rounded btn-fw desactivado\">\r\n                                  <span id=\"textFactura\">FACTURA ELECTRÓNICA</span></button>\r\n                          <button type=\"button\" id= \"btn_boleta\" onClick={()=>this.addBoleta()}\r\n                              className=\"btn btn-success btn-rounded btn-fw desactivado\">\r\n                                  <span id=\"textBoleta\">BOLETA DE VENTA ELECTRÓNICA</span>\r\n                            </button> */}\r\n\r\n                            <button type=\"button\" id= \"btn_venta\" onClick={()=>this.addNuevaVenta()} //miomio\r\n                                className=\"btn btn-success btn-rounded btn-fw desactivado\">\r\n                                  <span id=\"textBoleta\">{this.state.txt_btn_venta} </span>\r\n                            </button>\r\n                      </div>\r\n                  </div>\r\n               </div>\r\n\r\n              { this.state.addComponentFactura     && this.state.dataFacturaReady    && <VentaFactura  dataFactura={this.state.dataFactura}  />}\r\n              { this.state.addComponentBoleta      && this.state.dataBoletaReady     && <VentaBoleta   dataBoleta={this.state.dataBoleta} />}\r\n              { this.state.addComponentNuevaVenta  && \r\n                <NuevaVenta \r\n                    tipoComprobante     = {this.state.tipoComprobante} \r\n                    numeroVenta         = {this.state.numeroVenta} \r\n                    sucursalId          = {this.state.sucursalId} \r\n                    addNuevaVenta       = {this.addNuevaVenta}\r\n                    fetchVentaDataTabla = {this.fetchVentaDataTabla}\r\n                    fechtDataNuevaVenta = {this.fechtDataNuevaVenta}\r\n                />\r\n              }\r\n\r\n\r\n              <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">Buscar</h4>\r\n                          {/* @csrf */}\r\n                          <div className=\"row\">\r\n                              <div className=\"col-3\">\r\n                                  <label>Cliente</label>\r\n                                  <input \r\n                                    type        = \"text\" \r\n                                    className   = \"form-control form-control-lg\" \r\n                                    name        = \"buscar_tb_cliente\" \r\n                                    id          = \"buscar_tb_cliente\"\r\n                                    value       = {this.state.inp_cliente}\r\n                                    onChange = {this.getCambioNombreCliente}\r\n                                    />\r\n                              </div>\r\n                              {/* <div className=\"col-3\">\r\n                                  <label>Tipo de comprobante</label>\r\n                                  <select className=\"form-control\" name =\"buscar_tb_comprobante\" id=\"buscar_tb_comprobante\">\r\n                                      <option value=\"\">SELECCIONA UN COMPROBANTE</option>\r\n                                      <option value=\"BOLETA\">BOLETA</option>\r\n                                      <option value=\"FACTURA\">FACTURA</option>\r\n                                  </select>\r\n                              </div> */}\r\n                              <div className=\"col-3\">\r\n                                  <label>Numero de comprobante</label>\r\n                                  <input \r\n                                    type        = \"text\" \r\n                                    className   = \"form-control form-control-lg\" \r\n                                    name        = \"buscar_tb_numeroComprobante\" \r\n                                    onChange    = {this.getCambioNumeroVenta}\r\n                                    value       = {this.state.inp_numeroVenta}\r\n                                    id=\"buscar_tb_numeroComprobante\"/>\r\n                              </div>\r\n                              <div className=\"col-3\">\r\n                                  <label>Filtro por Fechas</label>\r\n                                  <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                    name=\"buscar_tb_fecnumeroComprobante\"\r\n                                    id=\"buscar_tb_fecnumeroComprobante\" defaultValue=''/>\r\n                              </div>\r\n\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h6 className=\"card-title\">Comprobantes</h6>\r\n                          <table id=\"tb_ventas\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                              <thead>\r\n                                  <tr>\r\n                                      <th>#</th>\r\n                                      <th>Fecha Emisión</th>\r\n                                      <th>Cliente</th>\r\n                                      <th>Tipo Comprobante</th>\r\n                                      <th>Número</th>\r\n                                      <th>Estado</th>\r\n                                      <th>SubTotal</th>\r\n                                      <th>Total</th>\r\n                                      <th colSpan=\"2\">Acciones</th>\r\n                                  </tr>\r\n                                      {\r\n                                        this.state.venta_tb.data \r\n                                        ?this.state.venta_tb.data.map((task, posicion) =>{\r\n                                            return (\r\n                                                <tr key={task.idVentas}>\r\n                                                    <td>{posicion}</td>\r\n                                                    <td>{task.fechaVentas}</td>\r\n                                                    <td>{task.nombreClientes}</td>\r\n                                                    <td>\r\n                                                        {task.nombreTiposcomprobante}<br/>\r\n                                                        {\r\n                                                            task.tipoMoneda_id == 3\r\n                                                            ?<div style={{color:'blue'}}>TARJETA</div>\r\n                                                            :<div style={{color:'green'}}>EFECTIVO</div>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{task.numeroVentas}</td>\r\n                                                    <td>{task.estadoSunatVentas}</td>\r\n                                                    <td>{task.subTotalVentas}</td>\r\n                                                    <td>{task.totalVentas}</td>\r\n\r\n                                                    <td>\r\n                                                        {\r\n                                                            task.estadoSunatVentas == 2\r\n                                                            ?<button \r\n                                                                type=\"button\" \r\n                                                                className=\"btn waves-effect waves-light btn-rounded btn-danger\">\r\n                                                                    VENTA CANCELADA\r\n                                                            </button>\r\n\r\n                                                            :<EliminarVenta \r\n                                                                key                 = {task.idVentas} \r\n                                                                idVenta             = {task.idVentas}\r\n                                                                fetchVentaDataTabla = {this.fetchVentaDataTabla}\r\n                                                            />\r\n                                                        }\r\n                                                        \r\n                                                        <a \r\n                                                            // href={'/ventas/pdf/'+task.idVentas} //ojo\r\n                                                            href={config.api+'/ventas/pdf/'+task.idVentas} //ojo\r\n                                                            target=\"_blank\"\r\n                                                            className=\"btn btn-rounded btn-fw btn-primary ver\" \r\n                                                            type=\"button\" >\r\n                                                                <i className=\"mdi mdi-eye\"></i>\r\n                                                        </a>\r\n                                                        \r\n                                                        <ImprimirVenta \r\n                                                            key                 = {task.idVentas} \r\n                                                            idVenta             = {task.idVentas}\r\n                                                            fetchVentaDataTabla = {this.fetchVentaDataTabla}\r\n                                                        />\r\n                                                        \r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                        : null\r\n                                      }\r\n\r\n                              </thead>\r\n                          </table>\r\n                          <div className=\"container\">\r\n                            <div className=\"row justify-content-end\">\r\n                                <div className=\"col-4\">\r\n                                    {\r\n                                        this.state.estadoBoton\r\n                                        ?this.state.estadoBoton.map(task =>{\r\n                                            return (\r\n                                                <button key={task}\r\n                                                    className=\"btn btn-sm btn-secondary editar\" \r\n                                                    type=\"button\" \r\n                                                    onClick={()=>this.fetchVentaDataTabla(task, this.state.inp_cliente, this.state.inp_numeroVenta)}>{task}</button>\r\n\r\n                                            );\r\n                                        })   \r\n                                        : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                         </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n)\r\n}}\r\n\r\nexport default Venta\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Component} from 'react';\r\nimport config from '../../../config'\r\n\r\nclass VentasDetalladas extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            tb_venta_detallada : [],\r\n\r\n            estadoBoton        : [],\r\n            numeroPagina       : 1,\r\n            bcodProduct        : '',\r\n            bnumeroComprobante : '',\r\n            bdateOne           : '',\r\n            bdateTwo           : '',\r\n            \r\n\r\n        }\r\n\r\n        this.fetchTbVentaDetallada  = this.fetchTbVentaDetallada.bind(this);\r\n        this.getCambioCodProducto   = this.getCambioCodProducto.bind(this);\r\n        this.getCambioNumeroVenta   = this.getCambioNumeroVenta.bind(this);\r\n        this.getCambioDateOne       = this.getCambioDateOne.bind(this);\r\n        this.getCambioDateTwo       = this.getCambioDateTwo.bind(this);\r\n\r\n    }\r\n\r\n    fetchTbVentaDetallada(numeroPag, codProduct, numeroComprobante, dateOne, dateTwo){\r\n        fetch(\r\n            config.api+`/ventas/tb_ventas_detalladas?page=${numeroPag}&bcodProduct=${codProduct}&bnumeroComprobante=${numeroComprobante}&dateOne=${dateOne}&dateTwo=${dateTwo}`,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n            .then(\r\n                res => res.json(),\r\n                \r\n            )\r\n            .then(data => {\r\n                this.state.tb_venta_detallada = data\r\n                this.setState({\r\n                    tb_venta_detallada  : this.state.tb_venta_detallada,\r\n                    numeroPagina        : numeroPag\r\n                },()=>{\r\n                  this.agregarBotones()\r\n                });\r\n\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.fetchTbVentaDetallada(1, '', '', '', '');\r\n    }\r\n    \r\n    agregarBotones(){\r\n        let z = this.state.tb_venta_detallada.last_page;\r\n        let x = [];\r\n        if(z){\r\n            for(let i = 1 ; i <= z ; i++){\r\n                x.push(i);\r\n            }\r\n            this.setState({\r\n                estadoBoton: x\r\n            })\r\n        }\r\n    }\r\n\r\n    getCambioCodProducto(e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            bcodProduct : value\r\n        })\r\n        this.fetchTbVentaDetallada(\r\n            this.state.numeroPagina, \r\n            value, \r\n            this.state.bnumeroComprobante,\r\n            this.state.bdateOne,\r\n            this.state.bdateTwo,\r\n\r\n        )\r\n    }\r\n\r\n    getCambioNumeroVenta(e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            bnumeroComprobante : value\r\n        })\r\n        this.fetchTbVentaDetallada(\r\n            this.state.numeroPagina, \r\n            this.state.bcodProduct, \r\n            value,\r\n            this.state.bdateOne,\r\n            this.state.bdateTwo,\r\n\r\n        )\r\n    }\r\n\r\n    getCambioDateOne(e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            bdateOne : value\r\n        })\r\n        this.fetchTbVentaDetallada(\r\n            this.state.numeroPagina, \r\n            this.state.bcodProduct, \r\n            this.state.bnumeroComprobante,\r\n            value,\r\n            this.state.bdateTwo,\r\n\r\n        )\r\n    }\r\n\r\n    getCambioDateTwo(e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            bdateTwo : value\r\n        })\r\n        this.fetchTbVentaDetallada(\r\n            this.state.numeroPagina, \r\n            this.state.bcodProduct, \r\n            this.state.bnumeroComprobante,\r\n            this.state.bdateOne,\r\n            value,\r\n\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">Buscar</h4>\r\n                          {/* @csrf */}\r\n                          <div className=\"row\">\r\n                              <div className=\"col-3\">\r\n                                  <label>Codigo Producto</label>\r\n                                  <input \r\n                                    type        = \"text\" \r\n                                    className   = \"form-control form-control-lg\" \r\n                                    value       = {this.state.bcodProduct}\r\n                                    onChange    = {this.getCambioCodProducto}\r\n                                    />\r\n                              </div>           \r\n                              <div className=\"col-3\">\r\n                                  <label>Numero de comprobante</label>\r\n                                  <input \r\n                                    type        = \"text\" \r\n                                    className   = \"form-control form-control-lg\" \r\n                                    value       = {this.state.bnumeroComprobante}\r\n                                    onChange    = {this.getCambioNumeroVenta}\r\n                                    />\r\n                              </div>\r\n                              <div className=\"col-3\">\r\n                                  <label>Desde (AAAA-MM-dd)</label>\r\n                                  <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                    value        = {this.state.bdateOne}\r\n                                    onChange     = {this.getCambioDateOne}\r\n                                    />\r\n                              </div>\r\n                              <div className=\"col-3\">\r\n                                  <label>Hasta (AAAA-MM-dd)</label>\r\n                                  <input \r\n                                    type         =  \"text\" \r\n                                    className    =  \"form-control form-control-lg\" \r\n                                    value        = {this.state.bdateTwo}\r\n                                    onChange     = {this.getCambioDateTwo}\r\n                                    />\r\n                              </div>\r\n\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <h6 className=\"card-title\">Venta Detallada</h6>\r\n                          <table id=\"tb_ventas\" className=\"table table-striped\" style={{width:'100%'}}>\r\n                              <thead>\r\n                                  <tr>\r\n                                      <th>Sucursal</th>\r\n                                      <th>Fecha Emisión</th>\r\n                                      <th>Tipo Comprobante</th>\r\n                                      <th>N° Venta</th>\r\n                                      <th>Codigo Producto</th>\r\n                                      <th>Nombre Producto</th>\r\n                                      <th>Precio</th>\r\n                                      <th>Cantidad</th>\r\n                                      <th>Descuento</th>\r\n                                      <th>SubTotal</th>\r\n                                      <th>Total</th>\r\n                                  </tr>\r\n                                      {\r\n                                        this.state.tb_venta_detallada.data \r\n                                        ?this.state.tb_venta_detallada.data.map((task, posicion) =>{\r\n                                            return (\r\n                                                <tr key={task.idDetalleVenta}>\r\n                                                    <td>{task.nombreSucursal}</td>\r\n                                                    <td>{task.fechaVentas}</td>\r\n                                                    <td>{task.nombreTiposcomprobante}</td>\r\n                                                    <td>{task.numeroVentas}</td>\r\n                                                    <td>{task.codigoProducto}</td>\r\n                                                    <td>{task.nombreProducto}</td>\r\n                                                    <td>{task.precioProducto}</td>\r\n                                                    <td>{task.cantidadDetalleVenta}</td>\r\n                                                    <td>{task.descuentoDetalleVenta}</td>\r\n                                                    <td>{task.subtotalDetalleVenta}</td>\r\n                                                    <td>{task.totalDetalleVenta}</td>\r\n\r\n                                                    \r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                        : null\r\n                                      }\r\n\r\n                              </thead>\r\n                          </table>\r\n                          <div className=\"container\">\r\n                            <div className=\"row justify-content-end\">\r\n                                <div className=\"col-4\">\r\n                                    {\r\n                                        this.state.estadoBoton\r\n                                        ?this.state.estadoBoton.map(task =>{\r\n                                            return (\r\n                                                <button key={task}\r\n                                                    className=\"btn btn-sm btn-secondary editar\" \r\n                                                    type=\"button\" \r\n                                                    onClick={()=>this.fetchTbVentaDetallada(\r\n                                                        task, \r\n                                                        this.state.bcodProduct, \r\n                                                        this.state.bnumeroComprobante,\r\n                                                        this.state.bdateOne,\r\n                                                        this.state.bdateTwo\r\n                                                        )}>{task}</button>\r\n\r\n                                            );\r\n                                        })   \r\n                                        : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                         </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default VentasDetalladas\r\n","import React, { Component } from 'react'\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../../config'\r\n\r\nclass ModalDeclararTransferencia extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            codigoProductoEscaneado     : '',\r\n            idProductoEscaneado         : 0,\r\n            nombreProductoEscaneado     : '',\r\n            stockProductoEscaneado      : 0,\r\n            precioProductoEscaneado     : 0,\r\n\r\n            idOrigen                    : '',\r\n            idDestino                   : '',\r\n            cantidadTransferir          : '',\r\n            motivoTransferencia         : '',\r\n            stockDespuesOrigen          : '',\r\n            \r\n\r\n        }\r\n\r\n        \r\n        this.getCambioCodigo        = this.getCambioCodigo.bind(this);\r\n        this.fetchCodigoProducto    = this.fetchCodigoProducto.bind(this);\r\n\r\n        this.getCambioCantidadTransferir    = this.getCambioCantidadTransferir.bind(this);\r\n        this.getCambioMotivoTransferencia   = this.getCambioMotivoTransferencia.bind(this);\r\n        this.getCambio                      = this.getCambio.bind(this);\r\n        this.fetchCrearTransferencia        = this.fetchCrearTransferencia.bind(this);\r\n        \r\n\r\n    }    \r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            idOrigen    : this.props.sucursalesUsuario[0]['id'],\r\n            idDestino   : this.props.sucursales[0]['id']\r\n        })\r\n    }\r\n\r\n    getCambioCodigo(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            codigoProductoEscaneado : value\r\n        })\r\n        if (e.key === 'Enter') {\r\n            this.fetchCodigoProducto(value);\r\n        }\r\n\r\n    }\r\n\r\n    getCambioCantidadTransferir(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            cantidadTransferir : value\r\n        })\r\n    }\r\n    \r\n    fetchCodigoProducto(codigo){\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>BUSCANDO PRODUCTO</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        ).then(() => {\r\n            fetch(config.api+`/producto/buscar`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token'        : csrf_token,\r\n                        codigoProducto  : codigo\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data['response'] == true){\r\n                    \r\n                    var producto = data['producto'];\r\n                    this.setState({\r\n                        idProductoEscaneado     : producto['id'],\r\n                        nombreProductoEscaneado : producto['nombre'],\r\n                        stockProductoEscaneado  : producto['cantidad'],\r\n                        precioProductoEscaneado : producto['precio'],\r\n                    })\r\n\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>PRODUCTO ESCANEADO CORRECTAMENTE</h4>\r\n                            <p>{producto['nombre']}</p>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n\r\n\r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>EL CODIGO DE ESE PRODUCTO NO EXISTE</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    getCambioMotivoTransferencia(e){\r\n        const {name , value} = e.target;\r\n        \r\n        this.setState({\r\n            motivoTransferencia  : value\r\n        })\r\n    }\r\n\r\n    fetchCrearTransferencia(){\r\n        this.props.mostrarModalDeclararTransferencia()\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>TRANSFIRIENDO PRODUCTO</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        ).then(() => {\r\n            fetch(config.api+`/almacen/transferencias/crear`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token'                : csrf_token,\r\n                        'idOrigen'              : this.state.idOrigen,\r\n                        'idDestino'             : this.state.idDestino,\r\n                        'idProducto'            : this.state.idProductoEscaneado,\r\n                        'codigoProducto'        : this.state.codigoProductoEscaneado,\r\n                        'cantidad'              : this.state.cantidadTransferir,\r\n                        'motivo'                : this.state.motivoTransferencia,\r\n                        'stockAntesOrigen'      : this.state.stockProductoEscaneado,\r\n                        'stockDespuesOrigen'    : this.state.stockProductoEscaneado + this.state.cantidadTransferir\r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data['respuesta'] == true){\r\n                    \r\n                    this.props.fetchSucursalesUsuario()\r\n                    this.props.fetchSucursales()\r\n\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4> {data['mensaje']}   </h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n\r\n\r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>{data['mensaje']}</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    getCambio (e){\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            [name] : value\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card card-default\">\r\n               <div className=\"modal-body\">\r\n                   <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <label>ORIGEN</label>\r\n                                    <div className=\"input-group\">\r\n                                           <select \r\n                                            className   = \"form-control\"\r\n                                            name        = \"idOrigen\"\r\n                                            onChange    = {this.getCambio}\r\n                                            >\r\n                                               {\r\n                                                   this.props.sucursalesUsuario \r\n                                                   ?this.props.sucursalesUsuario.map(element => {\r\n                                                       return (\r\n                                                           <option key = {element.id} value={element.id}  >{element.nombre}</option>\r\n                                                           );\r\n                                                   })\r\n                                                   :null\r\n                                               }\r\n                                           </select>\r\n                                       </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <label>DESTINO</label>\r\n                                    <div className=\"input-group\">\r\n                                        <select \r\n                                            className   = \"form-control\" \r\n                                            name        = \"idDestino\"\r\n                                            onChange    = {this.getCambio}\r\n                                        >\r\n                                            {\r\n                                                this.props.sucursales \r\n                                                ?this.props.sucursales.map(element => {\r\n                                                    return (\r\n                                                        <option key = {element.id} value={element.id}  >{element.nombre}</option>\r\n                                                        );\r\n                                                })\r\n                                                :null\r\n                                            }\r\n                                            \r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\" >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-9\">\r\n                                        <label>Codigo</label>\r\n                                        <input \r\n                                            type        = \"text\" \r\n                                            className   = \"form-control\" \r\n                                            name        = \"codigoProductoEscaneado\" \r\n                                            id          = \"codigoProductoEscaneado\"\r\n                                            onChange    = {this.getCambioCodigo}\r\n                                            onKeyDown   = {this.getCambioCodigo}\r\n                                            autoFocus\r\n                                            value       = {this.state.codigoProductoEscaneado} \r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Cantidad</label>\r\n                                        <input \r\n                                            type        = \"text\" \r\n                                            className   = \"form-control\" \r\n                                            onChange    = {this.getCambioCantidadTransferir}\r\n                                            value       = {this.state.cantidadTransferir} \r\n                                            \r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-7\">\r\n                                        <label>Nombre del producto</label>\r\n                                        <h4 className=\"card-title\"> {this.state.nombreProductoEscaneado} </h4>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Stock</label>\r\n                                        <h4 className=\"card-title\"> \r\n                                            {this.state.stockProductoEscaneado} - {this.state.cantidadTransferir} = {this.state.stockProductoEscaneado - this.state.cantidadTransferir}\r\n                                        </h4>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <label>Precio</label>\r\n                                        <h4 className=\"card-title\"> S/{this.state.precioProductoEscaneado} </h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <label>MOTIVO (opcional)</label>\r\n                                        <textarea \r\n                                            className   = \"form-control\" \r\n                                            rows        = \"3\" \r\n                                            placeholder = \"Motivo\"\r\n                                            onChange    = {this.getCambioMotivoTransferencia}\r\n                                            value       = {this.state.motivoTransferencia}\r\n                                        >\r\n\r\n                                        </textarea>\r\n                                    </div>                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group boton\">\r\n                            <button \r\n                            type=\"button\" \r\n                            className=\"addexis form-control btn btn-block btn-success btn-lg\" \r\n                            onClick={() => this.fetchCrearTransferencia()}\r\n                            >\r\n                            TRANSFERIR</button>\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalDeclararTransferencia","import React from 'react'\r\nimport {Component} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../../config'\r\n\r\nclass TB_Transferencias extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            idTransferencia : 0\r\n        }\r\n\r\n        this.confirmarEliminarTransferencia = this.confirmarEliminarTransferencia.bind(this);\r\n        this.fetchEliminarTransferencia     = this.fetchEliminarTransferencia.bind(this);\r\n        this.fetchImprimirTransferencia     = this.fetchImprimirTransferencia.bind(this);\r\n\r\n    }\r\n\r\n    confirmarEliminarTransferencia(idTransferencia){\r\n        this.setState({\r\n            idTransferencia : idTransferencia\r\n        })\r\n\r\n        confirmAlert({\r\n            title: 'ELIMINAR TRANSFERENCIA',\r\n            message: 'Una vez eliminado no hay forma de recuperarlo',\r\n            buttons: [\r\n              {\r\n                label: 'ELIMINAR',\r\n                onClick: this.fetchEliminarTransferencia\r\n              },\r\n              {\r\n                label: 'CANCELAR',\r\n                onClick: console.log(\"\")\r\n              }\r\n            ]\r\n        });\r\n    }\r\n\r\n    fetchEliminarTransferencia(){\r\n        console.log(this.state.idTransferencia)\r\n        let url = config.api+`/almacen/transferencias/eliminar`;\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>ELIMINANDO TRANSFERENCIA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        // '_token'            : csrf_token,\r\n                        'idTransferencia'   : this.state.idTransferencia\r\n                        \r\n                    }),\r\n                    headers: {\r\n                        'Accept' : 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'usuid'         : localStorage.getItem('usuid')\r\n                    }\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>{data['mensaje']}</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n\r\n                    this.props.fetchTransferencias(1, '', '');\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>{data['mensaje']}</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n\r\n    // \r\n    fetchImprimirTransferencia(idTransferencia){\r\n        let url = config.apiTicket+`/api/imprimir/transferencia/`+idTransferencia;\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>IMPRIMIENDO TRANSFERENCIA</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'GET',\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>IMPRESIÓN CORRECTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>HUBO UN PROBLEMA AL IMPRIMIR LA VENTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n    // \r\n\r\n    render(){\r\n        return(\r\n            // <div className=\"row\">\r\n            //     <Buscadores_tb_transferencias \r\n                                    \r\n            //     />\r\n\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"card-title\">REGISTRO DE TRANSFERENCIAS:</h6>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>ORIGEN</th>\r\n                                                    <th>DESTINO</th>\r\n                                                    <th>CODIGO PRODUCTO</th>\r\n                                                    <th>PRODUCTO</th>\r\n                                                    <th>CANTIDAD</th>\r\n                                                    <th>OPCIONES</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    this.props.tb_transferencias\r\n                                                    ?this.props.tb_transferencias.map((data, posicion)=>{\r\n                                                        return(\r\n                                                            <tr key={data.idTransferencia}>\r\n                                                                <td>\r\n                                                                    {data.origenTransferencia}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {data.destinoTransferencia}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {data.codigoProducto}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {data.nombreProducto}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {data.cantidadTransferida}\r\n                                                                </td>\r\n\r\n                                                                <td>\r\n                                                                    <div className=\"button-group\">\r\n                                                                        {/* <button \r\n                                                                            type=\"button\" \r\n                                                                            class=\"btn waves-effect waves-light btn-rounded btn-primary\"\r\n                                                                        >\r\n                                                                                <i className=\"mdi mdi-eye\"></i>\r\n                                                                        </button> */}\r\n                                                                        \r\n                                                                        <button \r\n                                                                            type        = \"button\" \r\n                                                                            id          = \"btn_eliminar_transferencia\"\r\n                                                                            onClick     = {\r\n                                                                                () => this.confirmarEliminarTransferencia(data.idTransferencia)\r\n                                                                            }\r\n\r\n                                                                            className   = \"btn waves-effect waves-light btn-rounded btn-danger\">\r\n                                                                                <i className=\"mdi mdi-delete\"></i>\r\n                                                                        </button>\r\n\r\n                                                                        <button \r\n                                                                            style       = {{marginLeft:'10px', background:'green'}}\r\n                                                                            type        = \"button\" \r\n                                                                            id          = \"btn_venta\"\r\n                                                                            onClick     = {() => this.fetchImprimirTransferencia(data.idTransferencia)}\r\n                                                                            className   = \"btn btn-danger btn-rounded btn-fw\">\r\n                                                                                <i className=\"mdi mdi-printer\"></i>\r\n                                                                        </button>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                \r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                    :null\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <br></br>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row justify-content-end\">\r\n                                            <div className=\"col-4\">\r\n                                                {\r\n                                                    this.props.estadoBoton\r\n                                                    ?this.props.estadoBoton.map(task =>{\r\n                                                        return (\r\n                                                            <button \r\n                                                                key         = {task}\r\n                                                                className   = \"btn btn-sm btn-secondary\" \r\n                                                                type        = \"button\" \r\n                                                                onClick     = {()=>this.props.fetchTransferencias(task, \"\", \"\")}>\r\n                                                                    {task}\r\n                                                            </button>\r\n                                                        );\r\n                                                    })   \r\n                                                    : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>   \r\n                    </div>    \r\n                </div>\r\n            // </div>\r\n            \r\n            \r\n         ) \r\n    }\r\n}\r\n\r\nexport default TB_Transferencias","import React from 'react'\r\nimport {Component} from 'react';\r\n\r\nclass Buscadores_tb_transferencias extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){        \r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Buscar</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                                <label>Buscar Codigo</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label>Buscar Marca</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label>Buscar Tipo</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label>Buscar Nombre</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n         ) \r\n    }\r\n}\r\n\r\nexport default Buscadores_tb_transferencias","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport ModalDeclararTransferencia from './modalDeclararTransferencia/index'\r\nimport TB_Transferencias from './tabla/tb_transferencias'\r\nimport Buscadores_tb_transferencias from './tabla/buscadores_tb_transferencias'\r\nimport agregarBotones from '../extras/agregarBotones'\r\nimport config from '../../config'\r\n\r\nclass indexTransferencias extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            mostrarModalDeclararTransferencia   : false,\r\n            sucursalesUsuario                   : [],\r\n            sucursales                          : [],\r\n\r\n\r\n            tb_transferencias  : [],\r\n            numeroPagina       : '',\r\n            estadoBoton        : []\r\n\r\n        }\r\n\r\n        this.mostrarModalDeclararTransferencia = this.mostrarModalDeclararTransferencia.bind(this);\r\n        \r\n        this.fetchSucursalesUsuario = this.fetchSucursalesUsuario.bind(this);\r\n        this.fetchSucursales        = this.fetchSucursales.bind(this);\r\n        this.fetchTransferencias    = this.fetchTransferencias.bind(this);\r\n    }\r\n\r\n    mostrarModalDeclararTransferencia(){\r\n        this.setState({\r\n            mostrarModalDeclararTransferencia : !this.state.mostrarModalDeclararTransferencia\r\n        })\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.fetchSucursalesUsuario();\r\n        this.fetchSucursales();\r\n        this.fetchTransferencias(1, '', '');\r\n    }\r\n\r\n    fetchSucursalesUsuario()\r\n    {\r\n        fetch(\r\n            config.api+'/consultar/sucursales/usuario',\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n                .then(\r\n                    res => res.json()\r\n                )\r\n                .then(\r\n                    data => {\r\n                        this.setState({\r\n                            sucursalesUsuario: data.sucursales\r\n                        });\r\n                        \r\n        \r\n                    }\r\n                )\r\n                \r\n    }\r\n\r\n    fetchSucursales()\r\n    {\r\n        fetch(\r\n            config.api+'/consultar/sucursales',\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n                .then(\r\n                    res => res.json()\r\n                )\r\n                .then(\r\n                    data => {\r\n                        this.setState({\r\n                            sucursales: data.sucursales\r\n                        });\r\n\r\n                    }\r\n                )\r\n    }\r\n\r\n    fetchTransferencias(number, cliente, numeroComprobante){\r\n        let url = config.api+`/almacen/transferencias/tb_transferencias?page=${number}&idSucursal=`;\r\n        fetch(\r\n            url,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(\r\n            res => res.json()\r\n        )\r\n        .then(\r\n            data => {\r\n\r\n                this.setState({\r\n                    tb_transferencias   : data['tb_transferencias'].data,\r\n                    numeroPagina        : number\r\n                },()=>{\r\n                    \r\n                    this.setState({\r\n                        estadoBoton : agregarBotones(data['tb_transferencias'].last_page)\r\n                    })\r\n                });\r\n            }\r\n        )\r\n    }\r\n   \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n               <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Modulos de agregar</h4>\r\n                            <div className=\"button-group\">\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"btn waves-effect waves-light btn-primary\"\r\n                                    onClick={()=>this.mostrarModalDeclararTransferencia()}\r\n                                    >Declarar Transferencia</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Buscadores_tb_transferencias \r\n                                    \r\n                />\r\n\r\n                <TB_Transferencias \r\n                    fetchTransferencias = {this.fetchTransferencias}\r\n                    tb_transferencias   = {this.state.tb_transferencias}\r\n                    estadoBoton         = {this.state.estadoBoton}\r\n                />\r\n                \r\n\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show    = {this.state.mostrarModalDeclararTransferencia}\r\n                    onHide  = {() => this.mostrarModalDeclararTransferencia()}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            Declarar Transferencia\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ModalDeclararTransferencia\r\n                            mostrarModalDeclararTransferencia = {this.mostrarModalDeclararTransferencia}\r\n\r\n                            fetchSucursalesUsuario  = {this.fetchSucursalesUsuario}\r\n                            fetchSucursales         = {this.fetchSucursales}\r\n\r\n                            sucursalesUsuario   = {this.state.sucursalesUsuario}\r\n                            sucursales          = {this.state.sucursales}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default indexTransferencias\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\nimport cogoToast from 'cogo-toast';\r\nimport config from '../../../../config'\r\n\r\nclass TB_filas_cajasVentas extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n        }\r\n        this.fetchImprimirCaja = this.fetchImprimirCaja.bind(this)\r\n    }\r\n\r\n    fetchImprimirCaja(){\r\n        let url = config.apiTicket+`/api/imprimir/cierreCaja/`+this.props.idCajaVenta;\r\n\r\n        cogoToast.loading(\r\n            <div>\r\n                <h4>IMPRIMIENDO CAJA N°{this.props.numeroCajaVenta}</h4>\r\n            </div>, \r\n            {\r\n                position: 'top-right'\r\n            }\r\n            \r\n        )\r\n        .then(() => {\r\n            fetch(url,\r\n                {\r\n                    method: 'GET',\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n    \r\n                if(data['respuesta'] == true){\r\n                    cogoToast.success(\r\n                        <div>\r\n                            <h4>IMPRESIÓN CORRECTA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                    this.props.fetchVentaDataTabla(1, '', '');\r\n    \r\n                }else{\r\n                    cogoToast.error(\r\n                        <div>\r\n                            <h4>HUBO UN PROBLEMA AL IMPRIMIR LA CAJA</h4>\r\n                        </div>, \r\n                        {\r\n                          position: 'top-right'\r\n                        }\r\n                    );\r\n                }\r\n                \r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <tr>\r\n                <td>\r\n                    <button \r\n                        className=\"btn btn-rounded btn-fw btn-primary\" \r\n                        style={{background:'green'}}\r\n                        onClick={() => this.fetchImprimirCaja()}\r\n                        type=\"button\" >\r\n                            <i className=\"mdi mdi-printer\"></i>\r\n                    </button>\r\n\r\n                    <button \r\n                        \r\n                        className=\"btn btn-rounded btn-fw btn-primary\" \r\n                        type=\"button\" >\r\n                            <i className=\"mdi mdi-eye\"></i>\r\n                    </button>\r\n                </td>\r\n                <td>{this.props.nombreSurcursal }</td>\r\n                <td>{this.props.nombreUsuario }</td>\r\n                <td>{this.props.cierreCajaVenta }</td>\r\n                <td>{this.props.numeroCajaVenta }</td>\r\n                <td>{this.props.aperturaCajaVenta }</td>\r\n                <td>{this.props.cierreCajaVenta }</td>\r\n                <td>{(this.props.totalAperturaCajaVenta) }</td>\r\n                <td>{(this.props.totalAperturoCajaVenta) }</td>\r\n                <td>{this.props.totalCierreCajaVenta }</td>\r\n                <td>{this.props.totalCerroCajaVenta }</td>\r\n                <td>{this.props.numeroVentasTarjetaCajaVenta }</td>\r\n                <td>{this.props.totalVentasTarjetaCajaVenta }</td>\r\n                <td>{this.props.numeroVentasEfectivoCajaVenta }</td>\r\n                <td>{this.props.totalVentasEfectivoCajaVenta }</td>\r\n                <td>{this.props.numeroVentasCanceladasCajaVenta }</td>\r\n                <td>{this.props.totalVentasCanceladasCajaVenta }</td>\r\n                <td>{this.props.numeroGastosCajaVenta }</td>\r\n                <td>{this.props.totalGastosCajaVenta }</td>\r\n                <td>{this.props.numeroIngresosCajaVenta }</td>\r\n                <td>{this.props.totalIngresosCajaVenta }</td>\r\n                <td>{this.props.numeroVentasCajaVenta }</td>\r\n                <td>{this.props.totalVentasCajaVenta }</td>\r\n                <td>{this.props.numeroItemsCajaVenta }</td>\r\n                <td>{this.props.numeroItemsCanceladosCajaVenta }</td>\r\n                <td>{this.props.observacionesAperturaCajaVenta }</td>\r\n                <td>{this.props.observacionesCierreCajaVenta }</td>\r\n            </tr>\r\n         ) \r\n    }\r\n}\r\n\r\nexport default TB_filas_cajasVentas","import React from 'react'\r\nimport {Component} from 'react';\r\nimport TB_filas_cajasVentas from './tb_filas_cajasVentas';\r\nimport agregarBotones from '../../../extras/agregarBotones'\r\nimport config from '../../../../config'\r\n\r\nclass TB_CajasVentas extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            tb_cajaVenta    : [],\r\n\r\n            estadoBoton     : []           \r\n\r\n\r\n        }\r\n        this.fetchCajasVentas  = this.fetchCajasVentas.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchCajasVentas(1, '', '');\r\n    }\r\n\r\n    fetchCajasVentas(number, cliente, numeroComprobante){\r\n        let url = config.api+`/cierrescajas/tb_cierreCaja?page=${number}&bcliente=${cliente}&bnumeroComprobante=${numeroComprobante}`;\r\n        fetch(\r\n            url,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(\r\n            res => res.json()\r\n        )\r\n        .then(\r\n            data => {\r\n\r\n                this.setState({\r\n                    tb_cajaVenta    : data['tb_cajaVenta'].data,\r\n                    numeroPagina    : number\r\n                },()=>{\r\n                    \r\n                    this.setState({\r\n                        estadoBoton : agregarBotones(data['tb_cajaVenta'].last_page)\r\n                    })\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h6 className=\"card-title\">REGISTRO DE CUADRE DE CAJA:</h6>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>OPCIONES</th>\r\n                                        <th>SUCURSAL</th>\r\n                                        <th>USUARIO</th>\r\n                                        <th>ESTADO</th>\r\n                                        <th>NUMERO</th>\r\n                                        <th>FECHA APERTURA</th>\r\n                                        <th>FECHA CIERRE</th>\r\n                                        <th>APERTURA (S/)</th>\r\n                                        <th>APERTURO (S/)</th>\r\n                                        <th>CIERRE (S/)</th>\r\n                                        <th>CERRO (S/)</th>\r\n                                        <th>N° TAJERTA </th>\r\n                                        <th>TARJETA (S/)</th>\r\n                                        <th>N° EFECTIVO </th>\r\n                                        <th>EFECTIVO (S/)</th>\r\n                                        <th>N° CANCELADOS</th>\r\n                                        <th>CANCELADOS (S/)</th>\r\n                                        <th>N° GASTOS</th>\r\n                                        <th>GASTOS (S/)</th>\r\n                                        <th>N° INGRESOS</th>\r\n                                        <th>INGRESOS (S/)</th>\r\n                                        <th>N° VENTAS</th>\r\n                                        <th>VENTAS (S/) </th>\r\n                                        <th>N° ITEMS VENDIDOS</th>\r\n                                        <th>N° ITEMS CANCELADOS</th>\r\n                                        <th>OBSERVACIONES APERTURA </th>\r\n                                        <th>OBSERVACIONES CIERRE </th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.tb_cajaVenta\r\n                                        ?this.state.tb_cajaVenta.map((data, posicion)=>{\r\n                                            return(\r\n                                                    <TB_filas_cajasVentas \r\n                                                        key                             =   {data.idCajaVenta}\r\n                                                        idCajaVenta                     =   {data.idCajaVenta}\r\n                                                        nombreUsuario                   =   {data.nombreUsuario}\r\n                                                        nombreSurcursal                 =   {data.nombreSurcursal}\r\n                                                        cierreCajaVenta                 =   {data.cierreCajaVenta}\r\n                                                        numeroCajaVenta                 =   {data.numeroCajaVenta}\r\n                                                        aperturaCajaVenta               =   {data.aperturaCajaVenta}\r\n                                                        cierreCajaVenta                 =   {data.cierreCajaVenta}\r\n                                                        totalAperturaCajaVenta          =   {(data.totalAperturaCajaVenta * 1).toFixed(2)}\r\n                                                        totalAperturoCajaVenta          =   {(data.totalAperturoCajaVenta * 1).toFixed(2)}\r\n                                                        totalCierreCajaVenta            =   {(data.totalCierreCajaVenta * 1).toFixed(2)}\r\n                                                        totalCerroCajaVenta             =   {(data.totalCerroCajaVenta * 1).toFixed(2)}\r\n                                                        numeroVentasTarjetaCajaVenta    =   {data.numeroVentasTarjetaCajaVenta}\r\n                                                        totalVentasTarjetaCajaVenta     =   {(data.totalVentasTarjetaCajaVenta * 1).toFixed(2)}\r\n                                                        numeroVentasEfectivoCajaVenta   =   {data.numeroVentasEfectivoCajaVenta}\r\n                                                        totalVentasEfectivoCajaVenta    =   {(data.totalVentasEfectivoCajaVenta * 1).toFixed(2)}\r\n                                                        numeroVentasCanceladasCajaVenta =   {data.numeroVentasCanceladasCajaVenta}\r\n                                                        totalVentasCanceladasCajaVenta  =   {(data.totalVentasCanceladasCajaVenta * 1).toFixed(2)}\r\n                                                        numeroGastosCajaVenta           =   {data.numeroGastosCajaVenta}\r\n                                                        totalGastosCajaVenta            =   {(data.totalGastosCajaVenta * 1).toFixed(2)}\r\n                                                        numeroIngresosCajaVenta         =   {data.numeroIngresosCajaVenta}\r\n                                                        totalIngresosCajaVenta          =   {(data.totalIngresosCajaVenta * 1).toFixed(2)}\r\n                                                        numeroVentasCajaVenta           =   {data.numeroVentasCajaVenta}\r\n                                                        totalVentasCajaVenta            =   {(data.totalVentasCajaVenta * 1).toFixed(2)}\r\n                                                        numeroItemsCajaVenta            =   {data.numeroItemsCajaVenta}\r\n                                                        numeroItemsCanceladosCajaVenta  =   {data.numeroItemsCanceladosCajaVenta}\r\n                                                        observacionesAperturaCajaVenta  =   {data.observacionesAperturaCajaVenta}\r\n                                                        observacionesCierreCajaVenta    =   {data.observacionesCierreCajaVenta}\r\n                                                        \r\n                                                    />\r\n                                            ) \r\n                                        })\r\n                                        :null\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-end\">\r\n                                <div className=\"col-4\">\r\n                                    {\r\n                                        this.state.estadoBoton\r\n                                        ?this.state.estadoBoton.map(task =>{\r\n                                            return (\r\n                                                <button \r\n                                                    key         = {task}\r\n                                                    className   = \"btn btn-sm btn-secondary editar\" \r\n                                                    type        = \"button\" \r\n                                                    onClick     = {()=>this.fetchCajasVentas(task, \"\", \"\")}>{task}</button>\r\n\r\n                                            );\r\n                                        })   \r\n                                        : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         ) \r\n    }\r\n}\r\n\r\nexport default TB_CajasVentas","import React from 'react'\r\nimport {Component} from 'react';\r\nimport TB_CajasVentas from './tabla/tb_cajasVentas';\r\n\r\nclass indexCajaVenta extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n               <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <TB_CajasVentas \r\n                                    \r\n                            />\r\n                        </div>   \r\n                    </div>    \r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default indexCajaVenta\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\nimport agregarBotones from '../../../extras/agregarBotones'\r\nimport config from '../../../../config'\r\n\r\nclass TB_Gastos extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            tb_gastos    : [],\r\n            estadoBoton  : []\r\n\r\n        }\r\n        this.fetchGastos  = this.fetchGastos.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchGastos(1, '', '');\r\n    }\r\n\r\n    fetchGastos(number, cliente, numeroComprobante){\r\n        let url = config.api+`/caja/gastos/tb_gastos?page=${number}`;\r\n        fetch(\r\n            url,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(\r\n            res => res.json()\r\n        )\r\n        .then(\r\n            data => {\r\n                console.log(\"------------------------\")\r\n                console.log(data)\r\n                console.log(\"------------------------\")\r\n                this.setState({\r\n                    tb_gastos    : data['tb_gastos'].data,\r\n                    numeroPagina : number\r\n                },()=>{\r\n                    \r\n                    this.setState({\r\n                        estadoBoton : agregarBotones(data['tb_gastos'].last_page)\r\n                    })\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title\">REGISTRO DE GASTOS:</h6>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>SUCURSAL</th>\r\n                                                <th>NUMERO DE LA CAJA</th>\r\n                                                <th>FECHA DEL GASTO</th>\r\n                                                <th>NUMERO DEL GASTO</th>\r\n                                                <th>GASTO</th>\r\n                                                <th>MOTIVO</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.tb_gastos\r\n                                                ?this.state.tb_gastos.map((data, posicion)=>{\r\n                                                    return(\r\n                                                        <tr key={data.idGasto}>\r\n                                                            <td>{data.nombreSucursal }</td>\r\n                                                            <td>{data.numeroCajaVenta }</td>\r\n                                                            <td>{data.fechaGasto }</td>\r\n                                                            <td>{data.numeroGasto }</td>\r\n                                                            <td>{data.gasto }</td>\r\n                                                            <td>{data.motivoGasto }</td>\r\n                                                        </tr>\r\n                                                    ) \r\n                                                })\r\n                                                :null\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row justify-content-end\">\r\n                                        <div className=\"col-4\">\r\n                                            {\r\n                                                this.state.estadoBoton\r\n                                                ?this.state.estadoBoton.map(task =>{\r\n                                                    return (\r\n                                                        <button \r\n                                                            key         = {task}\r\n                                                            className   = \"btn btn-sm btn-secondary\" \r\n                                                            type        = \"button\" \r\n                                                            onClick     = {()=>this.fetchGastos(task, \"\", \"\")}>{task}</button>\r\n\r\n                                                    );\r\n                                                })   \r\n                                                : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div>    \r\n            </div>\r\n            \r\n         ) \r\n    }\r\n}\r\n\r\nexport default TB_Gastos","import React from 'react'\r\nimport {Component} from 'react';\r\nimport TB_Gastos from './tabla/tb_gastos';\r\n\r\nclass indexGasto extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <TB_Gastos \r\n\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default indexGasto\r\n","import React from 'react'\r\nimport {Component} from 'react';\r\nimport agregarBotones from '../../../extras/agregarBotones'\r\nimport config from '../../../../config'\r\n\r\nclass TB_Ingresos extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            tb_ingresos  : [],\r\n            estadoBoton  : []\r\n\r\n        }\r\n        this.fetchIngresos  = this.fetchIngresos.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchIngresos(1, '', '');\r\n    }\r\n\r\n    fetchIngresos(number, cliente, numeroComprobante){\r\n        let url = config.api+`/caja/ingresos/tb_ingresos?page=${number}`;\r\n        fetch(\r\n            url,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(\r\n            res => res.json()\r\n        )\r\n        .then(\r\n            data => {\r\n                this.setState({\r\n                    tb_ingresos    : data['tb_ingresos'].data,\r\n                    numeroPagina : number\r\n                },()=>{\r\n                    \r\n                    this.setState({\r\n                        estadoBoton : agregarBotones(data['tb_ingresos'].last_page)\r\n                    })\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title\">REGISTRO DE INGRESOS:</h6>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered table-striped\" id=\"tbl_products\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>SUCURSAL</th>\r\n                                                <th>NUMERO DE LA CAJA</th>\r\n                                                <th>FECHA DEL INGRESO</th>\r\n                                                <th>NUMERO DEL INGRESO</th>\r\n                                                <th>INGRESO</th>\r\n                                                <th>MOTIVO</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.tb_ingresos\r\n                                                ?this.state.tb_ingresos.map((data, posicion)=>{\r\n                                                    return(\r\n                                                        <tr key= { data.idIngreso         }>\r\n                                                            <td> { data.nombreSucursal    }</td>\r\n                                                            <td> { data.numeroCajaVenta   }</td>\r\n                                                            <td> { data.fechaIngreso      }</td>\r\n                                                            <td> { data.numeroIngreso     }</td>\r\n                                                            <td> { data.ingreso           }</td>\r\n                                                            <td> { data.motivoIngreso     }</td>\r\n                                                        </tr>\r\n                                                    ) \r\n                                                })\r\n                                                :null\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row justify-content-end\">\r\n                                        <div className=\"col-4\">\r\n                                            {\r\n                                                this.state.estadoBoton\r\n                                                ?this.state.estadoBoton.map(task =>{\r\n                                                    return (\r\n                                                        <button \r\n                                                            key         = {task}\r\n                                                            className   = \"btn btn-sm btn-secondary\" \r\n                                                            type        = \"button\" \r\n                                                            onClick     = {()=>this.fetchIngresos(task, \"\", \"\")}>{task}</button>\r\n\r\n                                                    );\r\n                                                })   \r\n                                                : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div>    \r\n            </div>\r\n            \r\n         ) \r\n    }\r\n}\r\n\r\nexport default TB_Ingresos","import React from 'react'\r\nimport {Component} from 'react';\r\nimport TB_INGRESOS from './tabla/tb_ingesos';\r\n\r\nclass indexGasto extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <TB_INGRESOS \r\n\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default indexGasto\r\n","import React, { Component } from 'react'\r\nimport config from '../../../config'\r\n// import TB_Descuentos from './tabla/tb_descuentos'\r\n\r\nclass CargaArchivos extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n\r\n            //modal\r\n            estadoModalAgregarOferta    : false,\r\n            // DATOS DEL MODAL\r\n            idProductoEscaneado         : 0,\r\n            codigoProductoEscaneado     : '',\r\n            nombreProductoEscaneado     : '',\r\n            stockProductoEscaneado      : 0,\r\n            precioProductoEscaneado     : 0,\r\n            cantidadOferta              : '',\r\n            nuevoPrecioOferta           : '',\r\n\r\n            // TOAST\r\n            estadoToast     : false,\r\n            mensajeToast    : '',\r\n            colorToast      : 'rgba(76,208,76,0.7)',\r\n\r\n\r\n        }\r\n        this.getCambioCodigo            = this.getCambioCodigo.bind(this);\r\n        this.fetchCodigoProducto        = this.fetchCodigoProducto.bind(this);\r\n        this.getCambioCantidadOferta    = this.getCambioCantidadOferta.bind(this);\r\n        this.getCambioNuevoPrecio       = this.getCambioNuevoPrecio.bind(this);\r\n        this.fetchAgregarOferta         = this.fetchAgregarOferta.bind(this);\r\n    }\r\n\r\n    modalAgregarOferta() {\r\n        this.setState({\r\n            estadoModalAgregarOferta: !this.state.estadoModalAgregarOferta\r\n        });\r\n    }\r\n\r\n    activarToast(message, color) {\r\n        this.setState({\r\n            mensajeToast : message,\r\n            colorToast   : color,\r\n            estadoToast  : true\r\n        });\r\n    }\r\n\r\n    getCambioCodigo(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            codigoProductoEscaneado : value\r\n        })\r\n        if (e.key === 'Enter') {\r\n            console.log(value);\r\n            this.fetchCodigoProducto(value);\r\n        }\r\n\r\n    }\r\n\r\n    fetchCodigoProducto(codigo){ \r\n        fetch(config.api+`/producto/buscar`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    // '_token'        : csrf_token,\r\n                    codigoProducto  : codigo\r\n                }),\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'usuid'         : localStorage.getItem('usuid')\r\n                }\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(\"datos:\")\r\n            console.log(data)\r\n            if(data['response'] == true){\r\n               \r\n                var producto = data['producto'];\r\n                this.setState({\r\n                    idProductoEscaneado     : producto['id'],\r\n                    nombreProductoEscaneado : producto['nombre'],\r\n                    stockProductoEscaneado  : producto['cantidad'],\r\n                    precioProductoEscaneado : producto['precio'],\r\n                })\r\n\r\n\r\n            }else{\r\n                this.activarToast(\"Producto no encontrado\", \"rgba(205,55,55,0.7)\");\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    getCambioCantidadOferta(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            cantidadOferta : value\r\n        })\r\n    }\r\n    \r\n    getCambioNuevoPrecio(e)\r\n    {\r\n        const {name , value} = e.target;\r\n        this.setState({\r\n            nuevoPrecioOferta : value\r\n        })\r\n    }\r\n\r\n    fetchAgregarOferta()\r\n    {\r\n        fetch(config.api+`/configuraciones/descuentos/crear`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                // '_token'            : csrf_token,\r\n                'idProducto'        : this.state.idProductoEscaneado,\r\n                'precioProducto'    : this.state.precioProductoEscaneado,\r\n                'nuevoPrecio'       : this.state.nuevoPrecioOferta,\r\n                'cantidad'          : this.state.cantidadOferta,\r\n            }),\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            console.log(data['response'])\r\n            if(data['response'] == true){\r\n                this.activarToast(\"Oferta creada satisfactoriamente\", \"rgba(76,208,76,0.7)\");\r\n                this.modalAgregarOferta();\r\n            }else{\r\n                this.activarToast(\"Ocurrio un error al momento de agregar la oferta\", \"rgba(205,55,55,0.7)\");\r\n            }\r\n            \r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Acciones</h4>\r\n                            <button type=\"button\"\r\n                                onClick={()=>this.modalAgregarOferta()}\r\n                                className=\"btn btn-primary btn-rounded btn-fw\">Crear una oferta</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <TB_Descuentos \r\n\r\n                /> */}\r\n            \r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default CargaArchivos\r\n","import React, {Component} from 'react'\r\nimport '../../../Estilos/CargarData/CargarData.css'\r\nimport config from '../../../config'\r\nimport axios from 'axios'\r\n\r\nclass CargarData extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            subioArchivo     : false,\r\n            nombreArchivo    : '',\r\n            fileSeleccionado : null,\r\n            cargando         : false,\r\n            archivoExito     : false,\r\n            enviarCambios    : false,\r\n            guardarCambios   : false,\r\n        }\r\n        this.seleccionarFile = this.seleccionarFile.bind(this)\r\n        this.enviarCambios = this.enviarCambios.bind(this)\r\n    }\r\n\r\n    seleccionarFile(e) {\r\n        console.log(localStorage.getItem('usutoken'))\r\n        this.refs.subirArchivoInput.click();\r\n    }\r\n\r\n    async cambioInputFile(event){\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        this.state.fileSeleccionado = event.target.files[0];\r\n\r\n        this.setState({\r\n            subioArchivo  : true,\r\n            nombreArchivo : this.state.fileSeleccionado['name']\r\n        })\r\n    }\r\n\r\n    async enviarCambios(){\r\n        this.setState({\r\n            cargando : true\r\n        })\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',this.state.fileSeleccionado)\r\n        \r\n        let url = config.api+\"/api/versiondos/cargar-data/almacenv2\"\r\n        await axios.post(url, formData,{\r\n            mode:'cors',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'content-type': 'multipart/form-data',\r\n                'api-token': localStorage.getItem('usutoken'),\r\n                'usuid'         : localStorage.getItem('usuid')\r\n            }\r\n        })\r\n        .then(rpta => {\r\n            let datos = rpta.data\r\n            if(datos.respuesta == true){\r\n                this.setState({\r\n                    archivoExito : true\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    archivoExito : false\r\n                })\r\n                // message.error(datos.mensaje);\r\n            }\r\n        })\r\n        .catch((error)=> {\r\n            console.log(error)\r\n            this.setState({\r\n                cargando : false,\r\n                archivoExito : false\r\n            })\r\n        });\r\n        \r\n\r\n        this.setState({\r\n            enviarCambios   : true,\r\n            guardarCambios  : false,\r\n            cargando        : false,\r\n            fileSeleccionado: null\r\n        })\r\n\r\n        this.eliminarArchivo()\r\n    }\r\n\r\n    eliminarArchivo(){\r\n        this.setState({\r\n            subioArchivo     : false,\r\n            nombreArchivo    : '',\r\n            fileSeleccionado : null\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input \r\n                    type=\"file\" \r\n                    id=\"file\" \r\n                    ref=\"subirArchivoInput\" \r\n                    style={{display: \"none\"}} \r\n                    onChange={(e) => this.cambioInputFile(e)} />\r\n\r\n                <div id=\"Contenedor-Card-CargarData\">\r\n                    <div id=\"Titulo-Card-CargarData\">Cargar Almacen</div>\r\n                    <div id=\"Botones-Card-CargarData\">\r\n                        <div>\r\n                            {\r\n                                this.state.fileSeleccionado\r\n                                ?<><div>{this.state.nombreArchivo}</div></>\r\n                                :null\r\n                            }\r\n                            {\r\n                                this.state.fileSeleccionado\r\n                                ?<div \r\n                                    id=\"Btn-EnviarArchivo-CargarData\"\r\n                                    onClick={this.enviarCambios}\r\n                                >Enviar Archivo</div>\r\n                                :<div \r\n                                    id=\"Btn-SeleccionarArchivo-CargarData\"\r\n                                    onClick={this.seleccionarFile}\r\n                                >Seleccionar Archivo</div>\r\n                            }\r\n                            <div id=\"Btn-DescargarFormato-CargarData\">Descargar Formato</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CargarData;\r\n","import React, {Component} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Top from './partials/topNav/top'\r\nimport Sidebar from './partials/sidebar'\r\nimport Footer from './partials/footer'\r\nimport Almacen from './almacenes/Almacen'\r\nimport Entrada from './almacenes/Entrada'\r\nimport Marca from './almacenes/Marca'\r\nimport Proveedores from './almacenes/Proveedores'\r\nimport Tipoproducto from './almacenes/Tipoproducto'\r\nimport Queso from './almacenes/queso'\r\nimport Descuentos from './Configuracion/descuentos/index'\r\nimport Usuarios from './Configuracion/Usuario'\r\nimport Reportes from './Configuracion/Reportes/Reportes'\r\nimport Ventas from './ventas/Venta'\r\nimport VentasDetalladas from './ventas/ventasDetalladas/index'\r\nimport indexTransferencias from './transferencias/index'\r\nimport indexCajaVenta from './caja/gestionarCajas/index'\r\nimport indexGasto from './caja/gestionarGastos/index'\r\nimport indexIngresos from './caja/gestionarIngresos/index'\r\nimport CargaArchivos from './Configuracion/cargaArchivos/index'\r\n\r\nimport CargarData from './almacenes/CargarData/CargarData'\r\n\r\n\r\nconst index = () => {    \r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <div className=\"preloader\">\r\n                <div className=\"lds-ripple\">\r\n                    <div className=\"lds-pos\"></div>\r\n                    <div className=\"lds-pos\"></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"main-wrapper\">\r\n                <Top/>\r\n                <Sidebar/>\r\n                <div className=\"page-wrapper\">\r\n                    <div className=\"page-breadcrumb bg-white\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 col-md-4 col-xs-12 align-self-center\">\r\n                                <h5 className=\"font-medium text-uppercase mb-0\">Dashboard</h5>\r\n                            </div>\r\n                            <div className=\"col-lg-9 col-md-8 col-xs-12 align-self-center\">\r\n                                <nav aria-label=\"breadcrumb\" className=\"mt-2 float-md-right float-left\">\r\n                                    <ol className=\"breadcrumb mb-0 justify-content-end p-0 bg-white\">\r\n                                        <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\r\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Dashboard</li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"page-content container-fluid\">\r\n                        <Switch>\r\n                        <Route exac path='/queso' component={Queso} />\r\n\r\n                        {/* <Route\r\n                            path=\"/almacen\"\r\n                            render={({ match: { url } }) => (\r\n                            <>\r\n                                \r\n                            </>\r\n                            )}\r\n                        /> */}\r\n\r\n                        <Route path={`/almacen`} component={Almacen} exact />\r\n                        <Route path={`/almacen-transferencias`} component={indexTransferencias} />\r\n                        <Route path={`/almacen-entrada`} component={Entrada} />\r\n                        <Route path={`/almacen-marcas`} component={Marca} />\r\n                        <Route path={`/almacen-proveedor`} component={Proveedores} />\r\n                        <Route path={`/almacen-tiposproductos`} component={Tipoproducto} />\r\n                        <Route path={`/almacen-cargar-data`} component={CargarData} />\r\n\r\n                        {/* <Route\r\n                            path=\"/configuracion\"\r\n                            render={({ match: { url } }) => (\r\n                            <>\r\n                                \r\n                            </>\r\n                            )}\r\n                        /> */}\r\n\r\n                        <Route path={`/configuracion-ofertas`}  component={Descuentos} />\r\n                        <Route path={`/configuracion-usuarios`} component={Usuarios} />\r\n                        <Route path={`/configuracion-carga-archivos`} component={CargaArchivos} />\r\n\r\n                        <Route exac path='/ventas' component={Ventas} />\r\n                        <Route exac path='/ventasdetalladas' component={VentasDetalladas} />\r\n                        <Route exac path={`/seguimientos`} component={Reportes} />\r\n                        {/* <Route\r\n                            path=\"/caja\"\r\n                            render={({ match: { url } }) => (\r\n                            <>\r\n                                \r\n                            </>\r\n                            )}\r\n                        /> */}\r\n                        <Route path={`/caja`}         component = {indexCajaVenta} exact />\r\n                        <Route path={`/caja-ingresos`} component = {indexIngresos} />\r\n                        <Route path={`/caja-gastos`}   component = {indexGasto} />\r\n                        </Switch>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n                </div>\r\n            </div>              \r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React, {useEffect} from 'react';\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport Login from '../Login/Login'\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport Rutas from '../../Rutas/index'\r\nimport {ValidarUsuarioConectadoReducer} from '../../Redux/Actions/Login/Login'\r\n\r\nfunction App() {\r\n\r\n    const ComunesCargandoPagina = useSelector(({comunes}) => comunes.ComunesCargandoPagina)\r\n    const ComunesCargandoPaginaInicio = useSelector(({comunes}) => comunes.ComunesCargandoPaginaInicio)\r\n    const LoginUsuid = useSelector(({login}) => login.LoginUsuid)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(async () => {\r\n\r\n        console.log('dispa')\r\n        await dispatch(ValidarUsuarioConectadoReducer())\r\n        // console.log(LoginUsuid)\r\n    }, [LoginUsuid]);\r\n\r\n\r\n    return (\r\n        <div style={{position:'relative'}}>\r\n            <ToastProvider>\r\n                <div style={{position:'absolute', width:'100%', height:'100vh'}}>\r\n                    <div style={{position:'relative'}}>\r\n                        \r\n                        {\r\n                            LoginUsuid != null\r\n                            // ?<div>rutas</div>\r\n                            ?<Rutas />\r\n                            :<Switch>\r\n                                <Route exact path='/login' component={Login}/>\r\n                            </Switch>\r\n                        }\r\n                        \r\n                        {\r\n                            LoginUsuid != null\r\n                            ?null\r\n                            :<Redirect to=\"/login\" />\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </ToastProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport generateStore, {history} from './Redux/Store/index';\r\nimport App from \"./Container/App/App\";\r\n\r\nfunction SiguienteApp() {\r\n\r\n    const store = generateStore()\r\n    \r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <ConnectedRouter history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" component={App}/>\r\n                </Switch>\r\n            </ConnectedRouter>\r\n        </Provider>        \r\n    );\r\n}\r\n\r\nexport default SiguienteApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SiguienteApp from './SiguienteApp';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SiguienteApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}